/*===일반행정용 전역변수 모음 START================================================*/
//사원, 부서 검색용 전역변수
var gmTextObjID = "";
var gmNameObjID = ""; 
var gmSearchTypeFlag = "";
var gmSearchGridObjID = "";
var gmSearchGridRow = "";
var gmSearchGridCol = "";

//화면 이벤트 이슈 처리용으로 사용할 변수 
var gridUserCellBeforeValue = "";
var gridDeptCellBeforeValue = "";
/*===일반행정용 전역변수 모음 END==================================================*/

/*============================================================================
 ** 기능  : 삭제 체크박스에 체크되어 있는 로우 삭제
 ** 인수  : ex ) "sub1", "vacaBasGrid", "reqVacaBas", "reqVacaBas/vacaBasList", "/is/deleteVacaBas.do", "C_Q002"
 ** 결과  : 
 ============================================================================*/
function deleteRowData(sbmissionId, grid, req, ref, url, messageId, messageParam) {
	messageId = (messageId == undefined) ? "C_Q002" : messageId;
	
	if (grid.getCheckedIndex( "delCheck" ).length == 0) {
	   showMsg("C_I006");
	   return;
	}
	
	showConfirm(messageId,"deleteRowDataAction('"+sbmissionId+"','"+ grid.getID() +"','"+req+"','"+ref+"','"+url+"')", messageParam);
}
function deleteRowDataAction(sbmissionId, grid, req, ref, url) {
	var delDataArray = eval(grid).getCheckedIndex( "delCheck" );
	var newRowArray = new Array();
	
	for (var i = 0 ; i < delDataArray.length ; i++) {
	    if (eval(grid).getRowStatus( delDataArray[i] ) == "C") {
	    	newRowArray[i] = delDataArray[i];
	    }
	}
	
	eval(grid).removeRows( newRowArray );
	 
	WebSquare.ModelUtil.removeChildNodes( req );
	 
	delDataArray = eval(grid).getCheckedIndex( "delCheck" );
	
	if( delDataArray.length == 0 ) return; 
	
	var doc = eval(grid).getCheckedXML( "delCheck" );
	
	WebSquare.ModelUtil.setInstanceNode( doc , req, null, "append");
	
	setAttribute(req + "/" + ref,"type","array");
	 
	execSubmission(sbmissionId, req + "/" + ref, "resultCnt", url);
}

function deleteOneRowDataAction(sbmissionId, grid, req, ref, url) {
	WebSquare.ModelUtil.removeChildNodes( req );
	 
	delDataArray = eval(grid).getRowIndexByStatus('D');
	
	var doc = eval(grid).getDeletedXML();
	
	WebSquare.ModelUtil.setInstanceNode( doc , req, null, "append");
	
	setAttribute(req + "/" + ref,"type","array");
	 
	execSubmission(sbmissionId, req + "/" + ref, "resultCnt", url);
}

/*============================================================================
 ** 기능  : 그리드 삭제 버튼 클릭 후 "예"를 선택시 로우 삭제
 ** 인수  : ex ) "sub1", "vacaBasGrid", row,"reqVacaBas", "reqVacaBas/vacaBasList", "/is/deleteVacaBas.do"
 ** 결과  : 
 ============================================================================*/
function oneRowDeleteYes(sub, grid, row, req, ref, url){
    if(eval(grid).getFocusedRowStatus() == 'V'){
        eval(grid).removeRow(row);
    }
    deleteOneRowDataAction(sub, grid, req, ref, url);
 }
/*============================================================================
 ** 기능  : 그리드 삭제 버튼 클릭 후 "아니오"를 선택시 status를 'D'에서 원래 대로 복구
 ** 인수  : ex ) row, "vacaBasGrid"
 ** 결과  : 
 ============================================================================*/
 function oneRowDeleteNo(row, grid){
    eval(grid).undeleteRow(row);
 }

/*============================================================================
 ** 기능  : 단건 삭제
 ** 인수  : ex ) "sub1, "respCmteActv/object/cmteActv", "deleteCmteActv", "resultCnt", "/is/deleteCmteActv.do"
 ** 결과  : 
 ============================================================================*/
function deleteOneData(sbmissionId, originNode, destNode, resp, url) {
	WebSquare.ModelUtil.copyChildrenNodes( originNode , destNode + "/object", "replaceAll");
    setAttribute(destNode,"type","array");
    execSubmission(sbmissionId, destNode, resp, url);
}

/*============================================================================
 ** 기능  : 그리드 유효성 체크
 ** 인수 :  grid 
 ** 결과  : 오류 false, 정상 true
 ============================================================================*/
function multiGridCheck(grid, arrCol, cancelMsg, cancelParam, dupCol) {

	cancelMsg = (cancelMsg == undefined || gmIsEmpty(cancelMsg)) ? "C_I012" : cancelMsg;
	cancelParam = gmIsEmpty(cancelParam) ? null : cancelParam;

	//C, U, D, V(신규 후 삭제) 상태 로우 번호를 배열로 가져온다
	var gridModifyData = grid.getRowIndexByStatus('CUDV');
    
	if (gridModifyData.length == 0) {
	   showMsg(cancelMsg,cancelParam);
	   return false;
	}
	
	var modifyIndexs = grid.getModifiedIndex(); //C, U, D 인덱스 가져오기
	var modifyNewAndRemoveIndexs = grid.getRowIndexByStatus('V');
	
	if(modifyIndexs.length == 0 && modifyNewAndRemoveIndexs.length > 0) {
		showConfirm("C_Q001","saveNoAction('"+ grid.getID() +"')");
		return false;
	}
	
    if(dupCol != undefined) {
    	return chkValidGrid(grid, arrCol, dupCol);
    }
	
    return chkValidGrid(grid, arrCol);
}

/*============================================================================
 ** 기능  : 입력 로우 상태가 V(신규 후 삭제)만 존재할시에 성공메세지 출력 후 로우 삭제
 ** 인수  : grid.getID()
 ** 결과  : 
 ============================================================================*/
function saveNoAction(grid){
	showMsg("C_I004");
	eval(grid).removeRows(eval(grid).getRowIndexByStatus('V'));
}

/*============================================================================
 ** 기능  : 그리드 등록/수정/삭제 처리
 ** 인수  : saveMultiData('sub1','clsfBasGrid', 'reqClsfBas/clsfBasList', 'clsfBasList/object', 'resp', '/is/mergeClsfBas.do');
 ** 결과  : 
 ============================================================================*/
function saveMultiData(submissionId, grid, reqNode, findNode, target, url ,delNode, syncBoolean) {
    /* 입력 또는 수정이 발생한 데이터를 담을 노드셋 초기화 */
	WebSquare.ModelUtil.removeChildNodes( reqNode );
	console.log('WebSquare.ModelUtil.removeChildNodes( reqNode )');
	
    /* C,U,D 가 발생한 XML 데이터 추출 */
    var grdDoc = grid.getModifiedXML();
    
	/* XPath로 검색하여 일치하는 노드 목록을 Array로 반환한다.*/
	var mapArr = WebSquare.xml.findNodes( grdDoc , findNode );               

    WebSquare.ModelUtil.removeInstanceNode( reqNode );
    console.log('WebSquare.ModelUtil.removeInstanceNode( reqNode )');
    
	/* 추출한 xml data의 object별로 row의 CRUD 상태 노드를 추가한다 */
	var tmpXml;
	for(var i = 0; i < mapArr.length; i++) {
	    tmpXml = mapArr[i];
	    var statusValue = WebSquare.xml.getAttribute( tmpXml, "statusValue" );
	    WebSquare.xml.setValue( tmpXml, "status", statusValue );
	    /* 실제 저장할 때 서버로 전달할 xml 데이터에 한줄씩 append 한다. */
	    WebSquare.ModelUtil.setInstanceNode( tmpXml, reqNode, null, "append" );
	}
	console.log('for(var i = 0; i < mapArr.length; i++) {');
	
    for(var index in delNode){
    	WebSquare.ModelUtil.removeInstanceNodes(reqNode+"/object/"+delNode[index]);	
    }
    console.log('WebSquare.ModelUtil.removeInstanceNodes(reqNode+"/object/"+delNode[index])');
    
	/* 서버로 전달할 xml data가 array type 임을 추가 */
	setAttribute(reqNode, "type", "array");
	console.log('setAttribute(reqNode, "type", "array");');
		
	
	/* 서브미션 실행 */
	execSubmission(submissionId,reqNode,target,url,syncBoolean);                 
}

/*============================================================================
 ** 기능  : 그리드 체크된 데이터 등록/수정/삭제 처리
 ** 인수  : saveCheckedData('sub1','clsfBasGrid', 'reqClsfBas/clsfBasList', 'clsfBasList/object', 'resp', '/is/mergeClsfBas.do');
 ** 결과  : 
 ============================================================================*/
function saveCheckedData(submissionId, grid, reqNode, findNode, target, url ,delNode, syncBoolean) {
    /* 입력 또는 수정이 발생한 데이터를 담을 노드셋 초기화 */
	WebSquare.ModelUtil.removeChildNodes( reqNode );
	console.log('WebSquare.ModelUtil.removeChildNodes( reqNode )');
    /* C,U,D 가 발생한 XML 데이터 추출 */
    var grdDoc = grid.getCheckedXML(0);
    
	/* XPath로 검색하여 일치하는 노드 목록을 Array로 반환한다.*/
	var mapArr = WebSquare.xml.findNodes( grdDoc , findNode );               

    WebSquare.ModelUtil.removeInstanceNode( reqNode );
    console.log('WebSquare.ModelUtil.removeInstanceNode( reqNode )');
    
	/* 추출한 xml data의 object별로 row의 CRUD 상태 노드를 추가한다 */
	var tmpXml;
	for(var i = 0; i < mapArr.length; i++) {
	    tmpXml = mapArr[i];
	    var statusValue = WebSquare.xml.getAttribute( tmpXml, "statusValue" );
	    WebSquare.xml.setValue( tmpXml, "status", statusValue );
	    /* 실제 저장할 때 서버로 전달할 xml 데이터에 한줄씩 append 한다. */
	    WebSquare.ModelUtil.setInstanceNode( tmpXml, reqNode, null, "append" );
	}
	console.log('for(var i = 0; i < mapArr.length; i++) {');
	
    for(var index in delNode){
    	WebSquare.ModelUtil.removeInstanceNodes(reqNode+"/object/"+delNode[index]);	
    }
    console.log('WebSquare.ModelUtil.removeInstanceNodes(reqNode+"/object/"+delNode[index])');
    
	/* 서버로 전달할 xml data가 array type 임을 추가 */
	setAttribute(reqNode, "type", "array");
	console.log('setAttribute(reqNode, "type", "array");');
		
	
	/* 서브미션 실행 */
	execSubmission(submissionId,reqNode,target,url,syncBoolean);                 
}

/*============================================================================
 ** 기능  : 신규상태 행의 체크박스 체크 시 해당 행 지우개
 ** 인수 : 행번호, 그리드id, 그리드 내 체크박스 컬럼 id
 ** 결과  : 
 ============================================================================*/
function deleteRowStatus(rowIndex, grid){
    if(grid.getCellData( rowIndex , "delCheck" ) == "1"){
    	grid.deleteRow(rowIndex);
    } else {
    	grid.undeleteRow(rowIndex);
    }
}

 
/*============================================================================
 ** 기능  : 신규상태 행의 체크박스 체크 시 해당 행 연필
 ** 인수 : 행번호, 그리드id, 그리드 내 체크박스 컬럼 id
 ** 결과  : 
 ============================================================================*/
function updateRowStatus(rowIndex, grid, colNm){
    if(grid.getCellData( rowIndex , colNm ) == "1"){
    	grid.modifyRowStatus(rowIndex, "U");
    } else {
    	grid.modifyRowStatus(rowIndex, "R");
    }
}

/*============================================================================
 ** 기능  : 신규상태 행의 체크박스 체크 시 해당 행 지우개
 ** 인수  : grid id, Check Status
 ** 결과  : 
 ============================================================================*/
function allDelCheck(grid, checked) {
	if(checked){
		for (var i=0;i<grid.getRowCount();i++) {
			grid.setCellChecked(i,"delCheck", true );
			grid.deleteRow(i);
        }
	} else {
		for (var i=0;i<grid.getRowCount();i++) {
			grid.setCellChecked(i,"delCheck", false);
			grid.undeleteRow(i);
        }
	}
}

/*============================================================================
 ** 기능  : 체크박스 ALL Check
 ** 인수  : grid id, Check Status, cellID 
 ** 결과  : 체크박스 전부체크 
 ============================================================================*/
function allCheck(grid, checked, cellId) {
    if(checked){
        for (var i=0;i<grid.getRowCount();i++) {
            grid.setCellChecked(i,cellId, true );
        }
    } else {
        for (var i=0;i<grid.getRowCount();i++) {
            grid.setCellChecked(i,cellId, false);
        }
    }
}

/*============================================================================
 ** 기능  : 해당 그리드의 로우에 포커스를 준다
 ** 인수  : grid, 그리드 칼럼명, 비교할 키값 
 ** 결과  : 포커스 로우 번호
 ============================================================================*/
function setFocusRow() {
	var matchIdxArr = new Array();
    var grid   = arguments[0];
    var columnNames = arguments[1];
    var stringKeys   = arguments[2];       // 비교 대상 변수
    var stringKey = "";
    var row = "";
    
    for(var index in stringKeys){
    	stringKey += stringKeys[index].getValue();
    }
     
    for (var index = 0; index < grid.getRowCount(); index++) { 
         // 그리드내에 동일한 자료가 있는지 체크 한다. getMatched  함수는 한개의 필드에 대해서만 비교하기 때문에 일일이 비교 하여 처리
         var matchCnt = 0;
         var stringData = "";
         
         for (var colIndex in columnNames){  
             stringData += grid.getCellData( index, columnNames[colIndex] );   
         }   
         if (stringKey == stringData) {
        	grid.setFocusedCell(parseInt(index), columnNames[0] );
        	row = index;
         }
    }
    
    return row;
}

 
/*===============================================================
 * function    : onClickChgrPopUpCallBack
 * Description : 예산회계 책임자사번 목록 팝업 후에 호출되는 콜백
 * ☆ 화면에 onClickChgrPopUpCallBack(arrResult) 함수를 생성한 후에 처리
 * Parameter   : arrResult( 예산회계 책임자사번 정보 배열)
 * Return      :  예산회계 책임자사번 정보 배열
 **===============================================================*/
function onClickChgrPopUpCallBack(arrResult, chgrEnoID, chgrNmID) {
	if (arrResult != undefined && arrResult != null) {
		eval(chgrEnoID).setValue( arrResult[0] );
		eval(chgrNmID).setValue( arrResult[1] );
    }
}
 /*===============================================================
 * function    : onClickChgrPopUp
 * Description : 예산회계의 책임코드 팝업 호출
 * Parameter   : 책임코드 오브젝트, 책임자명 오브젝트, 서브미션
 * Return      : null
 **===============================================================*/
function onClickChgrPopUp(chgrEno,chgrNm, subMissionId){
	var chgrEnoID = WebSquare.text.BASE64URLEncoder(chgrEno.getID());
	var chgrNmID  = WebSquare.text.BASE64URLEncoder(chgrNm.getID());
	var eChgrEno = WebSquare.text.BASE64URLEncoder(chgrEno.getValue());
	if(event.type != 'click') {
 		if(chgrEno.getValue().length < 1) {
 			chgrNm.setValue("");
 			return;
 		}
 	} 
	
	if(event.type == 'click'){
    //var eChgrEno = WebSquare.text.BASE64URLEncoder(chgrEno.getValue());
		var rArr = openPopup("onClickChgrPopUpCallBack","/views/gm/ys/GM_YS_1031.xml"
		                   , { width      : 580
		                     , height     : 530
		                     , resizable  : false
		                     , scrollbars : false }
		                   , {pChgrEno:eChgrEno,chgrEnoID:chgrEnoID,chgrNmID:chgrNmID}) ;
	
	}else{
		  WebSquare.ModelUtil.setInstanceValue( "reqChgr/chgrEno" , chgrEno.getValue() );
		  WebSquare.ModelUtil.setInstanceValue( "reqChgr/acctyCd" , getValue("respFrameAcctyBass/object/acctyBass/acctyCd") );
		  execSubmission(subMissionId, "reqChgr", "resChgrEno","/ys/listBudgChgrCdPopup.do");
	  	  
		  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resChgrEno/object/budgetBaseList/object");
	      rowCount = dataArr.length;
         	      
	      if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
		  	  var arrResult = new Array();
		      arrResult.push(getValue("resChgrEno/object/budgetBaseList/object[1]/chgrEno"));
		      arrResult.push(getValue("resChgrEno/object/budgetBaseList/object[1]/chgrNm"));
		      onClickChgrPopUpCallBack(arrResult,chgrEno.getID(),chgrNm.getID());
	      }else if(rowCount == 0){
	    	    chgrEno.setValue("");
	    	    chgrNm.setValue("");
	        	showMsg("C_I041", "검색한 결과");
	        	
	      }else {   //데이터가 여러개인 경우 팝업띄움 
			  var rArr = openPopup("onClickChgrPopUpCallBack","/views/gm/ys/GM_YS_1031.xml"
	                   , { width      : 580
	                     , height     : 530
	                     , resizable  : false
	                     , scrollbars : false }
	                   , {pChgrEno:eChgrEno,chgrEnoID:chgrEnoID,chgrNmID:chgrNmID}) ;
		  }
	}
}
/*===============================================================
 * function    : onClickCpcdPopUpCallBack
 * Description : 예산회계 책임자사번 목록 팝업 후에 호출되는 콜백
 * ☆ 화면에 onClickCpcdPopUpCallBack(arrResult) 함수를 생성한 후에 처리
 * Parameter   : arrResult( 예산회계 책임자사번 정보 배열)
 * Return      :  예산회계 책임자사번 정보 배열
 **===============================================================*/
function onClickCpcdPopUpCallBack(arrResult, cardNoID, cardMngNmID) {
	if (arrResult != undefined && arrResult != null) {
		eval(cardNoID).setValue( arrResult[0] );              
		eval(cardMngNmID).setValue( arrResult[1] );              
    }
}
/*===============================================================
* function    : onClickCpcdPopUp
* Description : 예산회계의 법인카드 팝업 호출
* Parameter   : 법인카드 오브젝트, 서브미션
* Return      : null
**===============================================================*/
function onClickCpcdPopUp(cardNo, cardMngNm, subMissionId){
	var cardNoID = WebSquare.text.BASE64URLEncoder(cardNo.getID());
	var cardMngNmID  = WebSquare.text.BASE64URLEncoder(cardMngNm.getID());
	var eCardNo = WebSquare.text.BASE64URLEncoder(cardNo.getValue());
	if(event.type != 'click') {
 		if(cardNo.getValue().length < 1) {
 			cardMngNm.setValue("");
 			return;
 		}
 	} 
	if(event.type == 'click'){
		var rArr = openPopup("onClickCpcdPopUpCallBack","/views/gm/hg/GM_HG_1032.xml"
		                   , { width      : 580
		                     , height     : 530
		                     , resizable  : false
		                     , scrollbars : false }
		                   , {pCardNo:eCardNo,cardNoID:cardNoID,cardMngNmID:cardMngNmID}) ;
	}else{
		  WebSquare.ModelUtil.setInstanceValue( "reqCard/cardNo" , cardNo.getValue() );
		  execSubmission(subMissionId, "reqCard", "resCardNo","/hg/searchListCpcd.do");
	  	  
		  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resCardNo/object/searchCpcdList/object");
	      rowCount = dataArr.length;
       	      
	      if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
		  	  var arrResult = new Array();
		      arrResult.push(getValue("resCardNo/object/searchCpcdList/object[1]/cardNo"));
		      arrResult.push(getValue("resCardNo/object/searchCpcdList/object[1]/cardMngNm"));
		      onClickChgrPopUpCallBack(arrResult,cardNo.getID(),cardMngNm.getID());
	      }else if(rowCount == 0){
	    	  cardNo.setValue("");
	    	  cardMngNm.setValue("");
	          showMsg("C_I041", "검색한 결과");
	        	
	      }else {   //데이터가 여러개인 경우 팝업띄움 
	    	  var rArr = openPopup("onClickCpcdPopUpCallBack","/views/gm/hg/GM_HG_1032.xml"
	                   , { width      : 580
	                     , height     : 530
	                     , resizable  : false
	                     , scrollbars : false }
	                   , {pCardNo:eCardNo,cardNoID:cardNoID,cardMngNmID:cardMngNmID}) ;
		  }
	}
}
/*===============================================================
 * function    : onClickMngCdPopUpCallBack
 * Description : 예산회계 책임자사번 목록 팝업 후에 호출되는 콜백
 * ☆ 화면에 onClickMngCdPopUpCallBack(arrResult) 함수를 생성한 후에 처리
 * Parameter   : arrResult( 예산회계 책임자사번 정보 배열)
 * Return      :  예산회계 책임자사번 정보 배열
 **===============================================================*/
function onClickMngCdPopUpCallBack(arrResult, mngCdID, mngNmID) {
	if (arrResult != undefined && arrResult != null) {
		eval(mngCdID).setValue( arrResult[0] );              
		eval(mngNmID).setValue( arrResult[1] );              
    }
}
 /*===============================================================
 * function    : onClickMngCdPopUp
 * Description : 예산회계의 관리코드 팝업 호출
 * Parameter   : 관리코드/명 오브젝트, 서브미션
 *               Flag : 1(계정), 2(일반), null(전체)
 * Return      : null
 **===============================================================*/
function onClickMngCdPopUp(mngCd, mngNm, subMissionId, Flag){
	    var mngCdID = WebSquare.text.BASE64URLEncoder(mngCd.getID());
	    var mngNmID  = WebSquare.text.BASE64URLEncoder(mngNm.getID());
    	var eMngCd = WebSquare.text.BASE64URLEncoder(mngCd.getValue());
    	var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
    
    	if(event.type != 'click') {
     		if(mngCd.getValue().length < 1) {
     			mngNm.setValue("");
     			return;
     		}
     	} 
    	
    	if(event.type == 'click'){
    		var rArr = openPopup("onClickMngCdPopUpCallBack","/views/gm/hg/GM_HG_1061.xml"
		                   , { width      : 580
		                     , height     : 530
		                     , resizable  : false
		                     , scrollbars : false }
		                   , {pMngCd:eMngCd,pFlag:eFlag,mngCdID:mngCdID,mngNmID:mngNmID}) ;
    	}else{
          WebSquare.ModelUtil.setInstanceValue( "reqMngCd/mngCd" , mngCd.getValue() );
          execSubmission(subMissionId, "reqMngCd", "resMngCd", "/hg/listMngCdPopup.do");
  		  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resMngCd/object/mngCdList/object");
  	      rowCount = dataArr.length;
           	      
  	      if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
  		  	  var arrResult = new Array();
  		      arrResult.push(getValue("resMngCd/object/mngCdList/object[1]/mngCd"));
  		      arrResult.push(getValue("resMngCd/object/mngCdList/object[1]/mngNm"));
  		      onClickChgrPopUpCallBack(arrResult,mngCd.getID(),mngNm.getID());
  	      }else if(rowCount == 0){
  	    	  	mngCd.setValue("");
  	    	    mngNm.setValue("");
  	        	showMsg("C_I041", "검색한 결과");
  	        	
  	      }else {   //데이터가 여러개인 경우 팝업띄움 
  			  var rArr = openPopup("onClickMngCdPopUpCallBack","/views/gm/hg/GM_HG_1061.xml"
  	                   , { width      : 580
  	                     , height     : 530
  	                     , resizable  : false
  	                     , scrollbars : false }
  			           , {pMngCd:eMngCd,pFlag:eFlag,mngCdID:mngCdID,mngNmID:mngNmID}) ;
  		  }
  	}
} 
/*===============================================================
 * function    : onClickDocfmPopUpCallBack
 * Description : 예산회계 책임자사번 목록 팝업 후에 호출되는 콜백
 * ☆ 화면에 onClickDocfmPopUpCallBack(arrResult) 함수를 생성한 후에 처리
 * Parameter   : arrResult( 예산회계 책임자사번 정보 배열)
 * Return      :  예산회계 책임자사번 정보 배열
 **===============================================================*/
function onClickDocfmPopUpCallBack(arrResult, docfmSetCdID, docfmSetNmID) {
	if (arrResult != undefined && arrResult != null) {
		eval(docfmSetCdID).setValue( arrResult[0] );              
		eval(docfmSetNmID).setValue( arrResult[1] );              
    }
	
	if (typeof setDocFmInfo == 'function') {
		setDocFmInfo(arrResult);
	}
}
 /*===============================================================
 * function    : onClickDocfmSetPopUp
 * Description : 예산회계의 보고서서식세트 팝업 호출
 * Parameter   : 
 * Return      : null
 **===============================================================*/
function onClickDocfmSetPopUp(docfmSetCd, docfmSetNm, acctyCd, subMissionId){
	    var docfmSetCdID = WebSquare.text.BASE64URLEncoder(docfmSetCd.getID());
	    var docfmSetNmID  = WebSquare.text.BASE64URLEncoder(docfmSetNm.getID());
    	var eDocfmSetCd = WebSquare.text.BASE64URLEncoder(docfmSetCd.getValue());		
    	if(event.type != 'click') {
     		if(docfmSetCd.getValue().length < 1) {
     			docfmSetNm.setValue("");
     			return;
     		}
     	} 
    	if(event.type == 'click'){
	    	var rArr = openPopup("onClickDocfmPopUpCallBack","/views/gm/hg/GM_HG_1114.xml"
			                   , { width      : 580
			                     , height     : 530
			                     , resizable  : false
			                     , scrollbars : false }
			                   , {pDocfmSetCd:eDocfmSetCd,docfmSetCdID:docfmSetCdID,docfmSetNmID:docfmSetNmID}) ;
    	}else{
    		WebSquare.ModelUtil.setInstanceValue( "reqDocfmSet/searchDocfmSetCd" , docfmSetCd.getValue() );
    		execSubmission(subMissionId, "reqDocfmSet", "resDocfmSet","/hg/listDocfmSetPopup.do");
  	  	  
  		    var dataArr = WebSquare.ModelUtil.findInstanceNodes("resDocfmSet/object/searchAcctyDocfmList/object");
  	        rowCount = dataArr.length;
         	      
  	        if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
  		  	  var arrResult = new Array();
  		      arrResult.push(getValue("resDocfmSet/object/searchAcctyDocfmList/object[1]/docfmSetCd"));
  		      arrResult.push(getValue("resDocfmSet/object/searchAcctyDocfmList/object[1]/docfmSetNm"));
  		      onClickDocfmPopUpCallBack(arrResult,docfmSetCd.getID(),docfmSetNm.getID());
  	        }else if(rowCount == 0){
  	          docfmSetCd.setValue("");
  	          docfmSetNm.setValue("");
  	          showMsg("C_I041", "검색한 결과");
  	        }else {   //데이터가 여러개인 경우 팝업띄움 
  	    	  var rArr = openPopup("onClickDocfmPopUpCallBack","/views/gm/hg/GM_HG_1114.xml"
  	                   , { width      : 580
  	                     , height     : 530
  	                     , resizable  : false
  	                     , scrollbars : false }
  	    	           , {pDocfmSetCd:eDocfmSetCd,docfmSetCdID:docfmSetCdID,docfmSetNmID:docfmSetNmID}) ;
  		    }
  	}	
}
/*===============================================================
 * function    : checkboxYAndN
 * Description : 체크박스 Y,N 
 * Parameter   : checkbox, Checked(true,false)
 * Return      : 
 **===============================================================*/
function checkboxYOrN(checkbox, checked) {
	if(checked){
		checkbox.setValue("Y");
		return;
	}
	checkbox.setValue("N");
}

/*===============================================================
 * function    : checkboxYAndNull
 * Description : 체크박스 Y,Null 
 * Parameter   : checkbox, Checked(true,false)
 * Return      : 
 **===============================================================*/
function checkboxYOrNull(checkbox, checked) {
	if(checked){
		checkbox.setValue("Y");
		return;
	}
	checkbox.setValue(null);
}

/*===============================================================
 * function    : setCheckboxDefaultValue
 * Description : 체크박스 초기값 세팅 
 * Parameter   : checkbox[], defaultValue
 * Return      : 
 **===============================================================*/
function setCheckboxDefaultValue(checkbox, defaultValue) {
    for(var i=0; i<checkbox.length;i++){
        checkbox[i].setValue(defaultValue);
    }
}
/*===============================================================
 * function    : checkNotNull
 * Description : 임시
 * Parameter   : grid, cols[]
 * Return      : 
 **===============================================================*/
function checkNotNull()
{
var grid = arguments[0];
var cols = arguments[1];
var valid = true;
    for(var rowIndex=0; rowIndex<grid.getRowCount();rowIndex++)
    {
        for(var colIndex=0;colIndex<cols.length;colIndex++)
        {
            if(grid.getCellData(rowIndex,cols[colIndex])=="" || grid.getCellData(rowIndex,cols[colIndex])==null)
            {
            	grid.setCellBackgroundColor(rowIndex,cols[colIndex],"RED");
                valid = false;
            }
            else{
            	grid.setCellBackgroundColor(rowIndex,cols[colIndex],"");
            }
        }
    }
    return valid;
}

/*===============================================================
 * function    : getGmSelectBoxCode
 * Description : 일반행정 공통코드 
 * Parameter   : submissionId, selectTypeCodes, searchConditions, conditionValues 
 * 				 ex) getGmSelectBoxCode("sub",["CLSF_CD","HFFC_STAT_CD"],["clsfIdntLclsCd","clsfIdntMclsCd"],["1","3"]);
 * 				 각 코드와 쿼리 검색조건은 GmCodeSearchCondition.java, GmCodeTypes.java 파일 참고 
 * Return      : 
 **===============================================================*/
function getGmSelectBoxCode(submissionId, selectTypeCodes, searchConditions, conditionValues){
	setValue("reqGmCode/selectCodeTypes" ,"");
    
    setAttribute("reqGmCode/selectCodeTypes","type","array");
    
    WebSquare.ModelUtil.removeChildNodes( "reqGmCode/selectCodeTypes" );
    
    for(var index in selectTypeCodes) {
    	var doc = WebSquare.xml.parse( "<object>"+selectTypeCodes[index]+"</object>" );
    	WebSquare.ModelUtil.setInstanceNode( doc, "reqGmCode/selectCodeTypes", null, "append" );
    }
    
    for(var index in searchConditions) {
    	setValue("reqGmCode/"+searchConditions[index], conditionValues[index]);
    }
    
    execSubmission(submissionId, "reqGmCode", "responseGmCode", "/gm/listGmCode.do");
    
    WebSquare.ModelUtil.removeChildNodes( "reqGmCode" );
}

/*============================================================================
 ** 기능  : 셀렉트박스 코드 조회 후 selectbox 컴포넌트 에 노드를 세팅
 ** 인수 : 
 ** 결과  : 
 ============================================================================*/
function setGmSelectBoxNode(selectbox, codeId, label, value) {
	var node = "responseGmCode/object/" + codeId + "/object";

	if(label == undefined) {
        selectbox.setNodeSet(node);
    } else {
        selectbox.setNodeSet(node, label, value);
    }
}

/*============================================================================
 ** 기능  : 화면에 필요한 코드의 node를 생성해놓고 필터링
 ** 인수 : 
 ** 결과  : 
 ============================================================================*/
function gmSelectBoxFilter(selectbox, codeId) {
	var filterCds = arguments[2];
	var filterValues = arguments[3];
	var param = "";
	
	for(var index in filterCds) {
		if(index > 0) {
			param += " and ";
		}
		
		param += filterCds[index]+"='"+filterValues[index]+"'";
	}
	
	selectbox.setNodeSet("responseGmCode/object/"+codeId+"/object["+param+"]");
}

/*============================================================================
 ** 기능  : 백분율<->소수점 변환(예산회계)
 ** 인수  : 변환 number, 변환 type("%" 소숫점 -> 퍼센트, "." 퍼센트 -> 소숫점)
 ** 리턴  : 결과값
 ============================================================================*/
function parsePercent(number,pFlag) {
    if(pFlag=="%"){
        return number*100;
    } else if(pFlag==".") {
        return number/100;
    }
}
/*============================================================================
 ** 기능  : 백분율<->소수점 변환(예산회계)
 ** 인수  : 변환 node, 변환 type("%" 소숫점 -> 퍼센트, "." 퍼센트 -> 소숫점)
 ** 리턴  : 해당 노드에 직접 변환값 세팅
 ============================================================================*/
function parsePercentByNode(node,pFlag) {
    if(pFlag=="%"){
        setValue(node, getValue(node)*100);
    } else if(pFlag==".") {
        setValue(node, getValue(node)/100);
    }
}

/*============================================================================
 ** 기능  : 신분분류 핸들링
 ** 인수  : 각 SelectBox Object
 ** 리턴  : 
 ============================================================================*/
function changeClsfCd() {
    var obj = arguments[0];
	
	if(obj == null) {
		clearSelectBox(selectJobcCd);
		clearSelectBox(selectClsfSubCd);
		selectClsfLCd.setNodeSet('responseGmCode/object/clsfLCd/object','idntLclsCdnm','idntLclsCd');
	}else {
		if(obj.getID() == "selectClsfLCd"){
			clearSelectBox(selectClsfSubCd);
			if(arguments[1] == null || arguments[1] == ""){
				selectJobcCd.setNodeSet('responseGmCode/object/jobcCd/object[idntLclsCd=' + obj.getValue() + ']','jobcCdnm','jobcCd');	
			}else{
				var dataArr = WebSquare.ModelUtil.findInstanceNodes('responseGmCode/object/jobcCd/object[subInfoVal9=' + arguments[1] + ']');
				if(dataArr.length == 0){		
					selectJobcCd.setNodeSet('responseGmCode/object/jobcCd/object[idntLclsCd=' + obj.getValue() + ']','jobcCdnm','jobcCd');				
				}else{
					selectJobcCd.setNodeSet('responseGmCode/object/jobcCd/object[idntLclsCd=' + obj.getValue() + " and subInfoVal9=" + arguments[1] + ']','jobcCdnm','jobcCd');					
				}
			}
		} else if(obj.getID() == "selectJobcCd") {
			selectClsfSubCd.setNodeSet('responseGmCode/object/clsfSubCd/object[idntLclsCd='+selectClsfLCd.getValue()+' and jobcCd='+selectJobcCd.getValue()+']','clsfNm','clsfCd');
		}
	}
}

/*============================================================================
 ** 기능  : 신분분류 핸들링
 ** 인수  : 각 SelectBox Object
 ** 리턴  : 
 ============================================================================*/
function changeAplcCd() {
	var obj = arguments[0];
	if(obj == null) {
		clearSelectBox(selRcit);
		schAplcCd.setNodeSet('responseGmCode/object/aplcCd/object','aplcCdnm','rcritYearTimscd');
	}else {
		clearSelectBox(selRcit);
		selRcit.setNodeSet('responseGmCode/object/aplcFiedCd/object[rcritYear=' + obj.getValue().substring(0,4) + ' and rcritTims=' + obj.getValue().substring(4,5) + ']','rcritNm','rcritFiedNm');		
	}
}

/*============================================================================
 ** 기능  : SelectBox 초기화
 ** 인수  : 
 ** 리턴  : 
 ============================================================================*/
function clearSelectBox(selectBox) {
	selectBox.removeAll();
	if(selectBox.hasClass("se_combo_E")){
		selectBox.addItem('','-선택-',0);	
	} else if(selectBox.hasClass("se_combo")){
		selectBox.addItem('','$blank',0);	
	} else if(selectBox.hasClass("if_combo") || selectBox.hasClass("if_combo_E")){
		selectBox.addItem('','-전체-',0);	
	}
	selectBox.setSelectedIndex(0);
}

/*============================================================================
 ** 기능  : 두 날짜의 차이를 일자로 구한다.(조회 종료일 - 조회 시작일) -추후삭제 가능
 ** 인수  : val1 - 조회 시작일(날짜 ex.2002-01-01), val2 - 조회 종료일(날짜 ex.2002-01-01)
 ** 리턴  : 기간에 해당하는 일자
 ============================================================================*/
function calDateRange(val1, val2)
{
    // FORMAT을 포함한 길이 체크
    if (val1.length != 8 || val2.length != 8)
        return 0;

    var from_dt = new Date(val1.substr(0,4), val1.substr(4,2)-1,val1.substr(6,2));
    var to_dt = new Date(val2.substr(0,4), val2.substr(4,2)-1,val2.substr(6,2));

    return (to_dt.getTime() - from_dt.getTime()) / 1000 / 60 / 60 / 24 + 1;
}

/*============================================================================
 ** 기능  : 일반행정 거주자우편번호
 ** 인수  : null
 ** 리턴  : rsdnZip1,rsdnZip2,rsdnBasAddr
 ** 참고  : postfix 로 '2' 붙은 function 은 도로명주소 및 신규 우편번호를 리턴하는 function 임 
 ============================================================================*/
function gmZipOpenPopUp() {
	openPopup("gmZipValue","/views/cm/PG_CM_0042.xml"
            , { width      : 800
              , resizable  : false
              , scrollbars : false }
            ) ; 
}
function gmZipValue(returnArr){
    if (returnArr != undefined && returnArr != null && returnArr.length > 0) {
    	rsdnZip.setValue( returnArr[0]+returnArr[1] );
    	rsdnBasAddr.setValue( returnArr[2] );
    	
    }
}
function gmZipOpenPopUp2() {
	openPopup("gmZipValue2","/views/cm/PG_CM_0103.xml"
            , { width      : 800
              , resizable  : false
              , scrollbars : false }
            ) ; 
}
function gmZipValue2(returnArr){
    if (returnArr != undefined && returnArr != null && returnArr.length > 0) {
    	rsdnZip.setValue( returnArr[0] );
    	rsdnBasAddr.setValue( returnArr[1] );
    	
    }
}

/*============================================================================
 ** 기능  : 일반행정 본적지 우편번호
 ** 인수  : null
 ** 리턴  : pofrZip1,pofrZip2,pofrBasAddr
 ** 참고  : postfix 로 '2' 붙은 function 은 도로명주소 및 신규 우편번호를 리턴하는 function 임
 ============================================================================*/
function gmZipPofOpenPopUp() {
	 openPopup("gmZipPopupValue","/views/cm/PG_CM_0042.xml"
            , { width      : 800
              , resizable  : false
              , scrollbars : false }
            ) ; 
}
function gmZipPopupValue(returnArr){
    if (returnArr != undefined && returnArr != null && returnArr.length > 0) {
    	
    	pofrZip.setValue( returnArr[0]+returnArr[1] );
    	pofrBasAddr.setValue( returnArr[2] );
    }
}

function gmZipPofOpenPopUp2() {
	 openPopup("gmZipPopupValue2","/views/cm/PG_CM_0103.xml"
           , { width      : 800
             , resizable  : false
             , scrollbars : false }
           ) ; 
}
function gmZipPopupValue2(returnArr){
   if (returnArr != undefined && returnArr != null && returnArr.length > 0) {
   	
   	   pofrZip.setValue( returnArr[0] );
   	   pofrBasAddr.setValue( returnArr[1] );
   }
}

/*============================================================================
 ** 기능  : 일반행정 직장 우편번호
 ** 인수  : null
 ** 리턴  : pofrZip1,pofrZip2,pofrBasAddr
 ** 참고  : postfix 로 '2' 붙은 function 은 도로명주소 및 신규 우편번호를 리턴하는 function 임
 ============================================================================*/
function gmZipWrkpOpenPopUp() {
	openPopup("gmZipWrkpValue","/views/cm/PG_CM_0042.xml"
			, { width      : 800
		, resizable  : false
		, scrollbars : false }
	) ; 
}
function gmZipWrkpValue(returnArr){
	if (returnArr != undefined && returnArr != null && returnArr.length > 0) {
		
		wrkpZip.setValue( returnArr[0]+returnArr[1] );
		wrkpBasAddr.setValue( returnArr[2] );
	}
}

function gmZipWrkpOpenPopUp2() {
	openPopup("gmZipWrkpValue2","/views/cm/PG_CM_0042.xml"
			, { width      : 800
		, resizable  : false
		, scrollbars : false }
	) ; 
}
function gmZipWrkpValue2(returnArr){
	if (returnArr != undefined && returnArr != null && returnArr.length > 0) {
		
		wrkpZip.setValue( returnArr[0] );
		wrkpBasAddr.setValue( returnArr[1] );
	}
}

/*============================================================================
** 기능  : 일반행정 사번팝업
** 인수  : 사번/성명, 성명 오브젝트
** 리턴  : 
    "responseGmSearchUserInfo/eno"        사번            
    "responseGmSearchUserInfo/stafNm"     교직원성명      
    "responseGmSearchUserInfo/iidno"      주민등록번호      
    "responseGmSearchUserInfo/birth"      생년월일        
    "responseGmSearchUserInfo/sexCd"      성별코드      
    "responseGmSearchUserInfo/sexCdNm"    성별코드명   
    "responseGmSearchUserInfo/clsfCd"     직급코드       
    "responseGmSearchUserInfo/clsfNm"     직급명        
    "responseGmSearchUserInfo/deptCd"     부서코드       
    "responseGmSearchUserInfo/deptNm"     부서코드명      
    "responseGmSearchUserInfo/hffcStatCd" 재직상태코드
    "responseGmSeazrchUserInfo/hffcStatDt" 재직상태일자
    "responseGmSearchUserInfo/hffcStatNm" 재직상태명
    "responseGmSearchUserInfo/nltyCd" 국적코드
    "responseGmSearchUserInfo/nltyCdNm" 국적코드명
    "responseGmSearchUserInfo/salcCd" 호봉코드
    "responseGmSearchUserInfo/salcNm" 호봉코드명
    "responseGmSearchUserInfo/payFormCd" 급여형태코드
    "responseGmSearchUserInfo/payFormCdNm" 급여형태코드명
    "responseGmSearchUserInfo/rtirDt" 퇴직일자
    "responseGmSearchUserInfo/jobcCd" 직종코드
    "responseGmSearchUserInfo/jobcCdNm" 직종코드명
    "responseGmSearchUserInfo/payBankCd" 급여은행코드
    "responseGmSearchUserInfo/payBankCdNm" 급여은행코드명
    "responseGmSearchUserInfo/payAcno" 급여계좌번호
    "responseGmSearchUserInfo/payDepoNm" 급여예금주명
============================================================================*/
function gmUserSearch(textObj, nameObj) {
	gmSearchTypeFlag = "form";
	gmTextObjID = textObj.getID();
	gmNameObjID = nameObj.getID();
	nameObj.setValue("");
	var value = textObj.getValue();
	textObj.setValue("");
	
	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
	if(event.type != 'click') {
		if(value.length < 1) {
			nameObj.setValue("");
			return;
		} else if(value.length < 1) {
			showMsg("C_I054", "사번/성명을 1자 이상");
			return;
		}
	} 
	getGmUserInfo(event.type, value, arguments[2], arguments[3], arguments[4], arguments[5],arguments[6]);
}
/*============================================================================
 ** 기능  : 일반행정 사번팝업(파이어폭스 대응)
 ** 인수  : 사번/성명, 성명 오브젝트
 ** 리턴  : 
    "responseGmSearchUserInfo/eno"        사번            
    "responseGmSearchUserInfo/stafNm"     교직원성명      
    "responseGmSearchUserInfo/iidno"      주민등록번호      
    "responseGmSearchUserInfo/birth"      생년월일        
    "responseGmSearchUserInfo/sexCd"      성별코드      
    "responseGmSearchUserInfo/sexCdNm"    성별코드명   
    "responseGmSearchUserInfo/clsfCd"     직급코드       
    "responseGmSearchUserInfo/clsfNm"     직급명        
    "responseGmSearchUserInfo/deptCd"     부서코드       
    "responseGmSearchUserInfo/deptNm"     부서코드명      
    "responseGmSearchUserInfo/hffcStatCd" 재직상태코드
    "responseGmSeazrchUserInfo/hffcStatDt" 재직상태일자
    "responseGmSearchUserInfo/hffcStatNm" 재직상태명
    "responseGmSearchUserInfo/nltyCd" 국적코드
    "responseGmSearchUserInfo/nltyCdNm" 국적코드명
    "responseGmSearchUserInfo/salcCd" 호봉코드
    "responseGmSearchUserInfo/salcNm" 호봉코드명
    "responseGmSearchUserInfo/payFormCd" 급여형태코드
    "responseGmSearchUserInfo/payFormCdNm" 급여형태코드명
    "responseGmSearchUserInfo/rtirDt" 퇴직일자
    "responseGmSearchUserInfo/jobcCd" 직종코드
    "responseGmSearchUserInfo/jobcCdNm" 직종코드명
    "responseGmSearchUserInfo/payBankCd" 급여은행코드
    "responseGmSearchUserInfo/payBankCdNm" 급여은행코드명
    "responseGmSearchUserInfo/payAcno" 급여계좌번호
    "responseGmSearchUserInfo/payDepoNm" 급여예금주명
============================================================================*/
function gmUserSearchMultiBrowser(textObj, nameObj,e) {
	gmSearchTypeFlag = "form";
	gmTextObjID = textObj.getID();
	gmNameObjID = nameObj.getID();
	
	nameObj.setValue("");
	var value = textObj.getValue();
	textObj.setValue("");
	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
	if(e.type != 'click') {
		if(value.length < 1) {
			nameObj.setValue("");
			return;
		} else if(value.length < 1) {
			showMsg("C_I054", "사번/성명을 1자 이상");
			return;
		}
	} 
	getGmUserInfo(e.type, value, arguments[3], arguments[4], arguments[5], arguments[6],arguments[7]);
}

/*============================================================================
** 기능  : 일반행정 사번팝업 && 그리드에 입력
** 인수  : submissionId, object
** 리턴  : 결과배열, 노드생성
    "responseGmSearchUserInfo/eno"        사번            
    "responseGmSearchUserInfo/stafNm"     교직원성명      
    "responseGmSearchUserInfo/iidno"      주민등록번호      
    "responseGmSearchUserInfo/birth"      생년월일        
    "responseGmSearchUserInfo/sexCd"      성별코드      
    "responseGmSearchUserInfo/sexCdNm"    성별코드명   
    "responseGmSearchUserInfo/clsfCd"     직급코드       
    "responseGmSearchUserInfo/clsfNm"     직급명        
    "responseGmSearchUserInfo/deptCd"     부서코드       
    "responseGmSearchUserInfo/deptNm"     부서코드명      
    "responseGmSearchUserInfo/hffcStatCd" 재직상태코드
    "responseGmSeazrchUserInfo/hffcStatDt" 재직상태일자
    "responseGmSearchUserInfo/hffcStatNm" 재직상태명
    "responseGmSearchUserInfo/nltyCd" 국적코드
    "responseGmSearchUserInfo/nltyCdNm" 국적코드명 
    "responseGmSearchUserInfo/salcCd" 호봉코드
    "responseGmSearchUserInfo/salcNm" 호봉코드명
    "responseGmSearchUserInfo/payFormCd" 급여형태코드
    "responseGmSearchUserInfo/payFormCdNm" 급여형태코드명
    "responseGmSearchUserInfo/rtirDt" 퇴직일자
    "responseGmSearchUserInfo/jobcCd" 직종코드
    "responseGmSearchUserInfo/jobcCdNm" 직종코드명
    "responseGmSearchUserInfo/payBankCd" 급여은행코드
    "responseGmSearchUserInfo/payBankCdNm" 급여은행코드명
    "responseGmSearchUserInfo/payAcno" 급여계좌번호
    "responseGmSearchUserInfo/payDepoNm" 급여예금주명
============================================================================*/
function gmUserSearchGrid(grid , row , col, initCols) {
	gmSearchTypeFlag = "grid";
	gmSearchGridRow = row;
	gmSearchGridCol = col;
	gmSearchGridObjID = grid.getID();

	grid.setCellData( row , col+2 , "" );
	var value = grid.getCellData(row, col);
	grid.setCellData( row , col , "" );
	
	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
	
	if(initCols != undefined) {
		for(var index in initCols) {
			if(initCols[index] != "") {
				grid.setCellData( row , initCols[index] , "" );	
			}
		}
	}

	if(event.type != "click"){
		if(value.length < 1) {
			return;
		} else if(value.length < 1) {
			showMsg("C_I054", "사번/성명을 1자 이상");
			return;
		}
	} 
	
	getGmUserInfo(event.type, value, arguments[4], arguments[5], arguments[6], arguments[7]);
}
/*============================================================================
 ** 기능  : 일반행정 사번팝업 && 그리드에 입력(파이어폭스대응)
 ** 인수  : submissionId, object
 ** 리턴  : 결과배열, 노드생성
    "responseGmSearchUserInfo/eno"        사번            
    "responseGmSearchUserInfo/stafNm"     교직원성명      
    "responseGmSearchUserInfo/iidno"      주민등록번호      
    "responseGmSearchUserInfo/birth"      생년월일        
    "responseGmSearchUserInfo/sexCd"      성별코드      
    "responseGmSearchUserInfo/sexCdNm"    성별코드명   
    "responseGmSearchUserInfo/clsfCd"     직급코드       
    "responseGmSearchUserInfo/clsfNm"     직급명        
    "responseGmSearchUserInfo/deptCd"     부서코드       
    "responseGmSearchUserInfo/deptNm"     부서코드명      
    "responseGmSearchUserInfo/hffcStatCd" 재직상태코드
    "responseGmSeazrchUserInfo/hffcStatDt" 재직상태일자
    "responseGmSearchUserInfo/hffcStatNm" 재직상태명
    "responseGmSearchUserInfo/nltyCd" 국적코드
    "responseGmSearchUserInfo/nltyCdNm" 국적코드명 
    "responseGmSearchUserInfo/salcCd" 호봉코드
    "responseGmSearchUserInfo/salcNm" 호봉코드명
    "responseGmSearchUserInfo/payFormCd" 급여형태코드
    "responseGmSearchUserInfo/payFormCdNm" 급여형태코드명
    "responseGmSearchUserInfo/rtirDt" 퇴직일자
    "responseGmSearchUserInfo/jobcCd" 직종코드
    "responseGmSearchUserInfo/jobcCdNm" 직종코드명
    "responseGmSearchUserInfo/payBankCd" 급여은행코드
    "responseGmSearchUserInfo/payBankCdNm" 급여은행코드명
    "responseGmSearchUserInfo/payAcno" 급여계좌번호
    "responseGmSearchUserInfo/payDepoNm" 급여예금주명
============================================================================*/
function gmUserSearchGridMultiBrowser(eType,grid , row , col, initCols) {
	gmSearchTypeFlag = "grid";
	gmSearchGridRow = row;
	gmSearchGridCol = col;
	gmSearchGridObjID = grid.getID();
	
	grid.setCellData( row , col+2 , "" );
	var value = grid.getCellData(row, col);
	grid.setCellData( row , col , "" );
	
	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
	
	if(initCols != undefined) {
		for(var index in initCols) {
			if(initCols[index] != "") {
				grid.setCellData( row , initCols[index] , "" );	
			}
		}
	}
	
	if(eType != "click"){
		if(value.length < 1) {
			return;
		} else if(value.length < 1) {
			showMsg("C_I054", "사번/성명을 1자 이상");
			return;
		}
	} 
	
	getGmUserInfo(eType, value, arguments[5], arguments[6], arguments[7], arguments[8]);
}

/*============================================================================
** 기능  : 교직원 조회 팝업
** 인수  : value
** 리턴  : 
============================================================================*/
function getGmUserInfo(type, value) {
	var arrResult = new Array();
	var clsfLCdValue = arguments[2];
	var jobcCdValue = arguments[3];
	var orgCd = arguments[4];
	var roleCheck = arguments[5];
	var bmGb = arguments[6];
	var encodeValue = "";
	var encodeJobcCdValue = "";
	var encodeClsfLCdValue = "";
	var encodeOrgCd = "";
	var encodeLoginOrgCd = "";
	var encodeRoleCheck = "";
	var encodeBmGb = "";
	if(value != "") {
		encodeValue = WebSquare.text.BASE64URLEncoder(value);
	}
	
	if(orgCd != undefined) {
		if(orgCd != "") {
			encodeOrgCd = WebSquare.text.BASE64URLEncoder(orgCd);
		} 
		setValue("requestGmSearchUser/orgCd", orgCd);
	}
	
	if(roleCheck != undefined) {
		if(roleCheck != "") {
			encodeRoleCheck = WebSquare.text.BASE64URLEncoder(roleCheck);
		} 
	}
	
	if(clsfLCdValue != undefined) {
		if(clsfLCdValue != "") {
			encodeClsfLCdValue = WebSquare.text.BASE64URLEncoder(clsfLCdValue);
		} 
		setValue("requestGmSearchUser/selectClsfLCd", clsfLCdValue);	
	}

	if(jobcCdValue != undefined) {
		if(jobcCdValue != "") {
			encodeJobcCdValue = WebSquare.text.BASE64URLEncoder(jobcCdValue);
		} 
		setValue("requestGmSearchUser/selectJobcCd", jobcCdValue);	
	}
	
	if(bmGb != undefined) {
		if(bmGb != "") {
			encodeBmGb = WebSquare.text.BASE64URLEncoder(bmGb);
		} 
		setValue("requestGmSearchUser/bmGb", bmGb);	
	}
    setValue("requestGmSearchUser/eno", value);

    if(type == "click") {
		if(typeof setNavigator != 'function') {
			openNewPopup( "setGmUserPopupValue", "/views/gm/is/GM_IS_0001.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, roleCheck:encodeRoleCheck, pBmGb:encodeBmGb});
			return;
		}
		openPopup( "setGmUserPopupValue", "/views/gm/is/GM_IS_0001.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, roleCheck:encodeRoleCheck, pBmGb:encodeBmGb});
		return;
	}
	
    execSubmission("getCommonDataSubm", "requestGmSearchUser", "responseGmSearchUser", "/gm/listUser.do");
    
    var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchUser/object/userList/object");
    var rowCount = dataArr.length;
    
    if(rowCount == 1) {
    	arrResult.push(getValue("responseGmSearchUser/object/userList/object/eno"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/stafNm"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/iidno"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/birth"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/sexDvcd"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/sexDvcdNm"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/clsfCd"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/clsfNm"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/deptCd"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/deptNm"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatCd"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatDt"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatNm"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/nltyCd"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/nltyCdNm"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/salcCd"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/salcNm"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payFormCd"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payFormCdNm"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/rtirDt"));      
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/jobcCd"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/jobcCdNm"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payBankCd"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payBankCdNm"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payAcno"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payDepoNm"));
        arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatMclsCdNm"));
        
        WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUser" );
        
        setGmUserPopupValue(arrResult);
    } else if(rowCount > 1) {
    	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUser" );
    	if(typeof setNavigator != 'function') {
			openNewPopup( "setGmUserPopupValue", "/views/gm/is/GM_IS_0001.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, roleCheck:encodeRoleCheck, pBmGb:encodeBmGb});
			return;
		}
    	openPopup( "setGmUserPopupValue", "/views/gm/is/GM_IS_0001.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, roleCheck:encodeRoleCheck, pBmGb:encodeBmGb});
    } else if(rowCount == 0) {
    	showMsg("C_I041", "사번/성명으로 검색한 결과");
    }
}

/*============================================================================
** 기능  : 교직원 조회 팝업 후에 수행됨
** 인수  : arrResult
** 리턴  : 
============================================================================*/
function setGmUserPopupValue(arrResult) {
	if(arrResult == undefined) {
		return;
	}
	
	setValue("responseGmSearchUserInfo/eno",arrResult[0]);       
    setValue("responseGmSearchUserInfo/stafNm",arrResult[1]);    
    setValue("responseGmSearchUserInfo/iidno",arrResult[2]);     
    setValue("responseGmSearchUserInfo/birth",arrResult[3]);     
    setValue("responseGmSearchUserInfo/sexDvcd",arrResult[4]);     
    setValue("responseGmSearchUserInfo/sexDvcdNm",arrResult[5]);   
    setValue("responseGmSearchUserInfo/clsfCd",arrResult[6]);    
    setValue("responseGmSearchUserInfo/clsfNm",arrResult[7]);    
    setValue("responseGmSearchUserInfo/deptCd",arrResult[8]);    
    setValue("responseGmSearchUserInfo/deptNm",arrResult[9]);    
    setValue("responseGmSearchUserInfo/hffcStatCd",arrResult[10]);
    setValue("responseGmSearchUserInfo/hffcStatDt",arrResult[11]);
    setValue("responseGmSearchUserInfo/hffcStatNm",arrResult[12]);
    setValue("responseGmSearchUserInfo/nltyCd",arrResult[13]);
    setValue("responseGmSearchUserInfo/nltyCdNm",arrResult[14]);
    setValue("responseGmSearchUserInfo/salcCd",arrResult[15]); 
    setValue("responseGmSearchUserInfo/salcNm",arrResult[16]); 
    setValue("responseGmSearchUserInfo/payFormCd",arrResult[17]); 
    setValue("responseGmSearchUserInfo/payFormCdNm",arrResult[18]); 
    setValue("responseGmSearchUserInfo/rtirDt",arrResult[19]);
    setValue("responseGmSearchUserInfo/jobcCd",arrResult[20]);
    setValue("responseGmSearchUserInfo/jobcCdNm",arrResult[21]); 
    setValue("responseGmSearchUserInfo/payBankCd",arrResult[22]); 
    setValue("responseGmSearchUserInfo/payBankCdNm",arrResult[23]); 
    setValue("responseGmSearchUserInfo/payAcno",arrResult[24]); 
    setValue("responseGmSearchUserInfo/payDepoNm",arrResult[25]);
    setValue("responseGmSearchUserInfo/hffcStatMclsCdNm",arrResult[26]);

    if(gmSearchTypeFlag == "form") {
    	eval(gmTextObjID).setValue( arrResult[0] );
    	eval(gmNameObjID).setValue( arrResult[1] );
    	
    	//화면에서 부가정보를 사용할 경우에  gmUserSearchFormCallBack 함수를 만들어 놓고 사용한다
    	if (typeof gmUserSearchFormCallBack == 'function') {
    		gmUserSearchFormCallBack(arrResult);
    	}
		return;
	}
	
	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
	
	//화면에서 부가정보를 사용할 경우에  gmUserSearchGridCallBack 함수를 만들어 놓고 사용한다
	if (typeof gmUserSearchGridCallBack == 'function') {
		gmUserSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
	}
}

/*===============================================================
 ** 기능 : 예산회계의 부서코드 팝업 호출
 ** 인수 : 부서코드 오브젝트, 부서명 오브젝트, 사업코드, 조회팝업("Y") 또는 신청팝업("N"), 예산단위가 최상위단위일떄 최상위조직만 조회("1")
 ** 결과 : 
 **===============================================================*/
function onClickBudgDeptPopUp(subMissionId, budgDeptCd, budgDeptNm, busiCd, busiNm, Flag, deptFlag, popGbn){
	 var budgDeptCdID = WebSquare.text.BASE64URLEncoder(budgDeptCd.getID());
	 var budgDeptNmID = WebSquare.text.BASE64URLEncoder(budgDeptNm.getID());
	 var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
	 var eDeptFlag = WebSquare.text.BASE64URLEncoder(deptFlag);
	 var eBudgDeptCd = WebSquare.text.BASE64URLEncoder(budgDeptCd.getValue()); 
	 var eBusiCd ;
	 var vBusiCd ;
	 if(event.type != 'click') {
		if(budgDeptCd.getValue().length < 1) {
			budgDeptNm.setValue("");
			return;
		}
	 } 
	 
	if(busiCd == ""){
		 eBusiCd = WebSquare.text.BASE64URLEncoder(busiCd);
		 vBusiCd = busiCd;
	}else{
		if(busiCd.getValue().length == 4 && busiNm.getValue() != ""){ //사업코드가 완전할때만 반영
		     eBusiCd = WebSquare.text.BASE64URLEncoder(busiCd.getValue());
		     vBusiCd = busiCd.getValue();
		 }
		 else{
		  	eBusiCd = "" ;
		  	vBusiCd = "";
		   	busiCd.setValue("");
		   	busiNm.setValue("");
	    }
	}
	
    if(event.type == 'click'){
    	if(popGbn == '2'){
    		var rArr = openNewPopup("onClickBudgDeptPopUpCallBack", "/views/gm/ys/GM_YS_1011.xml"
    				, { width      : 915
    			, height     : 525
    			, resizable  : false
    			, scrollbars : false }
    		, {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag, budgDeptCdID:budgDeptCdID, budgDeptNmID:budgDeptNmID}) ;
    	}else{
    		var rArr = openPopup("onClickBudgDeptPopUpCallBack", "/views/gm/ys/GM_YS_1011.xml"
    				, { width      : 915
    			, height     : 525
    			, resizable  : false
    			, scrollbars : false }
    		, {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag, budgDeptCdID:budgDeptCdID, budgDeptNmID:budgDeptNmID}) ;
    	}
    }else{
    	
        WebSquare.ModelUtil.setInstanceValue( "reqBudgDept/orgNm" , budgDeptCd.getValue() );
        WebSquare.ModelUtil.setInstanceValue( "reqBudgDept/busiCd", vBusiCd );
        execSubmission(subMissionId, "reqBudgDept", "resBudgDept","/ys/listBudgDeptCd.do");
        
        var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgDept/object/budgBusiCdList/object");
        rowCount = dataArr.length;
        if(rowCount == 1 && ((Flag == "N" && getValue("resBudgDept/object/budgBusiCdList/object[1]/useYn") == "Y") || Flag == "Y")) {    
        	if(deptFlag == "1" && (getValue("respFrameAcctyBass/object/acctyBass/budgUnitCd") == "10" || getValue("respFrameAcctyBass/object/acctyBass/budgUnitCd") == "20")){ 
        		if(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd") != getValue("respFrameAcctyBass/object/acctyBass/subInfoVal7")){
        			budgDeptCd.setValue("");
        			budgDeptNm.setValue("");
        			showMsg("C_I084", ["예산단위가 최상위기관", "다른부서"]);    
        			return;
        		}
        	}
        	//budgDeptCd.setValue(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd"));
        	//budgDeptNm.setValue(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgNm"));     
        	  var arrResult = new Array();
              arrResult.push(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd"));
              arrResult.push(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgNm"));
              onClickBudgDeptPopUpCallBack(arrResult,budgDeptCd.getID(),budgDeptNm.getID());
        }else if(rowCount == 0){
        	budgDeptCd.setValue("");
			budgDeptNm.setValue("");
        	showMsg("C_I041", "검색한 결과");
        	
        }
        else{
        	if(popGbn == '2'){
        		var rArr = openNewPopup("onClickBudgDeptPopUpCallBack", "/views/gm/ys/GM_YS_1011.xml"
        				, { width      : 915
        			, height     : 525
        			, resizable  : false
        			, scrollbars : false }
        		, {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag, budgDeptCdID:budgDeptCdID, budgDeptNmID:budgDeptNmID}) ;
        	}else{
        		var rArr = openPopup("onClickBudgDeptPopUpCallBack", "/views/gm/ys/GM_YS_1011.xml"
        				, { width      : 915
        			, height     : 525
        			, resizable  : false
        			, scrollbars : false }
        		, {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag, budgDeptCdID:budgDeptCdID, budgDeptNmID:budgDeptNmID}) ;
        	}
        }   	
    }
}

/*===============================================================
 * function    : onClickBudgDeptPopUpCallBack
 * Description : 예산회계 부서코드 목록 팝업 후에 호출되는 콜백
 * ☆ 화면에 onClickBusiPopUpCallBack(arrResult) 함수를 생성한 후에 처리
 * Parameter   : arrResult( 예산회계 부서코드 정보 배열)
 * Return      :  예산회계 부서코드 정보 배열
 **===============================================================*/
function onClickBudgDeptPopUpCallBack(arrResult, budgDeptCdID, budgDeptNmID) {
	if (arrResult != undefined && arrResult != null) {
		eval(budgDeptCdID).setValue( arrResult[0] );              
		eval(budgDeptNmID).setValue( arrResult[1] );              
    }
}
/*===============================================================
   ** 기능 : 예산회계의 사업코드 팝업 호출(컴포넌트)
   ** 인수 : 서브미션,  사업코드 오브젝트, 사업명 오브젝트, 부서코드 오브젝트, 부서명 오브젝트, (검색시(Y), 신청시(N)), popGbn(팝업구분:null,"1"-UI에서 팝업호출, "2"-팝업에서 호출)
   *** 결과 : 이주원 추가 로직필요 
   **===============================================================*/
function onClickBusiPopUp(subMissionId, busiCd, busiNm, budgDeptCd, budgDeptNm, Flag, popGbn, pAcctyYear){
	  var busiCdID = WebSquare.text.BASE64URLEncoder(busiCd.getID());
	  var busiNmID = WebSquare.text.BASE64URLEncoder(busiNm.getID());
      var eBusiCd = WebSquare.text.BASE64URLEncoder(busiCd.getValue());
      var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
      var eBudgDeptCd;
      var vBudgDeptCd;
      
      if(pAcctyYear == null || pAcctyYear == "") {
    	  var eAcctyYear = WebSquare.text.BASE64URLEncoder("");
    	  var eAcctyYear2 = "";
      } else {
    	  var eAcctyYear = WebSquare.text.BASE64URLEncoder(pAcctyYear);
    	  var eAcctyYear2 = pAcctyYear;
      }
      
    	  
      if(event.type != 'click') {
  		if(busiCd.getValue().length < 1) {
  			busiNm.setValue("");
  			return;
  		}
  	 } 
      if(budgDeptCd == ""){
    	     eBudgDeptCd = WebSquare.text.BASE64URLEncoder(budgDeptCd);
    	     vBudgDeptCd = budgDeptCd;
      }else{
    	  if(budgDeptCd.getValue().length == 7 && budgDeptNm.getValue() != ""){ //부서코드가 완전할때만 반영
	    	  eBudgDeptCd = WebSquare.text.BASE64URLEncoder(budgDeptCd.getValue());
	    	  vBudgDeptCd = budgDeptCd.getValue();
	      }else{
	    	 eBudgDeptCd = "" ;
	    	 vBudgDeptCd = ""
	    	 budgDeptCd.setValue("");
	    	 budgDeptNm.setValue("");
	      }
      }
      if(event.type == 'click'){
    	  if (popGbn == "2") {
    		  openNewPopup("onClickBusiPopUpCallBack", "/views/gm/ys/GM_YS_1041.xml"
                      , { width      : 580
                        , height     : 565
                        , resizable  : false
                        , scrollbars : false }
                      , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, busiCdID:busiCdID, busiNmID:busiNmID
                    	  ,pAcctyYear:eAcctyYear}) ;
    	  } else {
	          var rArr = openPopup("onClickBusiPopUpCallBack", "/views/gm/ys/GM_YS_1041.xml"
	                         , { width      : 580
	                           , height     : 565
	                           , resizable  : false
	                           , scrollbars : false }
	                         , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, busiCdID:busiCdID, busiNmID:busiNmID
	                        	 ,pAcctyYear:eAcctyYear}) ;
          }
	      
//	      if (rArr != undefined && rArr != null) {
//	     	 busiCd.setValue( rArr[0] );
//	     	 busiNm.setValue( rArr[1] );
//	      }
      }else{
    	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/busiCd" , busiCd.getValue() );
    	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/acctyYear" , eAcctyYear2 );
    	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/acctyCd" , getValue("respFrameAcctyBass/object/acctyBass/acctyCd") );
    	  
    	  
    	  if(vBudgDeptCd.length == '0')  //부서코드가 없으면 사업테이블에서 조회/ 있으면 예산부서테이블에서 조회
          {   
    		  execSubmission(subMissionId, "reqBudgBusiCd", "resBudgBusiCd","/ys/selBudgBusiCd.do");
          }else{
        	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/budgApplDeptCd" , vBudgDeptCd );
        	  execSubmission(subMissionId, "reqBudgBusiCd", "resBudgBusiCd","/ys/selBudgDeptBusiCd.do");
          }
    	  
    	  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgBusiCd/object/selbudgBusiCd/object");
          rowCount = dataArr.length;
          if(rowCount == 1 && ((Flag == "N" && getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/useYn") == "Y") || Flag == "Y")){ //데이터가 하나면 바로 뿌려줌 
        	 
        	 // busiCd.setValue(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiCd"));
        	 // busiNm.setValue(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiNm"));  
        	  var arrResult = new Array();
              arrResult.push(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiCd"));
              arrResult.push(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiNm"));
        	  onClickBusiPopUpCallBack(arrResult,busiCd.getID(),busiNm.getID());
        	  
          }else if(rowCount == 0){
        	  busiCd.setValue("");
        	  busiNm.setValue("");
        	  showMsg("C_I041", "검색한 결과");
        	
          }else {   //데이터가 여러개인 경우 팝업띄움 
        	  if (popGbn == "2") {
        		  openNewPopup("onClickBusiPopUpCallBack", "/views/gm/ys/GM_YS_1041.xml"
                          , { width      : 580
                            , height     : 565
                            , resizable  : false
                            , scrollbars : false }
                          , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, busiCdID:busiCdID, busiNmID:busiNmID
                        	  ,pAcctyYear:eAcctyYear}) ;
        	  } else {
        	      var rArr = openPopup("onClickBusiPopUpCallBack", "/views/gm/ys/GM_YS_1041.xml"
                          , { width      : 580
                          , height     : 565
                          , resizable  : false
                          , scrollbars : false }
                          , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, busiCdID:busiCdID, busiNmID:busiNmID
                        	  ,pAcctyYear:eAcctyYear}) ;
        	  }
   
          }
      }
  }    

/*===============================================================
 * function    : onClickBusiPopUpCallBack
 * Description : 사업코드 목록 팝업 후에 호출되는 콜백
 * ☆ 화면에 onClickBusiPopUpCallBack(arrResult) 함수를 생성한 후에 처리
 * Parameter   : arrResult(사업코드 정보 배열)
 * Return      : 사업코드 정보 배열
 **===============================================================*/
function onClickBusiPopUpCallBack(arrResult, busiCdID, busiNmID) {
	if (arrResult != undefined && arrResult != null) {
		eval(busiCdID).setValue( arrResult[0] );              
		eval(busiNmID).setValue( arrResult[1] );              
    }
}
/*===============================================================
 ** 기능 : 예산회계의 그리드용 부서코드 팝업 호출 (그리드)
 ** 인수 : 부서코드 오브젝트, 부서명 오브젝트, 서브미션, 사업코드 
 ** 결과 : 
 **===============================================================*/
function onClickBudgDeptGridPopUp(subMissionId, grid, row, col, busiCdCol, busiNmCol, Flag, deptFlag){
    var eBudgDeptCd =WebSquare.text.BASE64URLEncoder(grid.getCellData(row, col)); 
    var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
    var eDeptFlag = WebSquare.text.BASE64URLEncoder(deptFlag);
    var eBusiCd ;
    var vBusiCd ;
    
	 if(event.type != 'click') {
		if(grid.getCellData(row, col).length < 1) {
			grid.setCellData(row, col+2, "");
			return;
		}
	 } 
	 
	if(busiCdCol == ""){
		 eBusiCd = "";
		 vBusiCd = "";
	}else{
		if(grid.getCellData(row, busiCdCol).length == 4 && grid.getCellData(row, busiNmCol) != ""){ //사업코드가 완전할때만 반영
		     eBusiCd = WebSquare.text.BASE64URLEncoder(grid.getCellData(row, busiCdCol));
		     vBusiCd = grid.getCellData(row, busiCdCol);
		 }
		 else{
		    eBusiCd = "" ;
		  	vBusiCd = "";
		  	grid.setCellData(row, busiCdCol, "");
	    	grid.setCellData(row, busiNmCol, "");
	    }
	}
    
	if(event.type == 'click'){
	    var rArr = openPopup("/views/gm/ys/GM_YS_1011.xml"
	                       , { width      : 915
	                         , height     : 525
	                         , resizable  : false
	                         , scrollbars : false }
	                       , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag}) ;
	    
	    if (rArr != undefined && rArr != null) {
	    	eval(grid).setCellData( row , col , rArr[0] );
	    	eval(grid).setCellData( row , col+2 , rArr[1] );
	    	
	    }
    }else{
    	 WebSquare.ModelUtil.setInstanceValue( "reqBudgDept/orgNm" , grid.getCellData(row, col) );
         WebSquare.ModelUtil.setInstanceValue( "reqBudgDept/busiCd", vBusiCd );
         execSubmission(subMissionId, "reqBudgDept", "resBudgDept","/ys/listBudgDeptCd.do");
         
         var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgDept/object/budgBusiCdList/object");
         rowCount = dataArr.length;
         
         if(rowCount == 1 && ((Flag == "N" && getValue("resBudgDept/object/budgBusiCdList/object[1]/useYn") == "Y") || Flag == "Y")) {    
         	if(deptFlag == "1" && (getValue("respFrameAcctyBass/object/acctyBass/budgUnitCd") == "10" || getValue("respFrameAcctyBass/object/acctyBass/budgUnitCd") == "20")){ 
         		if(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd") != getValue("respFrameAcctyBass/object/acctyBass/subInfoVal7")){
         			 eval(grid).setCellData(row, col,"");
         			 eval(grid).setCellData(row, col+2,"");
         			return;
         		}
         	}
         	eval(grid).setCellData(row, col, getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd"));
         	eval(grid).setCellData(row, col+2, getValue("resBudgDept/object/budgBusiCdList/object[1]/orgNm"));        	   	
         }else{
         	var rArr = openPopup("/views/gm/ys/GM_YS_1011.xml"
                     , { width      : 915
                       , height     : 525
                       , resizable  : false
                       , scrollbars : false }
                     , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag}) ;
  
 			if (rArr != undefined && rArr != null) {
 				eval(grid).setCellData( row , col , rArr[0] );
 		    	eval(grid).setCellData( row , col+2 , rArr[1] );
 			}
         }
    }
    
}   
 
    
  
/*===============================================================
 ** 기능 : 예산회계의 사업코드 팝업 호출(그리드)
 ** 인수 : 서브미션, 그리드명, 사업코드 오브젝트, 사업명 오브젝트, 부서컬럼, 부서명컬럼, 조회조건여부
 ** 결과 : 
 **===============================================================*/
function onClickBusiGridPopUp(subMissionId, grid, row, col, deptCdCol, deptNmCol, Flag){
    var eBusiCd = WebSquare.text.BASE64URLEncoder(grid.getCellData(row, col)); 
    var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
    var  eBudgDeptCd;
    var  vBudgDeptCd;
    
    gmSearchTypeFlag = "grid";
	  gmSearchGridRow = row;
    gmSearchGridCol = col;
	  gmSearchGridObjID = grid.getID();  
       
    if(deptCdCol == ""){
	     eBudgDeptCd = "";
	     vBudgDeptCd = "";
    }else{
	     if(grid.getCellData(row, deptCdCol).length == 7 && grid.getCellData(row, deptNmCol) != ""){ //부서코드가 완전할때만 반영
	    	  eBudgDeptCd = WebSquare.text.BASE64URLEncoder(grid.getCellData(row, deptCdCol));
	    	  vBudgDeptCd = grid.getCellData(row, deptCdCol);
	      }else{
	    	 eBudgDeptCd = "" ;
	    	 vBudgDeptCd = ""
	         grid.setCellData(row, deptCdCol, "");
	    	 grid.setCellData(row, deptNmCol, "");
	      }
    }
   
    if(event.type == 'click'){
  	   var rArr = openPopup("onClickBusiGridPopUpCallBack","/views/gm/ys/GM_YS_1041.xml"
                , { width      : 580
                  , height     : 565
                  , resizable  : false
                  , scrollbars : false }
                , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag}) ;
			if (rArr != undefined && rArr != null) {
				  eval(grid).setCellData( row , col , rArr[0] );
			      eval(grid).setCellData( row , col+2 , rArr[1] );
			}
    }else{
  	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/busiCd" , grid.getCellData(row, col));
  	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/acctyCd" , getValue("respFrameAcctyBass/object/acctyBass/acctyCd") );
  	  
  	  if(vBudgDeptCd.length == '0')  //부서코드가 없으면 사업테이블에서 조회/ 있으면 예산부서테이블에서 조회
        {   
  		  execSubmission(subMissionId, "reqBudgBusiCd", "resBudgBusiCd","/ys/selBudgBusiCd.do");
        }else{
      	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/budgApplDeptCd" , vBudgDeptCd );
      	  execSubmission(subMissionId, "reqBudgBusiCd", "resBudgBusiCd","/ys/selBudgDeptBusiCd.do");
        }
  	  
  	  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgBusiCd/object/selbudgBusiCd/object");
        rowCount = dataArr.length; 
  	  
        if(rowCount == 1 && ((Flag == "N" && getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/useYn") == "Y") || Flag == "Y")){ //데이터가 하나면 바로 뿌려줌 
      	  eval(grid).setCellData(row, col, getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiCd"));
      	  eval(grid).setCellData(row, col+2, getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiNm"));  
        }else {   //데이터가 여러개인 경우 팝업띄움 
      	  var rArr = openPopup("onClickBusiGridPopUpCallBack","/views/gm/ys/GM_YS_1041.xml"
                    , { width      : 580
                      , height     : 565
                      , resizable  : false
                      , scrollbars : false }
      	  , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag}) ;
 
      	  	if (rArr != undefined && rArr != null) {
      	  		 eval(grid).setCellData( row , col , rArr[0] );
 			         eval(grid).setCellData( row , col+2 , rArr[1] );
             }
        }
    }
}
/*===============================================================
* function    : onClickBusiGridPopUpCallBack
* Description : 사업코드 목록 팝업 후에 호출되는 콜백
* ☆ 화면에 onClickBusiPopUpCallBack(arrResult) 함수를 생성한 후에 처리
* Parameter   : arrResult(사업코드 정보 배열)
* Return      : 사업코드 정보 배열
**===============================================================*/
function onClickBusiGridPopUpCallBack(arrResult) {
	if (arrResult != undefined && arrResult != null) {
		eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol-1 , arrResult[0] );
  	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );            
  }
}

/*===============================================================
 ** 기능 : 주민번호 성별 /생년월일/생일 추출 (포커스 아웃시 발생) 
 ** 인수 : 주민번호ID, 성별ref, 생년월일 ref, 생일 ref
 ** 결과 : 
 **===============================================================*/
function iidCheck(iidno,sexRef,birthRef,btdMmDdRef){
     var iid = iidno.getValue();
     var yy = null;
     if(iid.length != 13)  return;
     
     //주민등록번호에따라 성별과 생년월일 
     var sex = iid.substring(6,7);
      if(sex=='1'||sex=='3'||sex=='5'||sex=='7'||sex=='9'){
        if(sex=='1'){
            yy = '19'
        }else if(sex=='3'){
            yy = '20'
        }else if(sex=='5'){
            yy = '19'
        }else if(sex=='7'){
            yy = '20'
        }else if(sex=='9'){
            yy = '18'
        }
        setValue(sexRef,1);
      }else if(sex=='2'||sex=='4'||sex=='6'||sex=='8'||sex=='0'){
        if(sex=='2'){
            yy = '19'
        }else if(sex=='4'){
            yy = '20'
        }else if(sex=='6'){
            yy = '19'
        }else if(sex=='8'){
            yy = '20'
        }else if(sex=='0'){
            yy = '18'
        }
        setValue(sexRef,2);
      }
     var birth = iid.substring(0,6);
      setValue(birthRef,yy+birth);
     
     var btdMmDd = iid.substring(2,6);
      setValue(btdMmDdRef,btdMmDd);
}

/*===============================================================
 ** 기능 : 결혼일자 입력시 결혼코드 입력 (포커스 아웃시 발생) 
 ** 인수 : 결혼일자, 결혼코드 ref
 ** 결과 : 
 **===============================================================*/
function wedCheck(weddDt,weddCdRef){
     var wedddate = weddDt.getValue();
 
     //결혼일자에 따라 결혼 코드 
   
      if(wedddate==null || wedddate=='' ){
        setValue(weddCdRef,2);
       
        
      }else {
        setValue(weddCdRef,1);
       
      }
     
     
}
/*===============================================================
 * function    : onClickAcntCdPopUp
 * Description : 계정코드 팝업 호출
 * Parameter   : 계정코드/명 오브젝트
 *               회계년도/회곅구분코드 Param
 *               선택 구분 - "1" : 전표입력여부 (전표입력여부가 'Y'인 것만 선택 가능)
 *                       "2" : 계정분류코드 ( 코드가 10,20,30 인 것만 선택 가능)
 *                       "3" : 계정분류코드 ( 코드가 40,50,50 인 것만 선택 가능)
 *                       "4" : 계정레벨 ( 계정레벨이 selectValue 인 것만 선택 가능)
 *                       "5" : 계정례벨 ( 계정 레벨이 SelectValue 보다 하위 인것만 선택 가능 )
						 "6" : 계정례벨 ( 계정 레벨이 SelectValue 보다 상위 인것만 선택 가능 )
 *                       "7" : 예산 계정여부 값에 따라   (selectValue : Y,N )  - 에산 계정일때만 사용
 *                       "8" : 관리코드 있는것만 조회
 *                       "9" : 계정분류코드 (10,20,30,60,80)
 *                       "10" : 해당 관리코드만 선택 가능                       
 *               선택 값 : 선택 구분이 "4", "5" 일 경우만 사용 ( 계층 레벨 값)  
 *               선택 구분1  ( 조건이 2개일 경우 )
 *               선택 값1   ( 조건이 2개일 경우 )
 *               subMissionId : keyUp 이벤트에서 호출시 사용할 sumission ID
 *               popGbn : 팝업 구분  (null, "1" : UI에서 팝업 호출, "2" : 팝업에서 호출)
 * Return      : 계정정보를 Doc로 반환
 *               기본적으로 parma의 acntCd, acntNm에 값을 넣고 계정코드와 명 이외의 값을 참조할 경우
 *               return 받아 WebSquare.xml.getValue 를 이용하여 참조 필드의 값을 참조
 *               화면에서 계정코드의 정보를 활용할 경우 setAcntCdInfo(retDoc) 함수를 만들어 retDoc안의 내용을 가지고 처리
 **===============================================================*/
function onClickAcntCdPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, subMissionId, popGbn){
	if(event.type == 'click'){
		acntCdOpenPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, popGbn);
	} else {
		setValue("reqAcnt/acntCd", acntCd.getValue());
        setValue("reqAcnt/acctyCd", acctyCd);
        setValue("reqAcnt/acctyYear", acctyYear);
        
        execSubmission(subMissionId, "reqAcnt", "respAcnt", "/hg/listAcntBass.do");
        
        var dataArr = WebSquare.ModelUtil.findInstanceNodes( "respAcnt/object/acntList/object" );
        
        if (dataArr.length != 1) {
           acntCdOpenPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, popGbn); 
        } else {
        	 // 해당 조회 값에 따라 선택 유무 처리
           var cnt = 1;  
           if (selectGbn != "" || selectValue != "" || selectGbn1 != "" || selectValue1 != "")  {
             if (selectGbn == "1" || selectGbn1 == "1") {                 // 전표 입력 가능 여부     	
                 if (getValue("respAcnt/object/acntList/object/slipInptYn") != "Y" ) cnt--;
             } 
             if (selectGbn == "2" || selectGbn1 == "2") {          // 계정분류코드 (10,20,30)   
                 if (getValue("respAcnt/object/acntList/object/acntClsCd") != "10" &&
        		     getValue("respAcnt/object/acntList/object/acntClsCd") != "20" &&
        		     getValue("respAcnt/object/acntList/object/acntClsCd") != "30" ) cnt--;
             } 
             if (selectGbn == "3" || selectGbn1 == "3") {          // 계정분류코드(40,50,60)
        	     if (getValue("respAcnt/object/acntList/object/acntClsCd") != "40" &&
           		     getValue("respAcnt/object/acntList/object/acntClsCd") != "50" &&
           		     getValue("respAcnt/object/acntList/object/acntClsCd") != "60" ) cnt--;
             } 
             if (selectGbn == "4" || selectGbn1 == "4") {          // selectValue에 있는 레벨과 동일한거
        	     if (selectGbn  == "4" && getValue("respAcnt/object/acntList/object/acntLevel") != selectValue ) cnt--;
        	     if (selectGbn1 == "4" && getValue("respAcnt/object/acntList/object/acntLevel") != selectValue1 ) cnt--;
             }
             if (selectGbn == "5" || selectGbn1 == "5") {          // selectValue에 있는 레델의 이하 등급만 선택 가능
        	     if (selectGbn  == "5" && getValue("respAcnt/object/acntList/object/acntLevel") < selectValue ) cnt--;
        	     if (selectGbn1 == "5" && getValue("respAcnt/object/acntList/object/acntLevel") < selectValue1 ) cnt--;
             }
             if (selectGbn == "6" || selectGbn1 == "6") {          // selectValue에 있는 레델의 이하 등급만 선택 가능
        	     if (selectGbn  == "6" && getValue("respAcnt/object/acntList/object/acntLevel") > selectValue ) cnt--;
        	     if (selectGbn1 == "6" && getValue("respAcnt/object/acntList/object/acntLevel") > selectValue1 ) cnt--;
             }
             if (selectGbn == "7" || selectGbn1 == "7") {          // 예산 계정
        	     if (selectGbn  == "7" && getValue("respAcnt/object/acntList/object/budgAcntYn") != selectValue ) cnt--;
        	     if (selectGbn1 == "7" && getValue("respAcnt/object/acntList/object/budgAcntYn") != selectValue1 ) cnt--;
             }
             if (selectGbn == "8" || selectGbn1 == "8") {          // 관리코드 있는것만 조회
          	     if (getValue("respAcnt/object/acntList/object/mngCd") == "" || getValue("respAcnt/object/acntList/object/mngCd") == null) cnt--;
             }
             if (selectGbn == "9" || selectGbn1 == "9") {
        	     if (getValue("respAcnt/object/acntList/object/acntClsCd") != "10" &&
                     getValue("respAcnt/object/acntList/object/acntClsCd") != "20" &&
               	     getValue("respAcnt/object/acntList/object/acntClsCd") != "30" &&
               	     getValue("respAcnt/object/acntList/object/acntClsCd") != "60" &&
               	     getValue("respAcnt/object/acntList/object/acntClsCd") != "80"    ) cnt--;
             }
             if (selectGbn == "10" || selectGbn1 == "10") {
        	     if (selectGbn  == "10" && getValue("respAcnt/object/acntList/object/mngCd") != selectValue ) cnt--;
        	     if (selectGbn1 == "10" && getValue("respAcnt/object/acntList/object/mngCd") != selectValue1 ) cnt--;
             }

     //      if (selectGbn != "7" && selectGbn1 != "7")
     //   	   if (getValue("respAcnt/object/acntList/object/slipInptYn") != "Y" ) cnt--;
             if (getValue("respAcnt/object/acntList/object/acntUseYn") == "N") cnt--;
           }                      
           
           
           if (cnt == 1) {
        	   acntCd.setValue(getValue("respAcnt/object/acntList/object/acntCd"));
               acntNm.setValue(getValue("respAcnt/object/acntList/object/acntNm"));
               var doc = WebSquare.ModelUtil.findInstanceNode( "respAcnt/object/acntList/object" );
               
               try {
         	      setAcntCdInfo(doc);
         	    }
         	    catch(e){}
           } else 
        	   acntCdOpenPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, popGbn); 
	    }
	}
	 
}

function acntCdOpenPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, popGbn){
	if (selectGbn == null) selectGbn = " ";
	if (selectValue == null) selectValue = " ";
	if (selectGbn1 == null) selectGbn1 = " ";
	if (selectValue1 == null) selectValue1 = " ";
	if (popGbn == "2") {
	    openNewPopup("acntCdPopUpCallBack", "/views/gm/hg/GM_HG_1072.xml"
            , { width      : 800
              , height     : 530
              , resizable  : false
              , scrollbars : false } 
              , {pAacctyYear:    WebSquare.text.BASE64URLEncoder(acctyYear)
              ,  pAcctyCd:       WebSquare.text.BASE64URLEncoder(acctyCd)
              ,  pSelectGbn :    WebSquare.text.BASE64URLEncoder(selectGbn)
              ,  pSelectValue :  WebSquare.text.BASE64URLEncoder(selectValue)
              ,  pSelectGbn1 :   WebSquare.text.BASE64URLEncoder(selectGbn1)
              ,  pSelectValue1 : WebSquare.text.BASE64URLEncoder(selectValue1)
              ,  pAcntCd :       WebSquare.text.BASE64URLEncoder(acntCd.getValue())
              ,  pAcntCdID :     WebSquare.text.BASE64URLEncoder(acntCd.getID())
              ,  pAcntNmID :     WebSquare.text.BASE64URLEncoder(acntNm.getID())     }) ;
	}else if (popGbn == "3") {
	    openNewPopup2("acntCdPopUpCallBack", "/views/gm/hg/GM_HG_1072.xml"
	            , { width      : 800
	              , height     : 530
	              , resizable  : false
	              , scrollbars : false } 
	              , {pAacctyYear:    WebSquare.text.BASE64URLEncoder(acctyYear)
	              ,  pAcctyCd:       WebSquare.text.BASE64URLEncoder(acctyCd)
	              ,  pSelectGbn :    WebSquare.text.BASE64URLEncoder(selectGbn)
	              ,  pSelectValue :  WebSquare.text.BASE64URLEncoder(selectValue)
	              ,  pSelectGbn1 :   WebSquare.text.BASE64URLEncoder(selectGbn1)
	              ,  pSelectValue1 : WebSquare.text.BASE64URLEncoder(selectValue1)
	              ,  pAcntCd :       WebSquare.text.BASE64URLEncoder(acntCd.getValue())
	              ,  pAcntCdID :     WebSquare.text.BASE64URLEncoder(acntCd.getID())
	              ,  pAcntNmID :     WebSquare.text.BASE64URLEncoder(acntNm.getID())     }) ;
		} else {
		openPopup("acntCdPopUpCallBack", "/views/gm/hg/GM_HG_1072.xml"
	            , { width      : 800
	              , height     : 530
	              , resizable  : false
	              , scrollbars : false } 
	              , {pAacctyYear:    WebSquare.text.BASE64URLEncoder(acctyYear)
	              ,  pAcctyCd:       WebSquare.text.BASE64URLEncoder(acctyCd)
	              ,  pSelectGbn :    WebSquare.text.BASE64URLEncoder(selectGbn)
	              ,  pSelectValue :  WebSquare.text.BASE64URLEncoder(selectValue)
	              ,  pSelectGbn1 :   WebSquare.text.BASE64URLEncoder(selectGbn1)
	              ,  pSelectValue1 : WebSquare.text.BASE64URLEncoder(selectValue1)
	              ,  pAcntCd :       WebSquare.text.BASE64URLEncoder(acntCd.getValue())
	              ,  pAcntCdID :     WebSquare.text.BASE64URLEncoder(acntCd.getID())
	              ,  pAcntNmID :     WebSquare.text.BASE64URLEncoder(acntNm.getID())     }) ;
	}
}

/*===============================================================
 * function    : onClickBusiPopUpCallBack
 * Description : 계정코드 목록 팝업 후에 호출되는 콜백
 * ☆ 화면에 onClickBusiPopUpCallBack(arrResult) 함수를 생성한 후에 처리
 * Parameter   : retDoc(계정코드 정보 Doc)
 * Return      : 계정코드 정보 Doc
 * 화면에서 계정코드의 정보를 활용할 경우 setAcntCdInfo(retDoc) 함수를 만들어 retDoc안의 내용을 가지고 처리
 **===============================================================*/
function acntCdPopUpCallBack(retDoc,pAcntCd, pAcntNm) {
	if (retDoc != undefined && retDoc != null) {	
	   if (pAcntCd != undefined && pAcntCd != null)
	      eval(pAcntCd).setValue( WebSquare.xml.getValue( retDoc , "acntCd"  ) );

	    if (pAcntNm != undefined && pAcntNm != null)
	       eval(pAcntNm).setValue( WebSquare.xml.getValue( retDoc , "acntNm"  ) );
	}

	try {
	    setAcntCdInfo(retDoc);
    }
    catch(e){}
}

/*===============================================================
 * function    : onClickEtcIncrPopUp
 * Description : 기타소득자  팝업 호출
 * Parameter   :   
 * Return      : 기타소득자 정보를 Doc로 반환
 *               여러 자료를 사용 할 수 있으므로 doc로 return 처리 함
 *               return 받아 WebSquare.xml.getValue 를 이용하여 참조 필드의 값을 참조
 **===============================================================*/
function onClickEtcIncrPopUp(incrNo, incrNm, sumissionID){
	//    if (event.type == "click") {
		    openPopup("etcIncrCallBack", "/views/gm/hg/GM_HG_2112.xml"
		             , { width      : 700
		             , height     : 450
		             , resizable  : false
		             , scrollbars : false } 
		              , {pIncrNoID : WebSquare.text.BASE64URLEncoder(incrNo.getID()) 
		             ,  pIncrNmID : WebSquare.text.BASE64URLEncoder(incrNm.getID())
		             ,  pIncrNo   : WebSquare.text.BASE64URLEncoder(incrNo.getValue()) } ) ;
    //    }
}

function etcIncrCallBack(retDoc, incrNoID, incrNmID) {
    if (incrNoID.trim() != "" && incrNoID != null && incrNoID != undefined )
    	eval(incrNoID).setValue(WebSquare.xml.getValue( retDoc , "etcIncrNo"  ));
    if (incrNmID.trim() != "" && incrNmID != null && incrNmID != undefined )
    	eval(incrNmID).setValue(WebSquare.xml.getValue( retDoc , "incrNm"  ));
    
    try { setEtcIncrInfo(retDoc); }
    catch(e) {}
}


/*===============================================================
 * function    : onChangeEtcIncr
 * Description : 기타소득자 조회
 * Parameter   : subId(서브미션 id), etcIncrNo(기타소득자 입력 object)
 * Return      : 
 **===============================================================*/
function onChangeEtcIncr(subId, etcIncrNo, etcIncrNm) {
    if (etcIncrNo.getValue() == "") return;
    
    setValue( "reqEtc/etcIncrNo" ,  etcIncrNo.getValue());
    
    execSubmission(subId, "reqEtc", "respEtc", "/hg/listBusiEtcIncrBass.do");
    
    var retArr = WebSquare.ModelUtil.findInstanceNodes( "respEtc/object/busiEtcIncrBassList/object" );

    if (retArr.length != 1) 
    	var retDoc = onClickEtcIncrPopUp(etcIncrNo, etcIncrNm, subId);
    else {    
    	var retDoc = getInstanceNode("respEtc/object/busiEtcIncrBassList/object");
    }
    
    return retDoc;
}

/*===============================================================
 ** 기능 : 예산회계의 계정코드 팝업 호출(그리드)
 ** 인수 : 
 ** 결과 : 
 **===============================================================*/
function onClickAcntGridPopUp(acntCd, acntNm, acctyYear, acctyCd, grid, rowNum, cdCol, nmCol){
	var rArr = openPopup("/views/gm/hg/GM_HG_1072.xml"
	                       , { width      : 700
	                         , height     : 500
	                         , resizable  : false
	                         , scrollbars : false }
	                       , {pAacctyYear:acctyYear, pAcctyCd:acctyCd}) ;
    
	    if (rArr != undefined && rArr != null) {
	  	    eval(grid).setCellData( rowNum , cdCol , WebSquare.xml.getValue( rArr , "acntCd"  ) );
	  	    eval(grid).setCellData( rowNum , nmCol , WebSquare.xml.getValue( rArr , "acntNm"  ) );
	    }
	return rArr;
}      
/*===============================================================
 * function    : searchAcct
 * Description : 예산회계의 계좌정보를 조회
 * Parameter   : 계좌번호 object, 계좌명 object, 서브미션
 * Return      : null
 **===============================================================*/
function searchAcct(acno, acctNm, subMissionId){
	 var vAcno = acno.getValue();
	     
	 if(vAcno.length<2){
		 showMsg("C_I054", "계좌번호/명을 두자리이상");
	     return;
	 }
	     
	 acno.blur();
	     
	 WebSquare.ModelUtil.setInstanceValue( "reqAcct/pAcno" , vAcno );
	 execSubmission(subMissionId, "reqAcct", "resAcct","/hg/listAcct.do");
	 
	 var retArr = WebSquare.ModelUtil.findInstanceNodes( "resAcct/object/acctList/object" );
	     
	 if( retArr.length == 1){
		 acno.setValue(WebSquare.xml.getValue( retArr[0] , "acno"));
		 acctNm.setValue(WebSquare.xml.getValue( retArr[0] , "acctNm"));
		 
		 return retArr[0];
    }
    else{
    	return onClickAcctPopUp(acno, acctNm); 
    }
}
/*===============================================================
 * function    : onClickAcctPopUp
 * Description : 예산회계의 계좌정보 팝업 호출
 * Parameter   : 계좌번호 object, 계좌명 object
 * Return      : null
 **===============================================================*/
function onClickAcctPopUp(acno, acctNm){
    var vAcno = WebSquare.text.BASE64URLEncoder(acno.getValue());
		var rArr = openPopup("onClickAcctPopUpCallBack", "/views/gm/hg/GM_HG_1051.xml"
		                   , { width      : 580
		                     , height     : 530
		                     , resizable  : false
		                     , scrollbars : false }
		                   , { pAcno:vAcno
		                	 , pAcnoId:WebSquare.text.BASE64URLEncoder(acno.getID())
		                	 , pAcctNmId:WebSquare.text.BASE64URLEncoder(acctNm.getID())
		                     }) ;
}
/*===============================================================
 * function    : onClickAcctPopUpUpCallBack
 * Description : 계좌정보 팝업 후에 호출되는 콜백
 * ☆ 화면에 onClickAcctPopUpCallBack(arrResult) 함수를 생성한 후에 처리
 * Parameter   : arrResult
 * Return      :  
 **===============================================================*/
function onClickAcctPopUpCallBack(arrResult,pAcnoId,pAcctNmId, retDoc) {
	if (arrResult != undefined && arrResult != null) {
		eval(pAcnoId).setValue( arrResult[0] );
		eval(pAcctNmId).setValue( arrResult[1] );			
	}
	
	if (typeof setAcctInfo == 'function') {
		setAcctInfo(retDoc);
	}
}
/*===============================================================
 * function    : setTelNo
 * Description : 인사 전화번호 바인딩
 * Parameter   : 전화번호 object, 바인딩 컴포넌트1 object, 바인딩 컴포넌트2 object, 바인딩 컴포넌트3 object
 * Return      : null
 **===============================================================*/
function setTelno( telno, selRef1, ipRef2, ipRef3 ) {
	if (telno != undefined && telno != null &&
	    selRef1 != undefined && selRef1 != null &&
	    ipRef2 != undefined && ipRef2 != null &&
		ipRef3 != undefined && ipRef3 != null){
		    var telnoArray = telno.split("-");
		    eval(selRef1).setValue(telnoArray[0]);
		    eval(ipRef2).setValue(telnoArray[1]);
		    eval(ipRef3).setValue(telnoArray[2]);
	}
}

/*===============================================================
 * function    : setNodeTelNo
 * Description : 인사 전화번호 DB넘기기
 * Parameter   : 바인딩 컴포넌트1 object, 바인딩 컴포넌트2 object, 바인딩 컴포넌트3 object, 전화번호 노드
 * Return      : null
 **===============================================================*/
function setTelnoNode( selRef1, ipRef2, ipRef3, nodeTelNo ) {
	if (nodeTelNo != undefined && nodeTelNo != null &&
	    selRef1 != undefined && selRef1 != null &&
	    ipRef2 != undefined && ipRef2 != null &&
		ipRef3 != undefined && ipRef3 != null){
		    if( eval(selRef1).getValue() != undefined && eval(selRef1).getValue() != null ){
				//전화번호합치기
				var telNo1 = eval(selRef1).getValue();
				var telNo2 = eval(ipRef2).getValue();
				var telNo3 = eval(ipRef3).getValue();
				setValue( nodeTelNo, telNo1+"-"+telNo2+"-"+telNo3 );
		    }
	}
}


/*===============================================================
 * function    : 
 * Description : 이전 탭, 다음 탭
 * Parameter   : 
 * Return      : 
 **===============================================================*/
function upStep(obj){
	obj.enableTab(obj.getSelectedTabIndex() + 1);
	obj.disableTab(obj.getSelectedTabIndex());
	
	obj.setSelectedTabIndex( obj.getSelectedTabIndex() + 1 );
}
function downStep(obj){
	obj.enableTab(obj.getSelectedTabIndex() - 1);
	obj.disableTab(obj.getSelectedTabIndex());
   obj.setSelectedTabIndex( obj.getSelectedTabIndex() - 1 );
}

/*===============================================================
 * function    : 
 * Description : wFrame 사용자 정보 사용
 * Parameter   : 서브미션 아이디, 사번
 * Return      : 
 **===============================================================*/
function getGmUserFrameInfo(submissionId, eno){
	WebSquare.ModelUtil.setInstanceValue( "requestUserFrameData/eno" , eno );
	execSubmission(submissionId,"requestUserFrameData","responseUserFrameData","/gm/selectUserInfo.do");
}

/*===============================================================
 * function    : 
 * Description : wFrame 사용자 정보 초기화
 * Parameter   : 
 * Return      : 
 **===============================================================*/
function clearGmUserFrameInfo(){
	setValue("responseUserFrameData/object/userInfo/dis21","");
	setValue("responseUserFrameData/object/userInfo/dis22","");
	setValue("responseUserFrameData/object/userInfo/dis23","");
	setValue("responseUserFrameData/object/userInfo/dis24","");
	setValue("responseUserFrameData/object/userInfo/dis25","");
	setValue("responseUserFrameData/object/userInfo/dis26","");
	setValue("responseUserFrameData/object/userInfo/dis27","");
	setValue("responseUserFrameData/object/userInfo/dis28","");
	setValue("responseUserFrameData/object/userInfo/dis29","");
	setValue("responseUserFrameData/object/userInfo/dis210","");
	setValue("responseUserFrameData/object/userInfo/dis211","");
	setValue("responseUserFrameData/object/userInfo/dis11","");
	setValue("responseUserFrameData/object/userInfo/dis12","");
	setValue("responseUserFrameData/object/userInfo/dis13","");
	setValue("responseUserFrameData/object/userInfo/dis14","");
	setValue("responseUserFrameData/object/userInfo/dis15","");
	setValue("responseUserFrameData/object/userInfo/dis16","");
	setValue("responseUserFrameData/object/userInfo/dis17","");
	setValue("responseUserFrameData/object/userInfo/dis18","");
	setValue("responseUserFrameData/object/userInfo/dis19","");
	setValue("responseUserFrameData/object/userInfo/dis110","");
	setValue("responseUserFrameData/object/userInfo/dis111","");
	setValue("responseUserFrameData/object/userInfo/dis112","");
	setValue("responseUserFrameData/object/userInfo/dis113","");
	setValue("responseUserFrameData/object/userInfo/dis114","");
	setValue("responseUserFrameData/object/userInfo/dis115","");
	WebSquare.ModelUtil.removeChildNodes( "responseUserFrameData" );
}


/*===============================================================
 * function    : 
 * Description : 일반행정 기본정보 프레임 이미지 클릭 시 팝업
 * Parameter   : 
 * Return      : 
 **===============================================================*/
function gmPreviewImage(fileSeq) {
	if(fileSeq == 0 || fileSeq == undefined || fileSeq == "") return;
    var rtn = openPopup("", "/views/cm/previewImage.xml", {width:400, height:300}, {fileSeq:fileSeq});
}

/*===============================================================
 * function    : 
 * Description : 인사 기본정보 프레임 이미지 클릭 시 팝업
 * Parameter   : 
 * Return      : 
 **===============================================================*/
function isPreviewImage(fileSeq) {
	if(fileSeq == 0 || fileSeq == undefined || fileSeq == "") return;
	var rtn = openPopup("", "/views/gm/is/isPreviewImage.xml", {width:323, height:405}, {fileSeq:fileSeq});
}


/*============================================================================
** 기능  : 이름, 주민번호앞자리로 사번 확인 및 사번 반환
** 인수  : 
** 리턴  : 사번 또는 Error번호(1[이름없음], 2[주민번호앞자리없음], 3[있지만 2개이상])
============================================================================*/
function getCheckStaff(stafNm, iidno){
	setValue( "reqStaff/stafNm" , stafNm );
    setValue( "reqStaff/iidno" , iidno );
    execSubmission("sub","reqStaff","respStaff","/gm/checkStaff.do");
    
    var staffState = WebSquare.ModelUtil.getInstanceValue( "respStaff/object/checkStaffResult" );
	
	return staffState;
}

/*============================================================================
 ** 기능  : 조직명조회
 ** 인수  : 
 ** 결과  : 
 ============================================================================*/
function selectDeptNm(sbmissionId, orgCd) {
	setValue( "vreq/orgCd" , orgCd );
    execSubmission(sbmissionId, "vreq", "vresp", "/ys/selectDeptNm.do");
    
    var deptNm = WebSquare.ModelUtil.getInstanceValue( "vresp/object/budgDept/orgNm" );
    return deptNm;
}

/*============================================================================
 ** 기능  : 다음년도 2월의 마지막날 가져오기
 ** 인수  : 
 ** 결과  : 
 ============================================================================*/
function getEndDayOfFebruary() {
	var now = new Date();
	
	var yearParam = (arguments[0] == undefined) ? now.getFullYear() : arguments[0];
	
	var date = new Date((Number(yearParam) + 1), 2, 0);
	
	var year = Number(yearParam) + 1;
	
	var month = date.getMonth()+1;
	
	month = (month < 10) ? "0" + month : month;
	
	return year + month + date.getDate();
}

/*============================================================================
 ** 기능  : 그룹 내부의 input 콤포넌트의 null값을 0으로 모두 변경
 ** 인수  : 
 ** 결과  : 
 ============================================================================*/
function GrpNullChangeZero(object){
    var childArr = object.getChildren();
    for(var index in childArr ){
        var obj = childArr[index];
        var pluginType = obj.getPluginName().toLowerCase();

        if (pluginType == "group") {
        	GrpNullChangeZero(obj);
        } else if( pluginType == "input") {
        	if(obj.getValue() == ""){
        		obj.setValue("0");	
        	}
        }
        
    }
}
/*============================================================================
 ** 기능  : 엑셀 업로드 그리드 일괄 저장
 ** 인수  : ex ) "sub1", "vacaBasGrid", "reqVacaBas", "reqVacaBas/vacaBasList", "/is/deleteVacaBas.do"
 ** 결과  : 
 ============================================================================*/
function saveExcelRowData(sbmissionId, grid, req, ref, url) {
	var doc = grid.getAllXML();
	WebSquare.ModelUtil.setInstanceNode( doc , req, null, "append");
	setAttribute(req + "/" + ref,"type","array");
	execSubmission(sbmissionId, req + "/" + ref, "resultList", url);
}


/*===============================================================
 * function    : onClickitmgCdPopup
 * Description : 관리항목 팝업 호출
 * Parameter   : itmgCd(관리항목코드 object), itmgNm(관리항목명 object), mngCd(관리코드 값)
 * Return      : 
 **===============================================================*/
function onClickItmgCdPopup(itmgCd, itmgNm, mngCd, vAcctyCd, sumissionID) {
	if (mngCd == "") {
    	
       showMsg("C_I066", ["관리항목 계정","관리항목"]);                    
       return;
    }
	if(typeof setNavigator != 'function') {
		openNewPopup("itmgCdCallBack", "/views/gm/hg/GM_HG_2113.xml"
	               , { width      : 500
            , height     : 520
            , resizable  : false
            , scrollbars : false } 
            , {pMngCd : WebSquare.text.BASE64URLEncoder(mngCd)
            ,  pItmgCd : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
            ,  pItmgCdID : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
            ,  pItmgNmID : WebSquare.text.BASE64URLEncoder(itmgNm.getID())
            ,  pAcctyCd : WebSquare.text.BASE64URLEncoder(vAcctyCd)}) ;
		return;
	}
    openPopup("itmgCdCallBack", "/views/gm/hg/GM_HG_2113.xml"
               , { width      : 500
               , height     : 520
               , resizable  : false
               , scrollbars : false } 
               , {pMngCd : WebSquare.text.BASE64URLEncoder(mngCd)
               ,  pItmgCd : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
               ,  pItmgCdID : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
               ,  pItmgNmID : WebSquare.text.BASE64URLEncoder(itmgNm.getID())
               ,  pAcctyCd : WebSquare.text.BASE64URLEncoder(vAcctyCd)}) ;
}

function itmgCdCallBack(retArr, pItmgCdID, pItmgNmID ) {
	if (retArr != undefined && retArr != null) {
	   eval(pItmgCdID).setValue(retArr[0]);
	   eval(pItmgNmID).setValue(retArr[1]);
	
	   if (typeof setItmgCdInfo == 'function') {
		   setItmgCdInfo(retArr);
	   }
	}
}

/*===============================================================
 * function    : onChangeitmgCdPopup
 * Description : 관리항목 팝업 호출
 * Parameter   : itmgCd(관리항목코드 object), itmgNm(관리항목명 object), mngCd(관리코드 값), subId(서브미션 id)
 * Return      : 
 **===============================================================*/
function onChangeItmgCdPopup(itmgCd, itmgNm, mngCd, vAcctyCd, subId) {
	if (mngCd == "") {
    	
       showMsg("C_I066", ["관리항목 계정","관리항목"]);                    
       return;
    }
    
    if (itmgCd.getValue() == "") return;
    
    setValue( "reqItmg/mngCd" ,  mngCd);
    setValue( "reqItmg/acctyCd" ,  vAcctyCd);
    setValue( "reqItmg/itmgCd" , itmgCd.getValue());
    setValue( "reqItmg/flag"  , "N");
    
    execSubmission(subId, "reqItmg", "respItmg", "/hg/listItmgCd.do");
    
    var retArr = WebSquare.ModelUtil.findInstanceNodes( "respItmg/object/itmgCdList/object" );

    if (retArr.length != 1) 
    	onClickItmgCdPopup(itmgCd, itmgNm, mngCd, vAcctyCd);
    else {    
        itmgCd.setValue(getValue("respItmg/object/itmgCdList/object[1]/itmgCd"));
        itmgNm.setValue(getValue("respItmg/object/itmgCdList/object[1]/itmgNm"));
        
        if (typeof setItmgCdInfo == 'function') {
 		   setItmgCdInfo("");
 	   }
    }
}


/*===============================================================
 * function    : onClickItmgCdUserPopup
 * Description : 관리항목 팝업 호출 (관리자용)
 * Parameter   : itmgCd(관리항목코드 object), itmgNm(관리항목명 object), mngCd(관리코드 값)
 * Return      : 
 **===============================================================*/
function onClickItmgCdUserPopup(acctyYear,acctyCd, acntCd, busiCd, deptCd, mngCd,  itmgCd, itmgNm, sumissionID) {
    if (mngCd == "") {
    	
       showMsg("C_I066", ["관리항목 계정","관리항목"]);                    
       return;
    }
    
    if (event.type=="click") {   
    	if(typeof setNavigator != 'function') {
    		openNewPopup("itmgCdCallBack", "/views/gm/hg/GM_HG_2115.xml"
    	               , { width      : 500
                , height     : 520
                , resizable  : false
                , scrollbars : false } 
                , {
             	  pAcctyYear :  WebSquare.text.BASE64URLEncoder(acctyYear)
                ,  pAcctyCd   :  WebSquare.text.BASE64URLEncoder(acctyCd)
                ,  pAcntCd    :  WebSquare.text.BASE64URLEncoder(acntCd)
                ,  pBusiCd    :  WebSquare.text.BASE64URLEncoder(busiCd)
                ,  pDeptCd    :  WebSquare.text.BASE64URLEncoder(deptCd)               
                ,  pMngCd     : WebSquare.text.BASE64URLEncoder(mngCd)
                ,  pItmgCd    : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
                ,  pItmgCdID  : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
                ,  pItmgNmID  : WebSquare.text.BASE64URLEncoder(itmgNm.getID())   }) ;
    		return;
    	}
       openPopup("itmgCdCallBack", "/views/gm/hg/GM_HG_2115.xml"
               , { width      : 500
               , height     : 520
               , resizable  : false
               , scrollbars : false } 
               , {
            	  pAcctyYear :  WebSquare.text.BASE64URLEncoder(acctyYear)
               ,  pAcctyCd   :  WebSquare.text.BASE64URLEncoder(acctyCd)
               ,  pAcntCd    :  WebSquare.text.BASE64URLEncoder(acntCd)
               ,  pBusiCd    :  WebSquare.text.BASE64URLEncoder(busiCd)
               ,  pDeptCd    :  WebSquare.text.BASE64URLEncoder(deptCd)               
               ,  pMngCd     : WebSquare.text.BASE64URLEncoder(mngCd)
               ,  pItmgCd    : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
               ,  pItmgCdID  : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
               ,  pItmgNmID  : WebSquare.text.BASE64URLEncoder(itmgNm.getID())   }) ;
    } else {
    	//setValue( "reqItmg/acctyYear" , acctyYear);
        setValue( "reqItmg/acctyCd"   , acctyCd  );
        setValue( "reqItmg/acntCd"    , acntCd   );
        //setValue( "reqItmg/busiCd"    , busiCd   );
        setValue( "reqItmg/deptCd"    , deptCd   );
        setValue( "reqItmg/mngCd"     , mngCd    );
        setValue( "reqItmg/itmgCd"    , itmgCd.getValue()   );
        
        execSubmission(sumissionID, "reqItmg", "respItmg", "/hg/listCracc.do");
        
        var retArr = WebSquare.ModelUtil.findInstanceNodes( "respItmg/object/craccList/object" );

        if (retArr.length != 1) 
        	openPopup("itmgCdCallBack", "/views/gm/hg/GM_HG_2115.xml"
                    , { width      : 500
                    , height     : 520
                    , resizable  : false
                    , scrollbars : false } 
                    , {
                 	  pAcctyYear :  WebSquare.text.BASE64URLEncoder(acctyYear)
                    ,  pAcctyCd   :  WebSquare.text.BASE64URLEncoder(acctyCd)
                    ,  pAcntCd    :  WebSquare.text.BASE64URLEncoder(acntCd)
                    ,  pBusiCd    :  WebSquare.text.BASE64URLEncoder(busiCd)
                    ,  pDeptCd    :  WebSquare.text.BASE64URLEncoder(deptCd)               
                    ,  pMngCd     : WebSquare.text.BASE64URLEncoder(mngCd)
                    ,  pItmgCd    : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
                    ,  pItmgCdID  : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
                    ,  pItmgNmID  : WebSquare.text.BASE64URLEncoder(itmgNm.getID())   }) ;
        else {    
            itmgCd.setValue(getValue("respItmg/object/craccList/object[1]/itmgCd"));
            itmgNm.setValue(getValue("respItmg/object/craccList/object[1]/itmgNm"));
            
            if (typeof setItmgCdInfo == 'function') {
      		   setItmgCdInfo("");
      	    }
        }
    }
}


/*============================================================================
** 기능  : 일반행정 부서팝업
** 인수  : 코드/부서명, 부서명 오브젝트
** 리턴  : 
    "responseGmSearchDeptInfo/orgCd"     부서코드            
    "responseGmSearchDeptInfo/orgNm"     부서명     
============================================================================*/
function gmDeptSearch(textObj, nameObj) {
	gmSearchTypeFlag = "form";
	gmTextObjID = textObj.getID();
	gmNameObjID = nameObj.getID();
	
	nameObj.setValue("");
	var value = textObj.getValue();
	textObj.setValue("");
	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchDeptInfo" );
	
	if(event.type != 'click') {
		if(value.length < 1) {
			return;
		} else if(value.length < 2) {
			showMsg("C_I054", "부서 코드/명을 2자 이상");
			return;
		}
	} 
	
	getGmDeptInfo(event.type, value, arguments[2], arguments[3]);
}
/*============================================================================
 ** 기능  : 일반행정 부서팝업(파이어폭스 대응)
 ** 인수  : 코드/부서명, 부서명 오브젝트
 ** 리턴  : 
    "responseGmSearchDeptInfo/orgCd"     부서코드            
    "responseGmSearchDeptInfo/orgNm"     부서명     
============================================================================*/
function gmDeptSearchMutilBrowser(textObj, nameObj,e) {
	gmSearchTypeFlag = "form";
	gmTextObjID = textObj.getID();
	gmNameObjID = nameObj.getID();
	
	nameObj.setValue("");
	var value = textObj.getValue();
	textObj.setValue("");
	
	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchDeptInfo" );
	
	if(e.type != 'click') {
		if(value.length < 1) {
			return;
		} else if(value.length < 2) {
			showMsg("C_I054", "부서 코드/명을 2자 이상");
			return;
		}
	} 
	
	getGmDeptInfo(e.type, value, arguments[3], arguments[4]);
}

/*============================================================================
** 기능  : 일반행정 부서팝업 && 그리드에 입력
** 인수  : submissionId, object
** 리턴  : 결과배열, 노드생성
    "responseGmSearchDeptInfo/orgCd"     부서코드            
    "responseGmSearchDeptInfo/orgNm"     부서명      
============================================================================*/
function gmDeptSearchGrid(grid , row , col, initCols) {
	gmSearchTypeFlag = "grid";
	gmSearchGridRow = row;
	gmSearchGridCol = col;
	gmSearchGridObjID = grid.getID();
	
	var value = grid.getCellData(row, col);
	
	grid.setCellData( row , col+2 , "" );
	var value = grid.getCellData(row, col);
	grid.setCellData( row , col , "" );
	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchDeptInfo" );
	
	if(initCols != undefined) {
		for(var index in initCols) {
			if(initCols[index] != "") {
				grid.setCellData( row , initCols[index] , "" );	
			}
		}
	}

	if(event.type != "click"){
		if(value.length < 1) {
			return;
		} else if(value.length < 2) {
			showMsg("C_I054", "부서 코드/명을 2자 이상");
			return;
		}
	}
	
	getGmDeptInfo(event.type, value, arguments[4], arguments[5]);
}
/*============================================================================
 ** 기능  : 일반행정 부서팝업 && 그리드에 입력
 ** 인수  : submissionId, object
 ** 리턴  : 결과배열, 노드생성
    "responseGmSearchDeptInfo/orgCd"     부서코드            
    "responseGmSearchDeptInfo/orgNm"     부서명      
============================================================================*/
function gmDeptSearchGridMultiBrowser(eType, grid , row , col, initCols) {
	gmSearchTypeFlag = "grid";
	gmSearchGridRow = row;
	gmSearchGridCol = col;
	gmSearchGridObjID = grid.getID();
	
	var value = grid.getCellData(row, col);
	
	grid.setCellData( row , col+2 , "" );
	var value = grid.getCellData(row, col);
	grid.setCellData( row , col , "" );
	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchDeptInfo" );
	
	if(initCols != undefined) {
		for(var index in initCols) {
			if(initCols[index] != "") {
				grid.setCellData( row , initCols[index] , "" );	
			}
		}
	}
	if(eType != "click"){
		if(value.length < 1) {
			return;
		} else if(value.length < 2) {
			showMsg("C_I054", "부서 코드/명을 2자 이상");
			return;
		}
	}
	
	getGmDeptInfo(eType, value, arguments[5], arguments[6]);
}

/*============================================================================
** 기능  : 부서 조회 팝업
** 인수  : value
** 리턴  : 
============================================================================*/
function getGmDeptInfo(type,value) {
	var encodeValue = "";
	var arrResult = new Array();

	if(value != "") {
		encodeValue = WebSquare.text.BASE64URLEncoder(value);
	} 

	if(type == "click") {
		if(typeof setNavigator != 'function') {
			openNewPopup( "setGmDeptPopupValue", "/views/gm/is/GM_IS_0002.xml", {width: 900, height:540}, {orgNm:encodeValue});
			return;
		}
		
		openPopup( "setGmDeptPopupValue", "/views/gm/is/GM_IS_0002.xml", {width: 900, height:540}, {orgNm:encodeValue});
		return;
	}

    setValue("requestGmSearchDept/orgNm", value);
    execSubmission("getCommonDataSubm", "requestGmSearchDept", "responseGmSearchDept", "/gm/listDeptNonLevelType.do");
    var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchDept/object/deptList/object");
    var rowCount = dataArr.length;

    if(rowCount == 1) {
    	arrResult.push(getValue("responseGmSearchDept/object/deptList/object/orgCd"));
    	arrResult.push(getValue("responseGmSearchDept/object/deptList/object/orgNm"));
    	
        WebSquare.ModelUtil.removeChildNodes( "responseGmSearchDept" );
        
        setGmDeptPopupValue(arrResult);
    } else if(rowCount > 1) {
    	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchDept" );
    	if(typeof setNavigator != 'function') {
			openNewPopup( "setGmDeptPopupValue", "/views/gm/is/GM_IS_0002.xml", {width: 900, height:540}, {orgNm:encodeValue});
			return;
		}
    	openPopup( "setGmDeptPopupValue", "/views/gm/is/GM_IS_0002.xml", {width: 900, height:540}, {orgNm:encodeValue});
    } else if(rowCount == 0) {
    	showMsg("C_I041", "부서 코드/명으로 검색한 결과");
    }
}

/*============================================================================
** 기능  : 부서 조회 팝업 후에 호출됨
** 인수  : arrResult
** 리턴  : 
============================================================================*/
function setGmDeptPopupValue(arrResult) {
	if(arrResult == undefined) {
		return;
	}
	
	setValue("responseGmSearchDeptInfo/orgCd",arrResult[0]);       
    setValue("responseGmSearchDeptInfo/orgNm",arrResult[1]);
    
    if(gmSearchTypeFlag == "form") {
    	eval(gmTextObjID).setValue( arrResult[0] );
    	eval(gmNameObjID).setValue( arrResult[1] );
    	
    	//화면에서 부가정보를 사용할 경우에  gmDeptSearchFormCallBack 함수를 만들어 놓고 사용한다
    	if (typeof gmDeptSearchFormCallBack == 'function') {
    		gmDeptSearchFormCallBack(arrResult);
    	}
		return;
	}
	
	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
	
	//화면에서 부가정보를 사용할 경우에  gmDeptSearchGridCallBack 함수를 만들어 놓고 사용한다
	if (typeof gmDeptSearchGridCallBack == 'function') {
		gmDeptSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
	}
}

/*============================================================================
 ** 기능  : 엑셀 업로드 그리드 일괄 저장
 ** 인수  : ex ) "sub1", "vacaBasGrid", "reqVacaBas", "reqVacaBas/vacaBasList", "/is/deleteVacaBas.do"
 ** 결과  : 
 ============================================================================*/
function saveExcelRowData(sbmissionId, grid, req, ref, url, res) {
	WebSquare.ModelUtil.removeChildNodes( req );
	
	var gridRowCnt = grid.getRowCount();
	if (gridRowCnt == 0) {
	   showMsg("C_I050", "저장");
	}
	var doc = grid.getAllXML();
	WebSquare.ModelUtil.setInstanceNode( doc , req, null, "append");
	setAttribute(req + "/" + ref,"type","array");
	
	if(res == undefined) res = "resultList";
	
	execSubmission(sbmissionId, req + "/" + ref, res, url);
}


function gmExcelGridRowAndCellColor(object, fg){
  	if (object.getRowCount() > 0 ) {
      for (var i=0;i<object.getTotalCol();i++) {   
    	  if (object.getColumnReadOnly(i)) {
    		  continue;
    	  } else {
    		  if (object.getColumnType( i ) == "text" || object.getColumnType( i ) == "select" || 
    			  object.getColumnType( i ) == "calendar" || object.getColumnType( i ) == "textarea" || 
    			  object.getColumnType( i ) == "checkbox"  ) {
                  object.setColumnBackgroundColor(i, "#FFFCD7" );                      
    		  }
          } 
      }
    }
  	
  	for (var i=0; i<object.getRowCount(); i++){
  		if(object.getCellData(i, fg) != 'Y') {
  			object.setRowBackgroundColor( i, "#FC8383" );
  		}
  	}
}

/*============================================================================
 ** 기능  : null 값 체크
 ** 인수  : ex ) 
 ** 결과  : 
 ============================================================================*/
function gmIsEmpty(sValValue) {
	
	if (sValValue == null || sValValue == "") {
		return true;
	}

	return false;
}

/*============================================================================
 ** 기능  : 숫자값이 null인 경우 체크
 ** 인수  : ex ) 
 ** 결과  : 
 ============================================================================*/
function gmIsNumEmpty(obj) {
	
	var objVal = eval(obj).getValue();
	
    if ( gmIsEmpty(objVal) ) {
    	eval(obj).setValue( "0" );
    }

}

/*============================================================================
 ** 기능  : 날짜형식체크
 ** 인수  : ex ) "2012-12-31"
 ** 결과  : 
 ============================================================================*/
function isDateFormat(value) {
	value = jQuery.trim(value.replace(/\-/g, ""));
	var regExp = /^(19|20)\d{2}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[0-1])$/;

	return !regExp.test(value);
}

/*============================================================================
 ** 기능  : 년월형식 체크
 ** 인수 : 
 ** 결과  : 
 ============================================================================*/
function isValidYearMonth(value) {
	value = jQuery.trim(value.replace(/\-/g, ""));
	var regExp = /^[1-9][0-9]{3}(0[1-9]|1[0-2])$/;
	return !regExp.test(value);
}

/*============================================================================
 ** 기능  : 년형식 체크
 ** 인수 : 
 ** 결과  : 
 ============================================================================*/
function isValidYear(value) {
	value = jQuery.trim(value.replace(/\-/g, ""));
	var regExp = /^[1-9][0-9]{3}$/;
	return !regExp.test(value);
}

/*============================================================================
 ** 기능  : 월형식 체크
 ** 인수 : 
 ** 결과  : 
 ============================================================================*/
function isValidMonth(value) {
	value = jQuery.trim(value.replace(/\-/g, ""));
	var regExp = /^([0-9]|1[012])$/;
	return !regExp.test(value);
}

/*============================================================================
 ** 기능  : 일자형식 체크
 ** 인수 : 
 ** 결과  : 
 ============================================================================*/
function isValidDay(value) {
	value = jQuery.trim(value.replace(/\-/g, ""));
	var regExp = /^([0-9]|[12][0-9]|3[0-1])$/;
	return !regExp.test(value);
}

/*============================================================================
 ** 기능  : 일자 val체크(컴포넌트)
 ** 인수  : 
 ** 결과  : 
 ============================================================================*/
function chkDateCom(obj, objNm) {
	objNm = (objNm == undefined) ? "" : objNm;

	var objVal = eval(obj).getValue();

    if( !gmIsEmpty(objVal) ){
        if (!isValidDate(objVal)) {
             showMsg("C_I024", objNm+"일자");
	    	 eval(obj).focus();
	    	 eval(obj).setValue("");
             return false;
         }
     }

	return true;
}

/*============================================================================
 ** 기능  : 년월 val체크(컴포넌트)
 ** 인수  : 
 ** 결과  : 
 ============================================================================*/
function chkYyMmCom(obj, objNm) {
	objNm = (objNm == undefined) ? "" : objNm;

	var objVal = eval(obj).getValue();

    if( !gmIsEmpty(objVal) ){
        if (!isValidYyMm(objVal)) {
             showMsg("C_I024", objNm+"월");
	    	 eval(obj).focus();
	    	 eval(obj).setValue("");
             return false;
         }
     }

	return true;
}

/*============================================================================
 ** 기능  : 시작일자 종료일자 val체크(컴포넌트)
 ** 인수  : 
 ** 결과  : 
 ============================================================================*/
function chkCalFromToCom(calFrom, calTo, calTxtFrom, calTxtTo) {
	calTxtFrom = (calTxtFrom == undefined) ? "" : calTxtFrom;
	calTxtTo = (calTxtTo == undefined) ? "" : calTxtTo;
	
	var calFromVal = eval(calFrom).getValue();
	var calToVal = eval(calTo).getValue();

    if( !gmIsEmpty(calFromVal) ){
        if (!isValidDate(calFromVal)) {
             showMsg("C_I040", calTxtFrom+"시작일자");
	    	 eval(calFrom).focus();
	    	 eval(calFrom).setValue("");
             return false;
         }
     }

     if( !gmIsEmpty(calToVal) ){
         if (!isValidDate(calToVal)) {
             showMsg("C_I040", calTxtTo+"종료일자");
		     eval(calTo).focus();
		     eval(calTo).setValue(""); 
             return false;
         }
     }
     
	if (!gmIsEmpty(calFromVal) && !gmIsEmpty(calFromVal)) {
        calFromVal = jQuery.trim(calFromVal.replace(/\-/g, ""));
        calToVal = jQuery.trim(calToVal.replace(/\-/g, ""));
			
        if(parseInt(calToVal) - parseInt(calFromVal) < 0){
            showMsg("C_I117", [calTxtTo+"종료일자", calTxtFrom+"시작일자"]);
            eval(calTo).focus();
            eval(calTo).setValue("");
            return false;
        }
    }
	return true;
}

/*============================================================================
 ** 기능  : 시작일자 종료일자 val체크(그리드)
 ** 인수  : 
 ** 결과  : 
 ============================================================================*/
function chkCalFromToGrid(obgect, row, calFrom, calTo, calTxtFrom, calTxtTo) {
	calTxtFrom = (calTxtFrom == undefined) ? "" : calTxtFrom;
	calTxtTo = (calTxtTo == undefined) ? "" : calTxtTo;
	
	var calFromVal = obgect.getCellData(row, calFrom);
	var calToVal = obgect.getCellData(row, calTo);

    if( !gmIsEmpty(calFromVal) ){
        if (!isValidDate(calFromVal)) {
             showMsg("C_I040", calTxtFrom+"시작일자");
             obgect.setFocusedCell( row , calFrom , true );
             obgect.setCellData(row, calFrom, "");
             return false;
         }
     }

     if( !gmIsEmpty(calToVal) ){
         if (!isValidDate(calToVal)) {
             showMsg("C_I040", calTxtTo+"종료일자");
             obgect.setFocusedCell( row , calTo , true );
             obgect.setCellData(row, calTo, "");
             return false;
         }
     }	
	
	if (!gmIsEmpty(calFromVal) && !gmIsEmpty(calFromVal)) {
        calFromVal = jQuery.trim(calFromVal.replace(/\-/g, ""));
        calToVal = jQuery.trim(calToVal.replace(/\-/g, ""));
			
        if(parseInt(calToVal) - parseInt(calFromVal) < 0){
            showMsg("C_I117", [calTxtTo+"종료일자", calTxtFrom+"시작일자"]);
            obgect.setFocusedCell( row , calTo , true );
            obgect.setCellData(row, calTo, "");
            return false;
        }
    }
    return true;
}

/*============================================================================
 ** 기능  : 년월 체크 
 ** 인수 : 
 ** 결과  : 
 ============================================================================*/  	
function isValidYyMm(iYyMm) {
	  if( iYyMm.length != 6 ) {
	    return false;
	  }
	   
	  oDate = new Date();
	  oDate.setFullYear(iYyMm.substring(0, 4));
	  oDate.setMonth(parseInt(iYyMm.substring(4)) - 1);
	  if( oDate.getFullYear()     != iYyMm.substring(0, 4) 
	      || oDate.getMonth() + 1 != iYyMm.substring(4) ){
	     
	    return false;
	  }
	    
	  return true;
	}


/*============================================================================
 ** 기능  : 월일 체크 
 ** 인수 : 
 ** 결과  : 
 ============================================================================*/  	
function isValidMmDd(value) {
    return isValidDate("2000"+value);
}

/*============================================================================
 ** 기능  : 파라미터로 받는 컴포넌트 중 빈 값이 하나라도 있으면  true를 리턴
 ** 인수  : 
 ** 결과  : 
 ============================================================================*/  	
function gmEmptyValueCheck() {
	var objs = arguments[0];
	var checkNotNullObjects = 0;
	
	for(var index in objs) {
		if(objs[index].getValue() != ""){
			checkNotNullObjects++;		
		}
	}
	
	if(checkNotNullObjects == 0) {
		return false;
	}
	
	if(objs.length != checkNotNullObjects) {
		return true;
	}
	
	return false;
}


/*===============================================================
 * function    : appointmentListPopup
 * Description : 지원자 목록 팝업
 * Parameter   : aplcNo(지원자번호/성명), rcritYearTims(년도/차수)
 * Return      : 
 **===============================================================*/
function appointmentListPopup(aplcNo, rcritYearTims,rcritTypeCd) {
    if (rcritYearTims == "") {
       showMsg("C_I054", "년도/차수를 ");                    
       return;
    }
    if(event.type == "click") {
    	openPopup("appointmentListPopupCommonCallBack","/views/gm/is/GM_IS_0020.xml"
	            , { width:900, height:530 }, {aplcNo:WebSquare.text.BASE64URLEncoder(aplcNo)
	            , rcritYearTims:WebSquare.text.BASE64URLEncoder(rcritYearTims)
	            , rcritTypeCd:WebSquare.text.BASE64URLEncoder(rcritTypeCd)}
        );
		return;
	}
    
    setValue("requestAppointmentList/aplcNo", aplcNo);
    setValue("requestAppointmentList/rcritYear", rcritYearTims.substring(0,4));
    setValue("requestAppointmentList/rcritTims", rcritYearTims.substring(4,5));
    setValue("requestAppointmentList/rcritTypeCd", rcritTypeCd);
    execSubmission("sub", "requestAppointmentList", "responseAppointmentList", "/is/listPopupAplcBas.do");
    
    var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseAppointmentList/object/userList/object");
    var rowCount = dataArr.length;
    
    WebSquare.ModelUtil.removeChildNodes( "requestAppointmentList" );
    
    if(rowCount == 1) {
    	var arrResult = new Array();
    	arrResult.push(getValue("responseAppointmentList/object/userList/object/rcritYear"));
        arrResult.push(getValue("responseAppointmentList/object/userList/object/rcritTims"));
        arrResult.push(getValue("responseAppointmentList/object/userList/object/rcritYearTims"));
        arrResult.push(getValue("responseAppointmentList/object/userList/object/aplcNo"));
        arrResult.push(getValue("responseAppointmentList/object/userList/object/aplcNm"));
        arrResult.push(getValue("responseAppointmentList/object/userList/object/birth"));
        arrResult.push(getValue("responseAppointmentList/object/userList/object/sexDvnm"));
        arrResult.push(getValue("responseAppointmentList/object/userList/object/rcritDeptNm"));
        arrResult.push(getValue("responseAppointmentList/object/userList/object/rcritFiedNm"));
        arrResult.push(getValue("responseAppointmentList/object/userList/object/orgNm"));
        arrResult.push(getValue("responseAppointmentList/object/userList/object/orgCd"));
        arrResult.push(getValue("responseAppointmentList/object/userList/object/iidno"));
        WebSquare.ModelUtil.removeChildNodes( "responseAppointmentList" );
        appointmentListPopupCommonCallBack(arrResult);
    } else if(rowCount > 1) {
    	WebSquare.ModelUtil.removeChildNodes( "responseAppointmentList" );
    	openPopup("appointmentListPopupCommonCallBack","/views/gm/is/GM_IS_0020.xml"
	            , { width:900, height:530 }, {aplcNo:WebSquare.text.BASE64URLEncoder(aplcNo)
	            , rcritYearTims:WebSquare.text.BASE64URLEncoder(rcritYearTims) 
	            , rcritTypeCd:WebSquare.text.BASE64URLEncoder(rcritTypeCd)}
        );
    } else if(rowCount == 0) {
    	showMsg("C_I041", "검색한 결과");
    }
    
 }

/*===============================================================
 * function    : appointmentListPopupCommonCallBack
 * Description : 지원자 목록 팝업 후에 호출되는 콜백
 * ☆ 화면에 appointmentListPopupCallBack(arrResult) 함수를 생성한 후에 처리
 * Parameter   : arrResult(지원자 정보 배열)
 * Return      : 지원자 정보 배열
 **===============================================================*/
function appointmentListPopupCommonCallBack(arrResult) {
	if (arrResult != undefined && arrResult != null) {
		setValue("appointmentUserInfo/rcritYear",arrResult[0]);       
	    setValue("appointmentUserInfo/rcritTims",arrResult[1]);    
	    setValue("appointmentUserInfo/rcritYearTims",arrResult[2]);     
	    setValue("appointmentUserInfo/aplcNo",arrResult[3]);     
	    setValue("appointmentUserInfo/aplcNm",arrResult[4]);     
	    setValue("appointmentUserInfo/birth",arrResult[5]);   
	    setValue("appointmentUserInfo/sexDvnm",arrResult[6]);    
	    setValue("appointmentUserInfo/rcritDeptNm",arrResult[7]);    
	    setValue("appointmentUserInfo/rcritFiedNm",arrResult[8]);    
	    setValue("appointmentUserInfo/orgNm",arrResult[9]);    
	    setValue("appointmentUserInfo/orgCd",arrResult[10]);
	    setValue("appointmentUserInfo/iidno",arrResult[11]);
    }
	
	if (typeof appointmentListPopupCallBack == 'function') {
		appointmentListPopupCallBack(arrResult);
	}
}

/*===============================================================
 * function    : gmReadOnlyAndDisable
 * Description : 파라미터로 넘어온 콤포넌트의 disabled, readOnly 처리
 * Parameter   : objs, bool
 **===============================================================*/
function gmReadOnlyAndDisabled() {
	var objs = arguments[0];
	var bool = arguments[1];
	
	for (var index in objs){
		objs[index].setDisabled(bool);
		objs[index].setReadOnly(bool);
		
		if(bool) 
			objs[index].setStyle( "background-color" , "#eeeeee" );
    	else 
    		objs[index].setStyle( "background-color" , "" );
	}
}


/*===============================================================
 * function    : gmReadOnly
 * Description : 파라미터로 넘어온 콤포넌트의 disabled, readOnly 처리
 * Parameter   : objs, bool
 **===============================================================*/
function gmReadOnly() {
	var objs = arguments[0];
	var bool = arguments[1];
	
	for (var index in objs){
		objs[index].setReadOnly(bool);
		
	}
}

/*===============================================================
 * function    : gmDisableBtn
 * Description : 파라미터로 넘어온 콤포넌트의 disabled 처리
 * Parameter   : objs, bool
 **===============================================================*/
function gmDisableBtn() {
	var objs = arguments[0];
	var bool = arguments[1];
	
	for (var index in objs){
		objs[index].setDisabled(bool);
	}
}

/*===============================================================
 * function    : gmIsEmailChecker
 * Description : 이메일 형식 체크
 * Parameter   : value
 **===============================================================*/
var gmIsEmailChecker = function(value) {
	if(value == ''){
		return false;
	}

	var regExp = /([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;

	return !regExp.test(value);
};

/*===============================================================
 * function    : calculateWorkMonth
 * Description : 경력년월계산
 * Parameter   : startDate, endDate
 **===============================================================*/
function calculateWorkMonth(startDayStr, endDayStr){
	var startDate = new Date(startDayStr.substring(0, 4), startDayStr.substring(4, 6) - 1, startDayStr.substring(6, 8));
	var endDate = new Date(endDayStr.substring(0, 4), endDayStr.substring(4, 6) - 1, endDayStr.substring(6, 8));
	
	var years = endDate.getFullYear() - startDate.getFullYear();
	var months = (endDate.getMonth()+1) - (startDate.getMonth()+1);
	var days = endDate.getDate() - startDate.getDate();
	
	var differentMonth = years * 12 + months + (days >= 14 ? 1 : 0);
	
	var result = new Array();  //결과 문자열
	
	if(differentMonth >= 12){
		var quotient = Math.floor(differentMonth / 12); 
		var rest = Math.floor(differentMonth % 12);
			  
		result[0] = quotient;
		
		if(rest != 0){
			result[1] = rest; 
		}else{
			result[1] = "0";
		}
	}else{
		result[0] = "0";
		result[1] = differentMonth; 
	}  
	return result;
}

/*===============================================================
 * function    : gmInitKeyCode
 * Description : 초기화 시킬 키코드 확인
 * Parameter   : event
 **===============================================================*/
function gmInitKeyCode() {
	//TAB, SHIFT 체크
	if(event.keyCode == 9 || event.keyCode == 16) {
		return false;
	}
	
	return true;
}
/*===============================================================
 * function    : gmInitKeyCode
 * Description : 초기화 시킬 키코드 확인
 * Parameter   : event
 **===============================================================*/
function gmInitKeyCodeMultiBrowser(e) {
	//TAB, SHIFT 체크
	if(e.keyCode == 9 || e.keyCode == 16) {
		return false;
	}
	
	return true;
}

/*===============================================================
 * function    : gmSearchRscharchvAPI
 * Description : 지도교수 검색 팝업
 * Parameter   : 
 **===============================================================*/
function gmSearchKri(serviceCode) {
	if( serviceCode == 12){
        var winWidth = 400;
        var winHeight = 500;
	}else if( serviceCode == 13){
		var winWidth = 550;
        var winHeight = 350;
	}else{
		showMsg("C_I024", ["서비스코드"]);
		return;
	}
    var winURL = "http://www.kri.go.kr/kri/ra/cm/sso/wisesso_pop.jsp";
    var winName = "popup";
    var winPosLeft = (screen.width - winWidth) / 2;
    var winPosTop = (screen.height - winHeight) / 2;
    var winOpt = "width="+winWidth+", height="+winHeight+", top="+winPosTop+", left="+winPosLeft+", status=1, toolbar=0, scrollbars=yes";
    var myWin = window.open(winURL, winName, winOpt);
    
    var $form = jQuery('<form></from>');
    var Kri_Param1 = jQuery('<input type="hidden" name="Kri_Param1" value="000100"/>');
    var Kri_certify = jQuery('<input type="hidden" name="Kri_certify" value="A000002781"/>'); //나중에 수원대 인증번호로 변경되야 함
    var Kri_Param9 = jQuery('<input type="hidden" name="Kri_Param9" value="https://'+gmGetCurrentServerUrl()+'/views/gm/is/resultKri.jsp"/>'); //기관에서 Return 받을 URL
    var Kri_charset = jQuery('<input type="hidden" name="Kri_charset" value="UTF-8"/>');
    var Kri_Service = jQuery('<input type="hidden" name="Kri_Service" value="'+serviceCode+'" />');
    
    jQuery("#rscharchvAPIForm").remove();
    $form.attr('action', winURL).attr('id', 'rscharchvAPIForm').attr('method', 'post').attr('target', winName);
    $form.append(Kri_Param1).append(Kri_certify).append(Kri_Param9).append(Kri_charset).append(Kri_Service);
    $form.appendTo('body');
    $form.submit();
}

/*===============================================================
 * function    : gmSetParamKri
 * Description : kri자료 set
 * Parameter   : name(연구자 성명), no(연구자 번호)
 **===============================================================*/
function gmSetParamKri(serviceCode, code, name){
	if( serviceCode == 12){
		sculCd.setValue(code);
		sculNm.setValue(name);
	}else if( serviceCode == 13){
		cchPrfsNm.setValue(code);
		cchPrfsRegNo.setValue(name);
	}else{
		showMsg("C_I024", ["서비스코드"]);
		return;
	}
}

/*===============================================================
 * function    : gmGetServerUrl
 * Description : 현재 서버 URI
 **===============================================================*/
function gmGetCurrentServerUrl(){
	var serverUrl = jQuery(location).attr('href').replace("http://","").replace("https://","");
	serverUrl = serverUrl.substring(0,serverUrl.indexOf("/"));
	return serverUrl;
}

/*===============================================================
 * function    : gmChkValid
 * Description : 파라미터로 넘어온 콤포넌트의 disabled, readOnly 처리
 * Parameter   : objs, bool
 **===============================================================*/
function gmChkValid() {

	var objs = arguments[0];
	var bool = arguments[1];
	var classGbn = (arguments[2] == undefined) ? "" : arguments[2];

	for (var index in objs){
		if(bool)
			objs[index].addClass( classGbn );
    	else 
    		objs[index].removeClass( classGbn );
    		objs[index].setStyle( "border-color" , "" );
	}
}

/*============================================================================
** 기능  : 학력관리 단과대학/학과 등록
** 인수  : 단과대학('02') 학과('04') 분류
** 리턴  : 
============================================================================*/
function gmAgcSearch(agcDiv) {
	if( agcDiv == "02" ){
		openPopup( "setAgcPopupValue", "/views/gm/is/GM_IS_0050.xml", {width: 450, height:550}, {agcDiv:WebSquare.text.BASE64URLEncoder(agcDiv)});
	}else if( agcDiv == "04" ){
		openPopup( "setAgcPopupValue", "/views/gm/is/GM_IS_0051.xml", {width: 450, height:550}, {agcDiv:WebSquare.text.BASE64URLEncoder(agcDiv)});
	}else{
		showMsg("C_I024", ["구분코드"]);
		return;
	}
}

/*============================================================================
** 기능  : 학력관리 단과대학/학과 팝업 후에 호출됨
** 인수  : arrResult
** 리턴  : 
============================================================================*/
function setAgcPopupValue(arrResult) {
	if(arrResult == undefined) {
		return;
	}
	
	if( arrResult[0] == "02" ){
		clgeCd.setValue( "" );
		clgeNm.setValue( "" );
		clgeCd.setValue( arrResult[1] );
		clgeNm.setValue( arrResult[2] );
	}else if( arrResult[0] == "04" ){
		dpmjCd.setValue( "" );
		dpmjNm.setValue( "" );
		dpmjCd.setValue( arrResult[1] );
		dpmjNm.setValue( arrResult[2] );
	}else{
		showMsg("C_I024", ["구분코드"]);
		return;
	}
}

/*============================================================================
 ** 기능  : 학력관리 직접입력
 ** 인수  : 입력값 타이틀
 ** 리턴  : 
============================================================================*/
function gmDirectInput(title, div) {
		openPopup( "setDirectInput", "/views/gm/is/GM_IS_0060.xml", {width: 450, height:200}, {title:WebSquare.text.BASE64URLEncoder(title), div:WebSquare.text.BASE64URLEncoder(div)});
}

/*============================================================================
 ** 기능  : 학력관리 직접입력
 ** 인수  : arrResult
 ** 리턴  : 
============================================================================*/
function setDirectInput(arrResult) {
	if(arrResult == undefined) {
		return;
	}
	
	if( arrResult[0] == "sculNm" ){
		sculCd.setValue( "" );
		sculNm.setValue( "" );
		sculNm.setValue( arrResult[1] );
	}else if( arrResult[0] == "clgeNm" ){
		clgeCd.setValue( "" );
		clgeNm.setValue( "" );
		clgeNm.setValue( arrResult[1] );
	}else if( arrResult[0] == "dpmjNm" ){
		dpmjCd.setValue( "" );
		dpmjNm.setValue( "" );
		dpmjNm.setValue( arrResult[1] );
	}else if( arrResult[0] == "rschFiedNm" ){
		rschFiedCd.setValue( "" );
		rschFiedNm.setValue( "" );
		rschFiedNm.setValue( arrResult[1] );
	}else if( arrResult[0] == "cchPrfsNm" ){
		cchPrfsRegNo.setValue( "" );
		cchPrfsNm.setValue( "" );
		cchPrfsNm.setValue( arrResult[1] );
	}
}

/*============================================================================
 ** 기능  : 전공분야 등록
 ** 인수  : 
 ** 리턴  : 
============================================================================*/
function gmRschFiedSearch() {
	openPopup( "setRschFiedPopupValue", "/views/gm/is/GM_IS_0052.xml", {width: 450, height:600});
}

/*============================================================================
 ** 기능  : 전공분야 등록 팝업 후에 호출됨
 ** 인수  : arrResult
 ** 리턴  : 
============================================================================*/
function setRschFiedPopupValue(arrResult) {
	if(arrResult == undefined) {
		return;
	}
	
	rschFiedCd.setValue( "" );
	rschFiedNm.setValue( "" );
	rschFiedCd.setValue( arrResult[0] );
	rschFiedNm.setValue( arrResult[1] );
}

/*============================================================================
 ** 기능  : 사업자(거래처) 코드 팝업, 키 입력
 ** 인수  : bizno(사업자코드 object), mtltyNm(사업자명 object), submissionId(서브미션id)
 ** 리턴  : 사업자 코드, 사업자 명 해당 object에 set 및 사업자 정보 doc 로 리턴(setBiznoInfo(retDoc) 함수를 UI에 생성 후 코딩
============================================================================*/
function onClickBiznoPopUp(bizno, mtltyNm, submissionId) {
    if(event.type == 'click'){
       openPopup("biznoPopCallback", "/views/gm/hg/GM_HG_2114.xml",
                            { width      : 700
                            , height     : 550
                            , resizable  : false
                            , scrollbars : false } 
                          , {pBizno:      WebSquare.text.BASE64URLEncoder(bizno.getValue())
                          ,  pBiznoID :   WebSquare.text.BASE64URLEncoder(bizno.getID())
                          ,  pMtltyNmID : WebSquare.text.BASE64URLEncoder(mtltyNm.getID()) }) ;  
     } else {
        setValue("reqVndr/vndrCd", "" );
        setValue("reqVndr/bizno",  bizno.getValue() );
        execSubmission(submissionId, "reqVndr", "respVndr", "/hg/listHgVndrBas.do");
        
        var dataArr = WebSquare.ModelUtil.findInstanceNodes( "respVndr/object/vndrBasList/object" );

        if (dataArr.length != 1) {
           openPopup("setBiznoInfo", "/views/gm/hg/GM_HG_2114.xml",
                            { width      : 700
                            , height     : 550
                            , resizable  : false
                            , scrollbars : false }
                            , {pBizno:    WebSquare.text.BASE64URLEncoder(bizno.getValue())
                            ,  pBiznoID :   WebSquare.text.BASE64URLEncoder(bizno.getID())
                            ,  pMtltyNmID : WebSquare.text.BASE64URLEncoder(mtltyNm.getID()) } ) ;
        } else {
           bizno.setValue( getValue("respVndr/object/vndrBasList/object/bizno") );
           mtltyNm.setValue( getValue("respVndr/object/vndrBasList/object/vndrNm") );
           
           var doc = WebSquare.ModelUtil.findInstanceNode( "respVndr/object/vndrBasList/object" );
           try {setBiznoInfo(doc); }
           catch(e) {}
        }
     }                                          
}

function biznoPopCallback(retDoc, biznoID, mtltyNmID) {
	if (biznoID != null && biznoID.trim() != "" && biznoID != "undefined")
        eval(biznoID).setValue(WebSquare.xml.getValue( retDoc , "bizno"  ));
	if (mtltyNmID != null && mtltyNmID.trim() != "" && mtltyNmID != "undefined")
        eval(mtltyNmID).setValue(WebSquare.xml.getValue( retDoc , "vndrNm"  ));
    
    try {setBiznoInfo(retDoc); }
    catch(e) {}
}

/*============================================================================
 ** 기능  : 품목(대중소)분류 핸들링
 ** 인수  : 각 SelectBox Object
 ** 리턴  : 
 ============================================================================*/
function cobPrlsClsCd() {

	var obj = arguments[0];
	var useYnObj = arguments[1];
	var prlsGbnObj = arguments[2];
	var clearObjs = arguments[3];

	for (var index in clearObjs){
	    clearSelectBox(clearObjs[index]);
	}
	
	var useYn   = "";
	var prlsGbn = "";
	
	if (useYnObj == "Y") {
		useYn = "and useYn='Y'";
	}
	
	//폼목구분(1:일반품목, 9:소모품)
	if (prlsGbnObj == "1") { 
		prlsGbn = "and prlsClsCd!='9'";
	} else if (prlsGbnObj == "9") {
		prlsGbn = "and prlsClsCd='9'";
	}

	if (gmIsEmpty(obj)) {
		selectKprlsClsCd.setNodeSet("responseGmCode/object/prlsClsCd/object[prlsLevelCd='1'"+useYn+prlsGbn+"]","prlsClsCdnm","prlsClsCd");
	}else {
		if(obj.getID() == "selectKprlsClsCd"){
			selectLprlsClsCd.setNodeSet("responseGmCode/object/prlsClsCd/object[prlsLevelCd='2'"+useYn+" and upPrlsClsCd='" + selectKprlsClsCd.getValue() + "']","prlsClsCdnm","prlsClsCd");
			clearSelectBox(selectMprlsClsCd);
			clearSelectBox(selectSprlsClsCd);
		} else if(obj.getID() == "selectLprlsClsCd") {
			selectMprlsClsCd.setNodeSet("responseGmCode/object/prlsClsCd/object[prlsLevelCd='3'"+useYn+" and upPrlsClsCd='" + selectLprlsClsCd.getValue() + "']","prlsClsCdnm","prlsClsCd");
			clearSelectBox(selectSprlsClsCd);
		} else if(obj.getID() == "selectMprlsClsCd") {
		    selectSprlsClsCd.setNodeSet("responseGmCode/object/prlsClsCd/object[prlsLevelCd='4'"+useYn+" and upPrlsClsCd='" + selectMprlsClsCd.getValue() + "']","prlsClsCdnm","prlsClsCd");
		}
	}
}
/*============================================================================
 ** 기능  : 버튼 컨트롤
 ** 인수  : 버튼오브젝트 배열, 불 배열
 ** 리턴  : 
 ============================================================================*/
function gmBtnController() {
	var components = arguments[0];
	var boolParams = arguments[1];
	
	for(var index in components) {
		components[index].setDisabled(boolParams[index]);
	}
}

/*============================================================================
** 기능  : 일반행정 운전기사 && 그리드에 입력
** 인수  : submissionId, object
** 리턴  : 결과배열, 노드생성
    "drverPopupsearchInfo/drverNo"         운전자번호               
    "drverPopupsearchInfo/drverNm"         운전자성명             
    "drverPopupsearchInfo/sculClsCd"       학교분류코드           
    "drverPopupsearchInfo/drverClsCd"      운전자분류코드           
    "drverPopupsearchInfo/drverEno"        운전자사번             
    "drverPopupsearchInfo/hireDt"          임용일자              
    "drverPopupsearchInfo/licsKindCd"      면허종별코드            
    "drverPopupsearchInfo/licsNo"          면허번호              
    "drverPopupsearchInfo/rtirExptDt"      퇴직예정일자            
    "drverPopupsearchInfo/rtirDt"          퇴직일자              
    "drverPopupsearchInfo/vehiPrsrvAmt"    차량보존금액            
    "drverPopupsearchInfo/payAmt"          급여금액              
    "drverPopupsearchInfo/rtirExtnsProcYn" 퇴직연장처리여부          
    "drverPopupsearchInfo/idntyDpstXpirDt" 신원보증만기일자          
    "drverPopupsearchInfo/etcn"            기타내용              
============================================================================*/
function drverSearchGrid(grid , row , col, initCols) {
	gmSearchTypeFlag = "grid";
	gmSearchGridRow = row;
	gmSearchGridCol = col;
	gmSearchGridObjID = grid.getID();

	grid.setCellData( row , col+2 , "" );
	var value = grid.getCellData(row, col);
	grid.setCellData( row , col , "" );
	
	WebSquare.ModelUtil.removeChildNodes( "drverPopupsearchInfo" );
	
	if(initCols != undefined) {
		for(var index in initCols) {
			if(initCols[index] != "") {
				grid.setCellData( row , initCols[index] , "" );	
			}
		}
	}

	if(event.type != "click"){
		if(value.length < 1) {
			return;
		} else if(value.length < 2) {
			showMsg("C_I054", "기사명/번호를 2자 이상");
			return;
		}
	} 
	
	getDrverPopupInfo(event.type, value);
}

/*============================================================================
** 기능  : 총무 운전기사 조회 팝업
** 인수  : 운전기사명/번호, 성명 오브젝트
** 파라미터 : arguments[2]-> 학교구분, arguments[3]->기사구분, arguments[4]->면허종별, arguments[5]->면허번호
** 리턴  : 
    "drverPopupsearchInfo/drverNo"         운전자번호               
    "drverPopupsearchInfo/drverNm"         운전자성명             
    "drverPopupsearchInfo/sculClsCd"       학교분류코드           
    "drverPopupsearchInfo/drverClsCd"      운전자분류코드           
    "drverPopupsearchInfo/drverEno"        운전자사번             
    "drverPopupsearchInfo/hireDt"          임용일자              
    "drverPopupsearchInfo/licsKindCd"      면허종별코드            
    "drverPopupsearchInfo/licsNo"          면허번호              
    "drverPopupsearchInfo/rtirExptDt"      퇴직예정일자            
    "drverPopupsearchInfo/rtirDt"          퇴직일자              
    "drverPopupsearchInfo/vehiPrsrvAmt"    차량보존금액            
    "drverPopupsearchInfo/payAmt"          급여금액              
    "drverPopupsearchInfo/rtirExtnsProcYn" 퇴직연장처리여부          
    "drverPopupsearchInfo/idntyDpstXpirDt" 신원보증만기일자          
    "drverPopupsearchInfo/etcn"            기타내용              
============================================================================*/
function drverPopupSearch(textObj, nameObj) {
    gmSearchTypeFlag = "form";
    gmTextObjID = textObj.getID();
    gmNameObjID = nameObj.getID();
    
    nameObj.setValue("");
    var searchDrverNoValue = textObj.getValue();
    textObj.setValue("");
    WebSquare.ModelUtil.removeChildNodes( "drverPopupsearchInfo" );
    if(event.type != 'click') {
        if(searchDrverNoValue.length < 1) {
            nameObj.setValue("");
            return;
        } else if(searchDrverNoValue.length < 2) {
            showMsg("C_I054", "기사명/번호를 2자 이상");
            return;
        }
    } 
    getDrverPopupInfo(event.type, searchDrverNoValue, arguments[2], arguments[3], arguments[4], arguments[5]);
}
/*============================================================================
** 기능  : 운전기사 조회 팝업
** 인수  : value
** 리턴  : 
============================================================================*/
function getDrverPopupInfo(type, searchDrverNoValue) {
    var arrResult = new Array();
    var sculClsCdValue  = arguments[2];
    var drverClsCdValue = arguments[3];
    var licsKindCdValue = arguments[4];
    var licsNoValue = arguments[5];
    var encodeSearchDrverNoValue = "";
    var encodeSculClsCdValue = "";
    var encodeDrverClsCdValue = "";
    var encodeLicsKindCdValue = "";
    var encodeLicsNoValue = "";
    
    if(searchDrverNoValue != undefined) {
	    if(searchDrverNoValue != "") {
	        encodeSearchDrverNoValue = WebSquare.text.BASE64URLEncoder(searchDrverNoValue);
	    }
        setValue("reqDrverPopupSearchInfo/drverNo", searchDrverNoValue);
    }
    if(sculClsCdValue != undefined) {
        if(sculClsCdValue != "") {
            encodeSculClsCdValue = WebSquare.text.BASE64URLEncoder(sculClsCdValue);
        } 
        setValue("reqDrverPopupSearchInfo/sculClsCd", sculClsCdValue);
    }

    if(drverClsCdValue != undefined) {
        if(drverClsCdValue != "") {
            encodeDrverClsCdValue = WebSquare.text.BASE64URLEncoder(drverClsCdValue);
        } 
        setValue("reqDrverPopupSearchInfo/drverClsCd", drverClsCdValue);
    }

    if(licsKindCdValue != undefined) {
        if(licsKindCdValue != "") {
            encodeLicsKindCdValue = WebSquare.text.BASE64URLEncoder(licsKindCdValue);
        } 
        setValue("reqDrverPopupSearchInfo/licsKindCd", licsKindCdValue);
    }

    if(licsNoValue != undefined) {
        if(licsNoValue != "") {
            encodeLicsNoValue = WebSquare.text.BASE64URLEncoder(licsNoValue);
        } 
        setValue("reqDrverPopupSearchInfo/licsNo", licsNoValue);
    }
    
    
    if(type == "click") {
        openPopup( "setDrverPopupValue", "/views/gm/co/GM_CO_1010_Popup.xml", {width: 800, height:550}, {drverNo:encodeSearchDrverNoValue,sculClsCd:encodeSculClsCdValue,drverClsCd:encodeDrverClsCdValue,licsKindCd:encodeLicsKindCdValue,licsNo:encodeLicsNoValue});
        return;                                                                                                               
    }                                                                                                                         
                                                                                                                     
    execSubmission("getCommonDataSubm", "reqDrverPopupSearchInfo", "drverPopupsearchList", "/co/drverPopupListDrverBas.do");
    
    var dataArr = WebSquare.ModelUtil.findInstanceNodes("drverPopupsearchList/object/drverBasList/object");
    var rowCount = dataArr.length;
    
    if(rowCount == 1) {
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/drverNo"));       
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/drverNm"));       
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/sculClsCd"));     
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/drverClsCd"));    
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/drverEno"));      
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/hireDt"));        
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/licsKindCd"));    
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/licsNo"));        
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/rtirExptDt"));    
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/rtirDt"));        
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/vehiPrsrvAmt"));  
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/payAmt"));        
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/rtirExtnsProcYn"));
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/idntyDpstXpirDt"));
        arrResult.push(getValue("drverPopupsearchList/object/drverBasList/object/etcn"));          
        
        WebSquare.ModelUtil.removeChildNodes( "drverPopupsearchList" );
        
        setDrverPopupValue(arrResult);
    } else if(rowCount > 1) {
        WebSquare.ModelUtil.removeChildNodes( "drverPopupsearchList" );
        openPopup( "setDrverPopupValue", "/views/gm/co/GM_CO_1010_Popup.xml", {width: 800, height:550}, {drverNo:encodeSearchDrverNoValue,sculClsCd:encodeSculClsCdValue,drverClsCd:encodeDrverClsCdValue,licsKindCd:encodeLicsKindCdValue,licsNo:encodeLicsNoValue});
    } else if(rowCount == 0) {
        showMsg("C_I041", "기사명/번호로 검색한 결과");
    }
}

/*============================================================================
** 기능  : 운전기사 조회 팝업 후에 수행됨
** 인수  : arrResult
** 리턴  : 
============================================================================*/
function setDrverPopupValue(arrResult) {
    if(arrResult == undefined) {
        return;
    }
    
    setValue("drverPopupsearchInfo/drverNo"         ,arrResult[0]);       
    setValue("drverPopupsearchInfo/drverNm"         ,arrResult[1]);     
    setValue("drverPopupsearchInfo/sculClsCd"       ,arrResult[2]);    
    setValue("drverPopupsearchInfo/drverClsCd"      ,arrResult[3]);     
    setValue("drverPopupsearchInfo/drverEno"        ,arrResult[4]);     
    setValue("drverPopupsearchInfo/hireDt"          ,arrResult[5]);   
    setValue("drverPopupsearchInfo/licsKindCd"      ,arrResult[6]);    
    setValue("drverPopupsearchInfo/licsNo"          ,arrResult[7]);    
    setValue("drverPopupsearchInfo/rtirExptDt"      ,arrResult[8]);    
    setValue("drverPopupsearchInfo/rtirDt"          ,arrResult[9]);    
    setValue("drverPopupsearchInfo/vehiPrsrvAmt"    ,arrResult[10]);
    setValue("drverPopupsearchInfo/payAmt"          ,arrResult[11]);
    setValue("drverPopupsearchInfo/rtirExtnsProcYn" ,arrResult[12]);
    setValue("drverPopupsearchInfo/idntyDpstXpirDt" ,arrResult[13]);
    setValue("drverPopupsearchInfo/etcn"            ,arrResult[14]);

    if(gmSearchTypeFlag == "form") {
        eval(gmTextObjID).setValue( arrResult[0] );
        eval(gmNameObjID).setValue( arrResult[1] );
        
        //화면에서 부가정보를 사용할 경우에  gmDrverSearchFormCallBack 함수를 만들어 놓고 사용한다
        if (typeof gmDrverSearchFormCallBack == 'function') {
            gmDrverSearchFormCallBack(arrResult);
        }
        return;
    }
    
    eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
    eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
    
    //화면에서 부가정보를 사용할 경우에  gmDrverSearchGridCallBack 함수를 만들어 놓고 사용한다
    if (typeof gmDrverSearchGridCallBack == 'function') {
        gmDrverSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
    }
}      

/*============================================================================
** 기능  : 일반행정 운전기사 && 그리드에 입력
** 인수  : submissionId, object,arguments[2]-> 학교구분, arguments[3]->기사구분, arguments[4]->면허종별, arguments[5]->면허번호
** 리턴  : 결과배열, 노드생성
    "vehiPopupsearchInfo/vehiCd"         차량코드               
    "vehiPopupsearchInfo/vehiNo"         차량번호             
    "vehiPopupsearchInfo/sculClsCd"      학교분류코드           
    "vehiPopupsearchInfo/vehiClsCd"      차량구분코드           
    "vehiPopupsearchInfo/vehiKindCd"     차량종류코드             
============================================================================*/
function vehiSearchGrid(grid , row , col, initCols) {
	gmSearchTypeFlag = "grid";
	gmSearchGridRow = row;
	gmSearchGridCol = col;
	gmSearchGridObjID = grid.getID();

	grid.setCellData( row , col+2 , "" );
	var value = grid.getCellData(row, col);
	grid.setCellData( row , col , "" );
	
	WebSquare.ModelUtil.removeChildNodes( "vehiPopupsearchInfo" );
	
	if(initCols != undefined) {
		for(var index in initCols) {
			if(initCols[index] != "") {
				grid.setCellData( row , initCols[index] , "" );	
			}
		}
	}

	if(event.type != "click"){
		if(value.length < 1) {
			return;
		} else if(value.length < 2) {
			showMsg("C_I054", "차량코드/번호를 2자 이상");
			return;
		}
	} 
	
	getVehiPopupInfo(event.type, value);
}

/*============================================================================
** 기능  : 총무 차량 조회 팝업
** 인수  : 차량코드/번호 
** 파라미터 : 
** 리턴  : 
    "vehiPopupsearchInfo/vehiCd"         차량코드               
    "vehiPopupsearchInfo/vehiNo"         차량번호             
    "vehiPopupsearchInfo/sculClsCd"      학교분류코드           
    "vehiPopupsearchInfo/vehiClsCd"      차량구분코드           
    "vehiPopupsearchInfo/vehiKindCd"     차량종류코드             
============================================================================*/
function vehiPopupSearch(textObj, nameObj) {
    gmSearchTypeFlag = "form";
    gmTextObjID = textObj.getID();
    gmNameObjID = nameObj.getID();
    
    nameObj.setValue("");
    var searchVehiCdValue = textObj.getValue();
    textObj.setValue("");
    WebSquare.ModelUtil.removeChildNodes( "vehiPopupsearchInfo" );
    if(event.type != 'click') {
        if(searchVehiCdValue.length < 1) {
            nameObj.setValue("");
            return;
        } else if(searchVehiCdValue.length < 2) {
            showMsg("C_I054", "차량코드/번호를 2자 이상");
            return;
        }
    } 
    getVehiPopupInfo(event.type, searchVehiCdValue);
}
/*============================================================================
** 기능  : 차량 조회 팝업
** 인수  : value
** 리턴  : 
============================================================================*/
function getVehiPopupInfo(type, searchVehiCdValue) {
    var arrResult = new Array();
    var encodeSearchVehiCdValue = "";
     
    if(searchVehiCdValue != undefined) {
	    if(searchVehiCdValue != "") {
	    	encodeSearchVehiCdValue = WebSquare.text.BASE64URLEncoder(searchVehiCdValue);
	    }
        setValue("reqVehiPopupSearchInfo/vehiCd", searchVehiCdValue);
    }
    
    
    if(type == "click") {
        openPopup( "setVehiPopupValue", "/views/gm/co/GM_CO_1020_Popup.xml", {width: 800, height:550}, {vehiCd:encodeSearchVehiCdValue});
        return;                                                                                                               
    }                                                                                                                         
                                                                                                                     
    execSubmission("getCommonDataSubm", "reqVehiPopupSearchInfo", "vehiPopupsearchList", "/co/vehiPopupListVehiBas.do");
    
    var dataArr = WebSquare.ModelUtil.findInstanceNodes("vehiPopupsearchList/object/vehiBasList/object");
    var rowCount = dataArr.length;
    
    if(rowCount == 1) {
        arrResult.push(getValue("vehiPopupsearchList/object/vehiBasList/object/vehiCd"));       
        arrResult.push(getValue("vehiPopupsearchList/object/vehiBasList/object/vehiNo"));       
        
        WebSquare.ModelUtil.removeChildNodes( "vehiPopupsearchList" );
        
        setVehiPopupValue(arrResult);
    } else if(rowCount > 1) {
        WebSquare.ModelUtil.removeChildNodes( "vehiPopupsearchList" );
        openPopup( "setVehiPopupValue", "/views/gm/co/GM_CO_1020_Popup.xml", {width: 800, height:550}, {vehiCd:encodeSearchVehiCdValue});
    } else if(rowCount == 0) {
        showMsg("C_I041", "차량코드/번호로 검색한 결과");
    }
}

/*============================================================================
** 기능  : 차량코드 조회 팝업 후에 수행됨
** 인수  : arrResult
** 리턴  : 
============================================================================*/
function setVehiPopupValue(arrResult) {
    if(arrResult == undefined) {
        return;
    }
    
    setValue("vehiPopupsearchInfo/vehiCd"         ,arrResult[0]);       
    setValue("vehiPopupsearchInfo/vehiNo"         ,arrResult[1]);     

    if(gmSearchTypeFlag == "form") {
        eval(gmTextObjID).setValue( arrResult[0] );
        eval(gmNameObjID).setValue( arrResult[1] );
        
        //화면에서 부가정보를 사용할 경우에  gmDrverSearchFormCallBack 함수를 만들어 놓고 사용한다
        if (typeof gmVehiSearchFormCallBack == 'function') {
            gmVehiSearchFormCallBack(arrResult);
        }
        return;
    }
    
    eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
    eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
    
    //화면에서 부가정보를 사용할 경우에  gmDrverSearchGridCallBack 함수를 만들어 놓고 사용한다
    if (typeof gmVehiSearchGridCallBack == 'function') {
        gmVehiSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
    }
}    

/*============================================================================
** 기능  : 팝업띄울때 코드와 이름체크하기
** 인수  : checkPopup
** 리턴  : 장수연
============================================================================*/
 function checkPopup(objCd, objNm, msg) {
    if(objCd.getValue() != "" && objNm.getValue() == ""){
         showMsg("C_I024", msg);
         return;
    }
 } 

 /*============================================================================
  ** 기능  : 구매_품목팝업
  ** 인수  : 코드/품목명, 품목명 오브젝트
  ** 리턴  : 
      "responseGmSearchPrlsInfo/prlsCd"      품목코드            
      "responseGmSearchPrlsInfo/prlsNm"      품목명
      "responseGmSearchPrlsInfo/kprlsClsCd"  품목분류코드      
      "responseGmSearchPrlsInfo/lprlsClsCd"  대분류            
      "responseGmSearchPrlsInfo/mprlsClsCd"  중분류     
      "responseGmSearchPrlsInfo/prlsClsCd"   소분류            
      "responseGmSearchPrlsInfo/prlsEnm"     품목영문명 
      "responseGmSearchPrlsInfo/specNm"      규격            
      "responseGmSearchPrlsInfo/unitCd"      단위 
      "responseGmSearchPrlsInfo/uslfYcnt"    내용연수            
      "responseGmSearchPrlsInfo/stckQty"     재고수량 
  ============================================================================*/
  function gmPrlsSearch(textObj, nameObj) {
  	gmSearchTypeFlag = "form";
  	gmTextObjID = textObj.getID();
  	gmNameObjID = nameObj.getID();

  	//nameObj.setValue("");
  	var value = textObj.getValue();
  	//textObj.setValue("");

  	if(event.type != 'click') {

  	  	nameObj.setValue("");
  	  	textObj.setValue("");
  	  	
  		if(value.length < 1) {
  			return;
  		} else if(value.length < 2) {
  			showMsg("C_I054", "품목 코드/명을 2자 이상");
  			return;
  		}
  	} 
  	
  	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchPrlsInfo" );


  	
  	getGmPrlsInfo(event.type, value, arguments[2], arguments[3], arguments[4]);
  }

  /*============================================================================
  ** 기능  : 구매_품목팝업 && 그리드에 입력
  ** 인수  : submissionId, object
  ** 리턴  : 결과배열, 노드생성
      "responseGmSearchPrlsInfo/prlsCd"      품목코드            
      "responseGmSearchPrlsInfo/prlsNm"      품목명
      "responseGmSearchPrlsInfo/kprlsClsCd"  품목분류코드      
      "responseGmSearchPrlsInfo/lprlsClsCd"  대분류            
      "responseGmSearchPrlsInfo/mprlsClsCd"  중분류     
      "responseGmSearchPrlsInfo/prlsClsCd"   소분류            
      "responseGmSearchPrlsInfo/prlsEnm"     품목영문명 
      "responseGmSearchPrlsInfo/specNm"      규격            
      "responseGmSearchPrlsInfo/unitCd"      단위 
      "responseGmSearchPrlsInfo/uslfYcnt"    내용연수            
      "responseGmSearchPrlsInfo/stckQty"     재고수량 
  ============================================================================*/
  function gmPrlsSearchGrid(grid , row , col, initCols) {
  	gmSearchTypeFlag = "grid";
  	gmSearchGridRow = row;
  	gmSearchGridCol = col;
  	gmSearchGridObjID = grid.getID();
  	
  	//var value = grid.getCellData(row, col);
  	
  	//grid.setCellData( row , col+2 , "" );
  	var value = grid.getCellData(row, col);
  	//grid.setCellData( row , col , "" );
  	
  	if(event.type != "click"){
  	  	grid.setCellData( row , col+2 , "" );
  	  	grid.setCellData( row , col , "" );
  	  	
  		if(value.length < 1) {
  			return;
  		} else if(value.length < 2) {
  			showMsg("C_I054", "품목 코드/명을 2자 이상");
  			return;
  		}
  	}
  	
  	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchPrlsInfo" );
  	
  	if(initCols != undefined) {
  		for(var index in initCols) {
  			if(initCols[index] != "") {
  				grid.setCellData( row , initCols[index] , "" );	
  			}
  		}
  	}
  	
  	getGmPrlsInfo(event.type, value, arguments[4], arguments[5], arguments[6]);
  }

  
  /*============================================================================
   ** 기능  : 구매_품목 조회 팝업
   ** 인수  : value
   ** 리턴  : 
   ============================================================================*/
   function getGmPrlsInfo(type,value) {
       var encodeValue = "";
   	   var arrResult = new Array();
   	
       var kprlsClsCd = arguments[2];
       var lprlsClsCd = arguments[3];
       var mprlsClsCd = arguments[4];
       var encodeKprlsClsCd = "";
       var encodeLprlsClsCd = "";
       var encodeMprlsClsCd = "";
 	
       if(value != "") {
           encodeValue = WebSquare.text.BASE64URLEncoder(value);
       }

       if(kprlsClsCd != undefined) {
           if(kprlsClsCd != "") {
               encodeKprlsClsCd = WebSquare.text.BASE64URLEncoder(kprlsClsCd);
           } 
           setValue("requestGmSearchPrls/kprlsClsCd", kprlsClsCd);
       }

       if(lprlsClsCd != undefined) {
           if(lprlsClsCd != "") {
               encodeLprlsClsCd = WebSquare.text.BASE64URLEncoder(lprlsClsCd);
           }
           setValue("requestGmSearchPrls/lprlsClsCd", lprlsClsCd);
       }

       if(mprlsClsCd != undefined) {
           if(mprlsClsCd != "") {
        	   encodeMprlsClsCd = WebSquare.text.BASE64URLEncoder(mprlsClsCd);
           }
           setValue("requestGmSearchPrls/mprlsClsCd", mprlsClsCd);
       }
       
       if(type == "click") {
           openPopup( "setGmPrlsPopupValue", "/views/gm/gm/GM_GM_1040_Popup.xml", {width: 900, height:560}, {prlsCdNm:encodeValue, kprlsClsCd:encodeKprlsClsCd, lprlsClsCd:encodeLprlsClsCd, mprlsClsCd:encodeMprlsClsCd});
           return;
       }

       setValue("requestGmSearchPrls/prlsCdNm", value);

       execSubmission("sub", "requestGmSearchPrls", "responseGmSearchPrls", "/gm/listPrlsBas.do");

       var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchPrls/object/prlsBasList/object");
       var rowCount = dataArr.length;

       if(rowCount == 1) {
           arrResult.push(getValue("responseGmSearchPrls/object/prlsBasList/object/prlsCd"));
       	   arrResult.push(getValue("responseGmSearchPrls/object/prlsBasList/object/prlsNm"));
           arrResult.push(getValue("responseGmSearchPrls/object/prlsBasList/object/kprlsClsCd"));
       	   arrResult.push(getValue("responseGmSearchPrls/object/prlsBasList/object/lprlsClsCd"));
       	   arrResult.push(getValue("responseGmSearchPrls/object/prlsBasList/object/mprlsClsCd"));
       	   arrResult.push(getValue("responseGmSearchPrls/object/prlsBasList/object/prlsClsCd"));
       	   arrResult.push(getValue("responseGmSearchPrls/object/prlsBasList/object/prlsEnm"));	
       	   arrResult.push(getValue("responseGmSearchPrls/object/prlsBasList/object/specNm"));
       	   arrResult.push(getValue("responseGmSearchPrls/object/prlsBasList/object/unitCd"));  	
       	   arrResult.push(getValue("responseGmSearchPrls/object/prlsBasList/object/uslfYcnt"));
       	   arrResult.push(getValue("responseGmSearchPrls/object/prlsBasList/object/stckQty"));
       	   arrResult.push(getValue("responseGmSearchPrls/object/prlsBasList/object/seviceLifeYcnt"));
           
       	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchPrls" );
           
           setGmPrlsPopupValue(arrResult);
       } else if(rowCount > 1) {
           WebSquare.ModelUtil.removeChildNodes( "responseGmSearchPrls" );
       	   openPopup( "setGmPrlsPopupValue", "/views/gm/gm/GM_GM_1040_Popup.xml", {width: 900, height:560}, {prlsCdNm:encodeValue, kprlsClsCd:encodeKprlsClsCd, lprlsClsCd:encodeLprlsClsCd, mprlsClsCd:encodeMprlsClsCd});
       } else if(rowCount == 0) {
       	   showMsg("C_I041", "품목 코드/명으로 검색한 결과");
       }
   }

  /*============================================================================
  ** 기능  : 구매_품목 조회 팝업 후에 호출됨
  ** 인수  : arrResult
  ** 리턴  : 
  ============================================================================*/
  function setGmPrlsPopupValue(arrResult) {
  	  if(arrResult == undefined) {
  		  return;
      }
  	
  	  setValue("responseGmSearchPrlsInfo/prlsCd",arrResult[0]); //품목코드       
      setValue("responseGmSearchPrlsInfo/prlsNm",arrResult[1]); //품목명
  	  setValue("responseGmSearchPrlsInfo/kprlsClsCd",arrResult[2]); //품목분류코드  
      setValue("responseGmSearchPrlsInfo/lprlsClsCd",arrResult[3]); //대분류
      setValue("responseGmSearchPrlsInfo/mprlsClsCd",arrResult[4]); //중분류
      setValue("responseGmSearchPrlsInfo/prlsClsCd",arrResult[5]); //소분류
      setValue("responseGmSearchPrlsInfo/prlsEnm",arrResult[6]); //품목영문명
      setValue("responseGmSearchPrlsInfo/specNm",arrResult[7]); //규격
      setValue("responseGmSearchPrlsInfo/unitCd",arrResult[8]); //단위
      setValue("responseGmSearchPrlsInfo/uslfYcnt",arrResult[9]); //감가상각연수
      setValue("responseGmSearchPrlsInfo/stckQty",arrResult[10]); //재고수량
      setValue("responseGmSearchPrlsInfo/seviceLifeYcnt",arrResult[11]); //내용연수

      if(gmSearchTypeFlag == "form") {
      	eval(gmTextObjID).setValue( arrResult[0] );
      	eval(gmNameObjID).setValue( arrResult[1] );
      	
      	//화면에서 부가정보를 사용할 경우에  gmPrlsSearchFormCallBack 함수를 만들어 놓고 사용한다
      	if (typeof gmPrlsSearchFormCallBack == 'function') {
      		gmPrlsSearchFormCallBack(arrResult);
      	}
  		return;
  	}
  	
  	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
  	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
  	
  	//화면에서 부가정보를 사용할 경우에  gmPrlsSearchGridCallBack 함수를 만들어 놓고 사용한다
  	if (typeof gmPrlsSearchGridCallBack == 'function') {
  		gmPrlsSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
  	}
  }
  
  
  /*============================================================================
   ** 기능  : 구매_거래처팝업
   ** 인수  : 거래처코드/거래처명, 거래처명 오브젝트
   ** 리턴  : 
       "responseGmSearchVndrInfo/vndrCd"      거래처코드            
       "responseGmSearchVndrInfo/vndrNm"      거래처명     
       "responseGmSearchVndrInfo/bizno"       사업자등록번호            
       "responseGmSearchVndrInfo/iidno"       주민등록번호     
       "responseGmSearchVndrInfo/vndrClsCd"   거래처분류            
       "responseGmSearchVndrInfo/bizcNm"      업태 
       "responseGmSearchVndrInfo/eventNm"     종목            
       "responseGmSearchVndrInfo/dealYn"      거래여부 
       "responseGmSearchVndrInfo/tpicNm"      담당자명 
       "responseGmSearchVndrInfo/tpicTelno"   담당자전화번호 
       "responseGmSearchVndrInfo/tpicMpno"    담당자휴대전화번호 
   ============================================================================*/
   function gmVndrSearch(textObj, nameObj) {
       gmSearchTypeFlag = "form";
   	   gmTextObjID = textObj.getID();
   	   gmNameObjID = nameObj.getID();
   	
   	   //nameObj.setValue("");
   	   var value = textObj.getValue();
   	   //textObj.setValue("");

   	   if(event.type != 'click') {

   	   	   nameObj.setValue("");
   	   	   textObj.setValue("");
   	   	   
   		   if(value.length < 1) {
   			   return;
   		   } else if(value.length < 2) {
   			   showMsg("C_I054", "거래처 코드/명을 2자 이상");
   			   return;
   		   }
   	   } 
   	   
   	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchVndrInfo" );

   	   getGmVndrInfo(event.type, value, arguments[2], arguments[3]);
   }

   /*============================================================================
    ** 기능  : 구매_거래처팝업 && 그리드에 입력
    ** 인수  : submissionId, object
    ** 리턴  : 결과배열, 노드생성
       "responseGmSearchVndrInfo/vndrCd"      거래처코드            
       "responseGmSearchVndrInfo/vndrNm"      거래처명     
       "responseGmSearchVndrInfo/bizno"       사업자등록번호            
       "responseGmSearchVndrInfo/iidno"       주민등록번호     
       "responseGmSearchVndrInfo/vndrClsCd"   거래처분류            
       "responseGmSearchVndrInfo/bizcNm"      업태 
       "responseGmSearchVndrInfo/eventNm"     종목            
       "responseGmSearchVndrInfo/dealYn"      거래여부 
       "responseGmSearchVndrInfo/tpicNm"      담당자명 
       "responseGmSearchVndrInfo/tpicTelno"   담당자전화번호 
       "responseGmSearchVndrInfo/tpicMpno"    담당자휴대전화번호 
    ============================================================================*/
    function gmVndrSearchGrid(grid , row , col, initCols) {
    	gmSearchTypeFlag = "grid";
    	gmSearchGridRow = row;
    	gmSearchGridCol = col;
    	gmSearchGridObjID = grid.getID();
    	
    	//var value = grid.getCellData(row, col);
    	
    	//grid.setCellData( row , col+2 , "" );
    	var value = grid.getCellData(row, col);
    	//grid.setCellData( row , col , "" );
    	
    	if(event.type != "click"){

        	grid.setCellData( row , col+2 , "" );
        	grid.setCellData( row , col , "" );	
    		
    		if(value.length < 1) {
    			return;
    		} else if(value.length < 2) {
    			showMsg("C_I054", "거래처 코드/명을 2자 이상");
    			return;
    		}
    	}
    	
    	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchVndrInfo" );
    	
    	if(initCols != undefined) {
    		for(var index in initCols) {
    			if(initCols[index] != "") {
    				grid.setCellData( row , initCols[index] , "" );	
    			}
    		}
    	}


    	
    	getGmVndrInfo(event.type, value, arguments[4], arguments[5]);
    }
    
    /*============================================================================
     ** 기능  : 구매_거래처 조회 팝업
     ** 인수  : value
     ** 리턴  : 
     ============================================================================*/
     function getGmVndrInfo(type,value) {
     	   var encodeValue = "";
         var arrResult = new Array();

         var sculDvcd = getUserInfoValue( "sculDvcd" );

         var encodeSculDvcd = "";
         
     	 if(value != "") {
     	    encodeValue = WebSquare.text.BASE64URLEncoder(value);
     	 } 

         if(sculDvcd != "") {
      	   encodeSculDvcd = WebSquare.text.BASE64URLEncoder(sculDvcd);
         } 
         
         if(type == "click") {
      	   if(typeof setNavigator != 'function') {
      		   openNewPopup( "setGmVndrPopupValue", "/views/gm/gm/GM_GM_1060_Popup.xml", {width: 950, height:580}, {vndrCdNm:encodeValue, sculDvcd:encodeSculDvcd});
         	       return;  
             }
             openPopup( "setGmVndrPopupValue", "/views/gm/gm/GM_GM_1060_Popup.xml", {width: 950, height:580}, {vndrCdNm:encodeValue, sculDvcd:encodeSculDvcd});
     	       return;
     	   }

         setValue("requestGmSearchVndr/vndrCdNm", value);
         setValue("requestGmSearchVndr/sculDvcd", sculDvcd);


         execSubmission("sub", "requestGmSearchVndr", "responseGmSearchVndr", "/gm/listVndrBas.do");

         var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchVndr/object/vndrBasList/object");
         var rowCount = dataArr.length;

         if(rowCount == 1) {
         	   arrResult.push(getValue("responseGmSearchVndr/object/vndrBasList/object/vndrCd"));
         	   arrResult.push(getValue("responseGmSearchVndr/object/vndrBasList/object/vndrNm"));
         	   arrResult.push(getValue("responseGmSearchVndr/object/vndrBasList/object/bizno"));
         	   arrResult.push(getValue("responseGmSearchVndr/object/vndrBasList/object/iidno"));
         	   arrResult.push(getValue("responseGmSearchVndr/object/vndrBasList/object/vndrClsCd"));
         	   arrResult.push(getValue("responseGmSearchVndr/object/vndrBasList/object/bizcNm"));	
         	   arrResult.push(getValue("responseGmSearchVndr/object/vndrBasList/object/eventNm"));
         	   arrResult.push(getValue("responseGmSearchVndr/object/vndrBasList/object/dealYn"));  	
         	   arrResult.push(getValue("responseGmSearchVndr/object/vndrBasList/object/tpicNm"));
         	   arrResult.push(getValue("responseGmSearchVndr/object/vndrBasList/object/tpicTelno"));  	
         	   arrResult.push(getValue("responseGmSearchVndr/object/vndrBasList/object/tpicMpno"));
         	   
             WebSquare.ModelUtil.removeChildNodes( "responseGmSearchVndr" );
             
             setGmVndrPopupValue(arrResult);
         } else if(rowCount > 1) {
         	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchVndr" );
             if(typeof setNavigator != 'function') {
          	   openNewPopup( "setGmVndrPopupValue", "/views/gm/gm/GM_GM_1060_Popup.xml", {width: 950, height:580}, {vndrCdNm:encodeValue, sculDvcd:encodeSculDvcd});
             }
         	   openPopup( "setGmVndrPopupValue", "/views/gm/gm/GM_GM_1060_Popup.xml", {width: 950, height:580}, {vndrCdNm:encodeValue, sculDvcd:encodeSculDvcd});
         } else if(rowCount == 0) {
             showMsg("C_I041", "거래처 코드/명으로 검색한 결과");
         }
     }

   /*============================================================================
   ** 기능  : 구매_거래처 조회 팝업 후에 호출됨
   ** 인수  : arrResult
   ** 리턴  : 
   ============================================================================*/
   function setGmVndrPopupValue(arrResult) {
       if(arrResult == undefined) {
           return;
       }
   	
       setValue("responseGmSearchVndrInfo/vndrCd",arrResult[0]); //거래처코드       
       setValue("responseGmSearchVndrInfo/vndrNm",arrResult[1]); //거래처명
   	   setValue("responseGmSearchVndrInfo/bizno",arrResult[2]); //사업자등록번호       
       setValue("responseGmSearchVndrInfo/iidno",arrResult[3]); //주민등록번호
       setValue("responseGmSearchVndrInfo/vndrClsCd",arrResult[4]); //거래처분류
       setValue("responseGmSearchVndrInfo/bizcNm",arrResult[5]); //업태
       setValue("responseGmSearchVndrInfo/eventNm",arrResult[6]); //종목
       setValue("responseGmSearchVndrInfo/dealYn",arrResult[7]); //거래여부
       setValue("responseGmSearchVndrInfo/tpicNm",arrResult[8]); //담당자명
       setValue("responseGmSearchVndrInfo/tpicTelno",arrResult[9]); //담당자전화번호
       setValue("responseGmSearchVndrInfo/tpicMpno",arrResult[10]); //담당자휴대전화번호
       
       if(gmSearchTypeFlag == "form") {
       	   eval(gmTextObjID).setValue( arrResult[0] );
       	   eval(gmNameObjID).setValue( arrResult[1] );
       	
       	   //화면에서 부가정보를 사용할 경우에  gmVndrSearchFormCallBack 함수를 만들어 놓고 사용한다
       	   if (typeof gmVndrSearchFormCallBack == 'function') {
       		   gmVndrSearchFormCallBack(arrResult);
       	   }
       	   
   		   return;
   	   }
   	
   	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
   	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
   	
   	   //화면에서 부가정보를 사용할 경우에  gmVndrSearchGridCallBack 함수를 만들어 놓고 사용한다
   	   if (typeof gmVndrSearchGridCallBack == 'function') {
   		   gmVndrSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
   	   }
   }

   
   /*============================================================================
    ** 기능  : 사업자번호 체크 
    ** 인수 : 10자리 숫자만 입력
    ** 결과  : 
    ============================================================================*/    
   function checkBizno(bizno){
   	
      if(bizno.length!=10) {
    	  showMsg("C_I054", "사업자번호 10자리를 숫자로 ");
          return false;
      }
  	    
       var a = new Array;
       var b = new Array(1,3,7,1,3,7,1,3,5);
       var sum = 0;
       for (i = 0; i < 10; i++) a[i] = bizno.substr(i,1);
       for (i = 0; i < 9;  i++) sum = sum + (a[i] * b[i]);
       sum = sum + ((a[8] * 5) / 10);
       y = (sum - (sum % 1)) % 10;
       if (y == 0)
           z = 0;
       else
           z = 10 - y;
       if (z != a[9]) {
    	   showMsg("C_I108", "사업자번호");
           return false;
       }
       return true;
   }
   
   /*============================================================================
   ** 기능  : 일반행정 학생조회 팝업
   ** 인수  : 학번/성명, 학번 오브젝트
   ** 리턴  : 
       "responseGmSearchStudentInfo/sno"     학번            
       "responseGmSearchStudentInfo/snoNm"   학생성명     
   ============================================================================*/
   function gmStudentSearch(textObj, nameObj) {
   	gmSearchTypeFlag = "form";
   	gmTextObjID = textObj.getID();
   	gmNameObjID = nameObj.getID();
   	
   	nameObj.setValue("");
   	var value = textObj.getValue();
   	textObj.setValue("");
   	
   	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchStudentInfo" );
   	
   	if(event.type != 'click') {
   		if(value.length < 1) {
   			return;
   		} else if(value.length < 2) {
   			showMsg("C_I054", "학생검색 학번/성명을 2자 이상");
   			return;
   		}
   	} 
   	
   	getGmStudentInfo(event.type, value, arguments[2], arguments[3]);
   }

   /*============================================================================
   ** 기능  : 일반행정 사번팝업 && 그리드에 입력
   ** 인수  : submissionId, object
   ** 리턴  : 결과배열, 노드생성
   ============================================================================*/
   function gmStudentSearchGrid(grid , row , col, initCols) {
   	gmSearchTypeFlag = "grid";
   	gmSearchGridRow = row;
   	gmSearchGridCol = col;
   	gmSearchGridObjID = grid.getID();

   	grid.setCellData( row , col+2 , "" );
   	var value = grid.getCellData(row, col);
   	grid.setCellData( row , col , "" );
   	
   	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchStudentInfo" );
   	
   	if(initCols != undefined) {
   		for(var index in initCols) {
   			if(initCols[index] != "") {
   				grid.setCellData( row , initCols[index] , "" );	
   			}
   		}
   	}

   	if(event.type != "click"){
   		if(value.length < 1) {
   			return;
   		} else if(value.length < 2) {
   			showMsg("C_I054", "학생검색 학번/성명을 2자 이상");
   			return;
   		}
   	} 
   	
   	getGmStudentInfo(event.type, value, arguments[4], arguments[5], arguments[6]);
   }
   /*===============================================================
    * function    : 
    * Description : 자산 프레임 이미지 클릭 시 팝업
    * Parameter   : 
    * Return      : 
    **===============================================================*/
   function jsPreviewImage(fileSeq, fileSeq1, fileSeq2) {
       var rtn = openPopup("", "/views/gm/js/jsPreviewImage.xml", {width:600, height:300}, {fileSeq:fileSeq, fileSeq1:fileSeq1, fileSeq2:fileSeq2});
   }

   /*============================================================================
    ** 기능  : 일반행정 그리드 소숫점 자릿수 체크 후 셋팅
    ** 인수  : grid->그리드ID,row -> rowIndex,col->col Index,intLength -> 정수 자릿수,floatLength -> 소숫점 자릿수
    ============================================================================*/
   function checkGridDigitNumber(grid,row,col,intLength,floatLength, objNm){
       var num = grid.getCellData( row , col );    
       
       if(num.charAt(num.length-1) == "." && num.substr(0, num.length-1).indexOf(".") != -1){
           grid.setCellData( row , col , num.substring(0,num.length-1));                          
       }
       if(num.indexOf(".") == 0){// 소숫점이 첫번째 있을 경우
    	   grid.setCellData( row , col , "");
       }else if(num.indexOf(".") == -1){// 소숫점 없을경우       
           if(num.length > intLength){         
               grid.setCellData( row , col , num.substring(0,intLength));                          
           }
       }else{// 소수점이 있을경우
    	   if(num.indexOf(".") > intLength){
    		   showMsg("C_I024",objNm); 
    		   grid.setCellData( row , col , "");
    	   }else if((num.length - num.indexOf(".")) - 1 > floatLength){  //                      
               grid.setCellData( row , col , num.substring(0,num.length-1));                          
           }
       }
   }

   /*============================================================================
    ** 기능  : 일반행정  소숫점 자릿수 체크 후 셋팅
    ** 인수  :obj -> 오브젝트,intLength -> 정수 자릿수,floatLength -> 소숫점 자릿수
    ============================================================================*/
   function checkDigitNumber(obj,intLength,floatLength, objNm){

       var num = parseFloat(obj.getValue());    
       
       if(num.charAt(num.length-1) == "." && num.substr(0, num.length-1).indexOf(".") != -1){
    	   obj.setValue(num.substring(0,num.length-1));                          
       }
       if(num.indexOf(".") == 0){// 소숫점이 첫번째 있을 경우
    	   obj.setValue("");
       }else if(num.indexOf(".") == -1){// 소숫점 없을경우       
           if(num.length > intLength){         
        	   obj.setValue(num.substring(0,num.length-1));                          
           }
       }else{// 소수점이 있을경우
    	   if(num.indexOf(".") > intLength){
    		   showMsg("C_I024",objNm); 
    		   obj.setValue("");
    	   }else if((num.length - num.indexOf(".")) - 1 > floatLength){  //                      
        	   obj.setValue(num.substring(0,num.length-1));                          
           }
       }
   }

   /*============================================================================
    ** 기능  : 구매_구매신청 팝업
    ** 인수  : 신청번호 오브젝트
    ** 리턴  : 
        "responseGmSearchPchsApplInfo/applNo"          신청번호
        "responseGmSearchPchsApplInfo/applDeptCd"      신청부서코드      
        "responseGmSearchPchsApplInfo/applDeptNm"      신청부서명     
        "responseGmSearchPchsApplInfo/pchsApplClsCd"   신청분류            
        "responseGmSearchPchsApplInfo/applDt"          신청일자     
        "responseGmSearchPchsApplInfo/pchsApplTtl"     구매신청제목            
        "responseGmSearchPchsApplInfo/pchsYear"        신청년도 
        "responseGmSearchPchsApplInfo/pchsSmrCd"       신청학기            
        "responseGmSearchPchsApplInfo/pchsApplEtcn"    비고 
    ============================================================================*/
    function gmPchsApplSearch(textObj) {
        gmSearchTypeFlag = "form";
        gmTextObjID = textObj.getID();
        //gmNameObjID = nameObj.getID();
    	
        var value = textObj.getValue();
        //textObj.setValue("");

        if(event.type != 'click') {
        	
        	textObj.setValue("");
        	
            if(value.length < 1) {
                return;
            } else if(value.length < 2) {
                showMsg("C_I054", "신청번호  2자 이상");
                return;
            }
        } 
        
        WebSquare.ModelUtil.removeChildNodes( "responseGmSearchPchsApplInfo" );


        
        //arguments 순서: 사번, 신청분류, 처리상태
        getGmPchsApplInfo(event.type, value, arguments[1], arguments[2], arguments[3], arguments[4]);
    }

    /*============================================================================
     ** 기능  : 구매_구매신청 팝업
     ** 인수  : 신청번호 오브젝트
     ** 리턴  : 
         "responseGmSearchPchsApplInfo/applNo"          신청번호
         "responseGmSearchPchsApplInfo/applDeptCd"      신청부서코드      
         "responseGmSearchPchsApplInfo/applDeptNm"      신청부서명     
         "responseGmSearchPchsApplInfo/pchsApplClsCd"   신청분류            
         "responseGmSearchPchsApplInfo/applDt"          신청일자     
         "responseGmSearchPchsApplInfo/pchsApplTtl"     구매신청제목            
         "responseGmSearchPchsApplInfo/pchsYear"        신청년도 
         "responseGmSearchPchsApplInfo/pchsSmrCd"       신청학기            
         "responseGmSearchPchsApplInfo/pchsApplEtcn"    비고 
     ============================================================================*/
     function gmPchsApplSearchMultiBrowser(e, textObj) {
         gmSearchTypeFlag = "form";
         gmTextObjID = textObj.getID();
         //gmNameObjID = nameObj.getID();
     	
         var value = textObj.getValue();
         //textObj.setValue("");

         if(e.type != 'click') {
         	
         	textObj.setValue("");
         	
             if(value.length < 1) {
                 return;
             } else if(value.length < 2) {
                 showMsg("C_I054", "신청번호  2자 이상");
                 return;
             }
         } 
         
         WebSquare.ModelUtil.removeChildNodes( "responseGmSearchPchsApplInfo" );


         
         //arguments 순서: 사번, 신청분류, 처리상태
         getGmPchsApplInfo(e.type, value, arguments[2], arguments[3], arguments[4], arguments[5]);
     }
     
    /*============================================================================
     ** 기능  : 구매_구매신청 팝업(실험실습소모품)
     ** 인수  : 신청번호 오브젝트
     ** 리턴  : 
         "responseGmSearchPchsApplInfo/applNo"          신청번호
         "responseGmSearchPchsApplInfo/applDeptCd"      신청부서코드      
         "responseGmSearchPchsApplInfo/applDeptNm"      신청부서명     
         "responseGmSearchPchsApplInfo/pchsApplClsCd"   신청분류            
         "responseGmSearchPchsApplInfo/applDt"          신청일자     
         "responseGmSearchPchsApplInfo/pchsApplTtl"     구매신청제목            
         "responseGmSearchPchsApplInfo/pchsYear"        신청년도 
         "responseGmSearchPchsApplInfo/pchsSmrCd"       신청학기            
         "responseGmSearchPchsApplInfo/pchsApplEtcn"    비고 
     ============================================================================*/
     function gmPchsApplSearch30(e, textObj) {
         gmSearchTypeFlag = "form";
         gmTextObjID = textObj.getID();
         //gmNameObjID = nameObj.getID();
     	
         var value = textObj.getValue();
         //textObj.setValue("");

         if(e.type != 'click') {
         	
         	textObj.setValue("");
         	
             if(value.length < 1) {
                 return;
             } else if(value.length < 2) {
                 showMsg("C_I054", "신청번호  2자 이상");
                 return;
             }
         } 
         
         WebSquare.ModelUtil.removeChildNodes( "responseGmSearchPchsApplInfo" );


         
         //arguments 순서: 사번, 신청분류, 처리상태
         getGmPchsApplInfo30(e.type, value, arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
     }
    /*============================================================================
     ** 기능  : 구매_구매신청팝업 && 그리드에 입력
     ** 인수  : submissionId, object
     ** 리턴  : 결과배열, 노드생성
        "responseGmSearchPchsApplInfo/applNo"          신청번호
        "responseGmSearchPchsApplInfo/applDeptCd"      신청부서코드      
        "responseGmSearchPchsApplInfo/applDeptNm"      신청부서명     
        "responseGmSearchPchsApplInfo/pchsApplClsCd"   신청분류            
        "responseGmSearchPchsApplInfo/applDt"          신청일자     
        "responseGmSearchPchsApplInfo/pchsApplTtl"     구매신청제목            
        "responseGmSearchPchsApplInfo/pchsYear"        신청년도 
        "responseGmSearchPchsApplInfo/pchsSmrCd"       신청학기            
        "responseGmSearchPchsApplInfo/pchsApplEtcn"    비고 
     ============================================================================*/    
     function gmPchsApplSearchGrid(grid , row , col, initCols) {
     	gmSearchTypeFlag = "grid";
     	gmSearchGridRow = row;
     	gmSearchGridCol = col;
     	gmSearchGridObjID = grid.getID();
     	
     	//var value = grid.getCellData(row, col);
     	
     	//grid.setCellData( row , col+2 , "" );
     	var value = grid.getCellData(row, col);
     	//grid.setCellData( row , col , "" );
     	
     	if(event.type != "click"){
     		
         	grid.setCellData( row , col+2 , "" );
         	grid.setCellData( row , col , "" );
         	
     		if(value.length < 1) {
     			return;
     		} else if(value.length < 2) {
     			showMsg("C_I054", "신청번호  2자 이상");
     			return;
     		}
     	}
     	
     	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchPchsApplInfo" );
     	
     	if(initCols != undefined) {
     		for(var index in initCols) {
     			if(initCols[index] != "") {
     				grid.setCellData( row , initCols[index] , "" );	
     			}
     		}
     	}
     	
     	//arguments 순서: 사번, 신청분류, 처리상태
     	getGmPchsApplInfo(event.type, value, arguments[4], arguments[5], arguments[6], arguments[7]);
     }
     
     /*============================================================================
      ** 기능  : 구매_구매신청 조회 팝업
      ** 인수  : value
      ** 리턴  : 
      ============================================================================*/
      function getGmPchsApplInfo(type,value) {
          var encodeValue = "";
          var arrResult = new Array();

      	var eno = arguments[2];
      	var pchsApplClsCd = arguments[3];
      	var pchsAppvStatCd = arguments[4];
      	var condition = arguments[5];

      	var encodeEno = "";
      	var encodePchsApplClsCd = "";
      	var encodePchsAppvStatCd = "";
      	var encodeCondition = "";
      	
      	if(value != "") {
      		encodeValue = WebSquare.text.BASE64URLEncoder(value);
      	}

      	if(eno != undefined) {
      		if(eno != "") {
      			encodeEno = WebSquare.text.BASE64URLEncoder(eno);
      		} 
      		setValue("requestGmSearchPchsAppl/applrEno", eno);
      	}

      	if(pchsApplClsCd != undefined) {
      		if(pchsApplClsCd != "") {
      			encodePchsApplClsCd = WebSquare.text.BASE64URLEncoder(pchsApplClsCd);
      		}
      	}
      	
      	if(pchsAppvStatCd != undefined) {
      		if(pchsAppvStatCd != "") {
      			encodePchsAppvStatCd = WebSquare.text.BASE64URLEncoder(pchsAppvStatCd);
      		}
      	}
      	
      	if(condition != undefined) {
      		if(condition != "") {
      			encodeCondition = WebSquare.text.BASE64URLEncoder(condition);
      		}
      		setValue("requestGmSearchPchsAppl/condition", condition);
      	}
      	
          if(type == "click") {
              openPopup( "setGmPchsApplPopupValue", "/views/gm/gm/GM_GM_2011_Popup.xml", {width: 950, height:560}, {applNo:encodeValue, eno:encodeEno, pchsApplClsCd:encodePchsApplClsCd, pchsAppvStatCd:encodePchsAppvStatCd, condition:encodeCondition});
  	        return;
          }

          setValue("requestGmSearchPchsAppl/applNo", value);

          execSubmission("sub", "requestGmSearchPchsAppl", "responseGmSearchPchsAppl", "/gm/listPchsApplBasPopup.do");

          var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchPchsAppl/object/pchsApplBasList/object");
          var rowCount = dataArr.length;
  	    
          if(rowCount == 1) {
          	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/applNo"));
          	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/applDeptCd"));
          	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/applDeptNm"));
          	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/pchsApplClsCd"));
          	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/applDt"));
          	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/pchsApplTtl"));	
          	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/pchsYear"));
          	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/pchsSmrCd"));  	
          	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/pchsApplEtcn"));

              WebSquare.ModelUtil.removeChildNodes( "responseGmSearchPchsAppl" );
              
              setGmPchsApplPopupValue(arrResult);
          } else if(rowCount > 1) {
          	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchPchsAppl" );
          	   openPopup( "setGmPchsApplPopupValue", "/views/gm/gm/GM_GM_2011_Popup.xml", {width: 950, height:560}, {applNo:encodeValue, eno:encodeEno, pchsApplClsCd:encodePchsApplClsCd, pchsAppvStatCd:encodePchsAppvStatCd, condition:encodeCondition});
          } else if(rowCount == 0) {
          	   showMsg("C_I041", "신청번호로 검색한 결과");
          }
      }
      
      /*============================================================================
       ** 기능  : 구매_구매신청 조회 팝업
       ** 인수  : value
       ** 리턴  : 
       ============================================================================*/
       function getGmPchsApplInfo30(type,value) {
         var encodeValue = "";
         var arrResult = new Array();

       	var eno = arguments[2];
       	var pchsApplClsCd = arguments[3];
       	var pchsAppvStatCd = arguments[4];
       	var condition = arguments[5];
       	var applDeptCd = arguments[6];

       	var encodeEno = "";
       	var encodePchsApplClsCd = "";
       	var encodePchsAppvStatCd = "";
       	var encodeCondition = "";
       	var encodeApplDeptCd = "";     
       	
       	if(value != "") {
       		encodeValue = WebSquare.text.BASE64URLEncoder(value);
       	}

       	if(eno != undefined) {
       		if(eno != "") {
       			encodeEno = WebSquare.text.BASE64URLEncoder(eno);
       		} 
       		setValue("requestGmSearchPchsAppl/applrEno", eno);
       	}
       	
    	if(applDeptCd != undefined) {
       		if(applDeptCd != "") {
       			encodeApplDeptCd = WebSquare.text.BASE64URLEncoder(applDeptCd);
       		} 
       		setValue("requestGmSearchPchsAppl/applDeptCd", applDeptCd);
       	}

       	if(pchsApplClsCd != undefined) {
       		if(pchsApplClsCd != "") {
       			encodePchsApplClsCd = WebSquare.text.BASE64URLEncoder(pchsApplClsCd);
       		}
       	}
       	
       	if(pchsAppvStatCd != undefined) {
       		if(pchsAppvStatCd != "") {
       			encodePchsAppvStatCd = WebSquare.text.BASE64URLEncoder(pchsAppvStatCd);
       		}
       	}
       	
       	if(condition != undefined) {
       		if(condition != "") {
       			encodeCondition = WebSquare.text.BASE64URLEncoder(condition);
       		}
       		setValue("requestGmSearchPchsAppl/condition", condition);
       	}
       	
           if(type == "click") {
               openPopup( "setGmPchsApplPopupValue", "/views/gm/gm/GM_GM_2011_Popup.xml", {width: 950, height:560}, {applNo:encodeValue, eno:encodeEno, pchsApplClsCd:encodePchsApplClsCd, pchsAppvStatCd:encodePchsAppvStatCd, condition:encodeCondition, applDeptCd:encodeApplDeptCd});
   	           return;
           }

           setValue("requestGmSearchPchsAppl/applNo", value);

           execSubmission("sub", "requestGmSearchPchsAppl", "responseGmSearchPchsAppl", "/gm/listPchsApplBasPopup30.do");

           var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchPchsAppl/object/pchsApplBasList/object");
           var rowCount = dataArr.length;
   	    
           if(rowCount == 1) {
           	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/applNo"));
           	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/applDeptCd"));
           	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/applDeptNm"));
           	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/pchsApplClsCd"));
           	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/applDt"));
           	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/pchsApplTtl"));	
           	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/pchsYear"));
           	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/pchsSmrCd"));  	
           	   arrResult.push(getValue("responseGmSearchPchsAppl/object/pchsApplBasList/object/pchsApplEtcn"));

               WebSquare.ModelUtil.removeChildNodes( "responseGmSearchPchsAppl" );
               
               setGmPchsApplPopupValue(arrResult);
           } else if(rowCount > 1) {
           	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchPchsAppl" );
           	   openPopup( "setGmPchsApplPopupValue", "/views/gm/gm/GM_GM_2011_Popup.xml", {width: 950, height:560}, {applNo:encodeValue, eno:encodeEno, pchsApplClsCd:encodePchsApplClsCd, pchsAppvStatCd:encodePchsAppvStatCd, condition:encodeCondition, applDeptCd:encodeApplDeptCd});
           } else if(rowCount == 0) {
           	   showMsg("C_I041", "신청번호로 검색한 결과");
           }
       } 
      
    /*============================================================================
    ** 기능  : 구매_구매신청 조회 팝업 후에 호출됨
    ** 인수  : arrResult
    ** 리턴  : 
    ============================================================================*/
    function setGmPchsApplPopupValue(arrResult) {
        if(arrResult == undefined) {
            return;
        }

        setValue("responseGmSearchPchsApplInfo/applNo",arrResult[0]); //신청번호       
        setValue("responseGmSearchPchsApplInfo/applDeptCd",arrResult[1]); //신청부서코드
        setValue("responseGmSearchPchsApplInfo/applDeptNm",arrResult[2]); //신청부서명       
        setValue("responseGmSearchPchsApplInfo/pchsApplClsCd",arrResult[3]); //신청분류
        setValue("responseGmSearchPchsApplInfo/applDt",arrResult[4]); //신청일자
        setValue("responseGmSearchPchsApplInfo/pchsApplTtl",arrResult[5]); //구매신청제목
        setValue("responseGmSearchPchsApplInfo/pchsYear",arrResult[6]); //신청년도
        setValue("responseGmSearchPchsApplInfo/pchsSmrCd",arrResult[7]); //신청학기
        setValue("responseGmSearchPchsApplInfo/pchsApplEtcn",arrResult[8]); //비고
        
        if(gmSearchTypeFlag == "form") {
        	   eval(gmTextObjID).setValue( arrResult[0] );
        	   //eval(gmNameObjID).setValue( arrResult[1] );
        	
        	   //화면에서 부가정보를 사용할 경우에  gmPchsApplSearchFormCallBack 함수를 만들어 놓고 사용한다
        	   if (typeof gmPchsApplSearchFormCallBack == 'function') {
        		   gmPchsApplSearchFormCallBack(arrResult);
        	   }
        	   
    		   return;
    	   }
    	
    	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
    	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
    	
    	   //화면에서 부가정보를 사용할 경우에  gmPchsApplSearchGridCallBack 함수를 만들어 놓고 사용한다
    	   if (typeof gmPchsApplSearchGridCallBack == 'function') {
    		   gmPchsApplSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
    	   }
    }

    /*============================================================================
     ** 기능  : 구매_발주팝업
     ** 인수  : 발주번호/발주명, 발주명 오브젝트
     ** 리턴  : 
         "responseGmSearchOrdeInfo/ordeNo"      발주번호           
         "responseGmSearchOrdeInfo/ordeNm"      발주명     
         "responseGmSearchOrdeInfo/ordeDt"      발주일자            
         "responseGmSearchOrdeInfo/domOvseCd"   내외구분     
         "responseGmSearchOrdeInfo/ctrtAmt"     발주금액            
         "responseGmSearchOrdeInfo/ctrtEntpCd"  발주업체코드 
         "responseGmSearchOrdeInfo/ctrtEntpNm"  발주업체명            
         "responseGmSearchOrdeInfo/delvDueDt"   납품기한일자 
         "responseGmSearchOrdeInfo/delvCompDt"  납품완료일자            
         "responseGmSearchOrdeInfo/delvPlacNm"  납품장소명 
     ============================================================================*/
     function gmOrdeSearch(textObj, nameObj) {
     	gmSearchTypeFlag = "form";
     	gmTextObjID = textObj.getID();
     	gmNameObjID = nameObj.getID();
     	
     	//nameObj.setValue("");
     	var value = textObj.getValue();
     	//textObj.setValue("");

     	if(event.type != 'click') {

         	nameObj.setValue("");
         	textObj.setValue("");
         	
     		if(value.length < 1) {
     			return;
     		} else if(value.length < 2) {
     			showMsg("C_I054", "발주번호/명을 2자 이상");
     			return;
     		}
     	} 
     	
     	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchOrdeInfo" );

     	getGmOrdeInfo(event.type, value, arguments[2], arguments[3]);
     }

     /*============================================================================
     ** 기능  : 구매_발주팝업 && 그리드에 입력
     ** 인수  : submissionId, object
     ** 리턴  : 결과배열, 노드생성
         "responseGmSearchOrdeInfo/ordeNo"      발주번호           
         "responseGmSearchOrdeInfo/ordeNm"      발주명     
         "responseGmSearchOrdeInfo/ordeDt"      발주일자            
         "responseGmSearchOrdeInfo/domOvseCd"   내외구분     
         "responseGmSearchOrdeInfo/ctrtAmt"     발주금액            
         "responseGmSearchOrdeInfo/ctrtEntpCd"  발주업체코드 
         "responseGmSearchOrdeInfo/ctrtEntpNm"  발주업체명            
         "responseGmSearchOrdeInfo/delvDueDt"   납품기한일자 
         "responseGmSearchOrdeInfo/delvCompDt"  납품완료일자            
         "responseGmSearchOrdeInfo/delvPlacNm"  납품장소명      
     ============================================================================*/
     function gmOrdeSearchGrid(grid , row , col, initCols) {
     	gmSearchTypeFlag = "grid";
     	gmSearchGridRow = row;
     	gmSearchGridCol = col;
     	gmSearchGridObjID = grid.getID();
     	
     	//var value = grid.getCellData(row, col);
     	
     	//grid.setCellData( row , col+2 , "" );
     	var value = grid.getCellData(row, col);
     	//grid.setCellData( row , col , "" );
     	
     	if(event.type != "click"){
     		
         	grid.setCellData( row , col+2 , "" );
         	grid.setCellData( row , col , "" );
         	
     		if(value.length < 1) {
     			return;
     		} else if(value.length < 2) {
     			showMsg("C_I054", "발주번호/명을 2자 이상");
     			return;
     		}
     	}
     	
     	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchOrdeInfo" );
     	
     	if(initCols != undefined) {
     		for(var index in initCols) {
     			if(initCols[index] != "") {
     				grid.setCellData( row , initCols[index] , "" );	
     			}
     		}
     	}
     	
     	getGmOrdeInfo(event.type, value, arguments[4], arguments[5]);
     }

     
     /*============================================================================
     ** 기능  : 구매_발주 조회 팝업
     ** 인수  : value
     ** 리턴  : 
     ============================================================================*/
     function getGmOrdeInfo(type,value) {
     	var encodeValue = "";
     	var arrResult = new Array();
     	
     	var deptGbn = arguments[2];

    	var encodeDeptGbn = "";
    	
     	if(value != "") {
     		encodeValue = WebSquare.text.BASE64URLEncoder(value);
     	} 

    	if(deptGbn != undefined) {
    		if(deptGbn != "") {
    			encodeDeptGbn = WebSquare.text.BASE64URLEncoder(deptGbn);
    		} 
    		setValue("requestGmSearchOrde/deptGbn", deptGbn);
    	}

     	if(type == "click") {
     		openPopup( "setGmOrdePopupValue", "/views/gm/gm/GM_GM_3010_Popup.xml", {width: 900, height:560}, {ordeNoNm:encodeValue, deptGbn:encodeDeptGbn});
     		return;
     	}

         setValue("requestGmSearchOrde/ordeNoNm", value);

         execSubmission("sub", "requestGmSearchOrde", "responseGmSearchOrde", "/gm/listOrdeBasPopup.do");

         var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchOrde/object/ordeBasList/object");

         var rowCount = dataArr.length;

         if(rowCount == 1) {
        	 
             arrResult.push(getValue("responseGmSearchOrde/object/ordeBasList/object/ordeNo"));
             arrResult.push(getValue("responseGmSearchOrde/object/ordeBasList/object/ordeNm"));
             arrResult.push(getValue("responseGmSearchOrde/object/ordeBasList/object/ordeDt"));
             arrResult.push(getValue("responseGmSearchOrde/object/ordeBasList/object/domOvseCd"));
             arrResult.push(getValue("responseGmSearchOrde/object/ordeBasList/object/ctrtAmt"));
             arrResult.push(getValue("responseGmSearchOrde/object/ordeBasList/object/ctrtEntpCd"));	
             arrResult.push(getValue("responseGmSearchOrde/object/ordeBasList/object/ctrtEntpNm"));
             arrResult.push(getValue("responseGmSearchOrde/object/ordeBasList/object/delvDueDt"));  	
             arrResult.push(getValue("responseGmSearchOrde/object/ordeBasList/object/delvCompDt"));
             arrResult.push(getValue("responseGmSearchOrde/object/ordeBasList/object/delvPlacNm"));
         	
             WebSquare.ModelUtil.removeChildNodes( "responseGmSearchOrde" );
             
             setGmOrdePopupValue(arrResult);
         } else if(rowCount > 1) {
             WebSquare.ModelUtil.removeChildNodes( "responseGmSearchOrde" );
             openPopup( "setGmOrdePopupValue", "/views/gm/gm/GM_GM_3010_Popup.xml", {width: 900, height:560}, {ordeNoNm:encodeValue, deptGbn:encodeDeptGbn});
         } else if(rowCount == 0) {
             showMsg("C_I041", "발주번호/명으로 검색한 결과");
         }
     }

     /*============================================================================
     ** 기능  : 구매_발주 조회 팝업 후에 호출됨
     ** 인수  : arrResult
     ** 리턴  : 
     ============================================================================*/
     function setGmOrdePopupValue(arrResult) {
         if(arrResult == undefined) {
             return;
         }
     	
     	 setValue("responseGmSearchOrdeInfo/ordeNo",arrResult[0]); //발주번호       
         setValue("responseGmSearchOrdeInfo/ordeNm",arrResult[1]); //발주명
     	 setValue("responseGmSearchOrdeInfo/ordeDt",arrResult[2]); //발주일자       
         setValue("responseGmSearchOrdeInfo/domOvseCd",arrResult[3]); //내외구분
         setValue("responseGmSearchOrdeInfo/ctrtAmt",arrResult[4]); //발주금액
         setValue("responseGmSearchOrdeInfo/ctrtEntpCd",arrResult[5]); //발주업체코드
         setValue("responseGmSearchOrdeInfo/ctrtEntpNm",arrResult[6]); //발주업체명
         setValue("responseGmSearchOrdeInfo/delvDueDt",arrResult[7]); //납품기한일자
         setValue("responseGmSearchOrdeInfo/delvCompDt",arrResult[8]); //납품완료일자
         setValue("responseGmSearchOrdeInfo/delvPlacNm",arrResult[9]); //납품장소명
         
         if(gmSearchTypeFlag == "form") {
             eval(gmTextObjID).setValue( arrResult[0] );
             eval(gmNameObjID).setValue( arrResult[1] );

             //화면에서 부가정보를 사용할 경우에  gmOrdeSearchFormCallBack 함수를 만들어 놓고 사용한다
             if (typeof gmOrdeSearchFormCallBack == 'function') {
                 gmOrdeSearchFormCallBack(arrResult);
             }
     	     return;
         }
     	
     	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
     	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
     	
     	//화면에서 부가정보를 사용할 경우에  gmOrdeSearchGridCallBack 함수를 만들어 놓고 사용한다
     	if (typeof gmOrdeSearchGridCallBack == 'function') {
     		gmOrdeSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
     	}
     }
     
    /*============================================================================
     ** 기능  : 일반행정 자산팝업
     ** 인수  : 자산코드/자산명, 자산명 오브젝트 , 자산작업코드 "10":정상, "20":이관, "30": 수리, "40":폐기 
     *                                       ,자산상태코드 "10":양호, "20":불량, "30": 폐기예정, "40":폐기, "50":매각
     *                                       arguments[2] => 부서코드 arguments[3] => 부서명 arguments[4] => 부서코드/명, 자산상태 disable true/false
     ** 리턴  : 
       
     ============================================================================*/
     function gmAsetSearch(textObj, nameObj, asetWorkgCd, asetStatCd) {
         gmSearchTypeFlag = "form";
     	   gmTextObjID = textObj.getID();
     	   gmNameObjID = nameObj.getID();
     	
     	   nameObj.setValue("");
     	   var value = textObj.getValue();
     	   textObj.setValue("");
     	
     	   if(event.type != 'click') {

     		   if(value.length < 1) {
     			   return;
     		   } else if(value.length < 2) {
     			   showMsg("C_I054", "자산 코드/명을 2자 이상");
     			   return;
     		   }
     	   } 
     	   getGmAsetInfo(event.type, value, asetWorkgCd, asetStatCd, arguments[4], arguments[5], arguments[6] , arguments[7]);
     }

     /*============================================================================
      ** 기능  : 일반행정 자산팝업 && 그리드에 입력
      ** 인수  : submissionId, object             자산작업코드 "10":정상, "20":이관, "30": 수리, "40":폐기 
      *                                         ,자산상태코드 "10":양호, "20":불량, "30": 폐기예정, "40":폐기, "50":매각
      *                                arguments[4] => 부서코드 arguments[5] => 부서명 arguments[6] => 부서코드/명, 자산상태 disable true/false
      ** 리턴  : 결과배열, 노드생성
       
      ============================================================================*/
      function gmAsetSearchGrid(grid , row , col, initCols,  asetWorkgCd, asetStatCd) {
      	gmSearchTypeFlag = "grid";
      	gmSearchGridRow = row;
      	gmSearchGridCol = col;
      	gmSearchGridObjID = grid.getID();
      
      	
      	grid.setCellData( row , col+2 , "" );
      	var value = grid.getCellData(row, col);
      	grid.setCellData( row , col , "" );
      	
      	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchAsetInfo" );
      	
      	if(initCols != undefined) {
       		for(var index in initCols) {
       			if(initCols[index] != "") {
       				grid.setCellData( row , initCols[index] , "" );	
       			}
       		}
       	}
      	
      	if(event.type != "click"){
      		if(value.length < 1) {
      			return;
      		} else if(value.length < 2) {
      			showMsg("C_I054", "자산 코드/명을 2자 이상");
      			return;
      		}
      	}
      
      	getGmAsetInfo(event.type, value,  asetWorkgCd, asetStatCd, arguments[6], arguments[7], arguments[8], arguments[9]);
      }
      
     /*============================================================================
     ** 기능  : 자산 조회 팝업
     ** 인수  : value    arguments[2]=> 자산작업코드 "10":정상, "20":이관, "30": 수리, "40":폐기 
     *                  arguments[3] => 부서코드 arguments[4] => 부서명
     ** 리턴  : 
     ============================================================================*/
     function getGmAsetInfo(type,value, asetWorkgCd, asetStatCd) {
     	 var encodeValue = "";
         var arrResult = new Array();
     	 var asetWorkgCdValue = asetWorkgCd;
     	 var asetStatCdValue = asetStatCd;
     	 var mngDeptCdValue = arguments[4]
     	 var mngDeptNmValue = arguments[5]
     	 var flagValue = arguments[6]
         var deptFlag = arguments[7]
     	 var encodeAsetWorkgCdValue = "";
     	 var encodeAsetStatCdValue = "";
     	 var encodeMngDeptCdValue = "";
     	 var encodeMngDeptNmValue = "";
     	 var encodeFalgValue = WebSquare.text.BASE64URLEncoder("false");
     	 var encodeDeptFlagValue = "";
         WebSquare.ModelUtil.removeChildNodes( "responseGmSearchAsetInfo" );
         
     	   if(value != "") {
     		   encodeValue = WebSquare.text.BASE64URLEncoder(value);
     	   } 
     	  if(asetWorkgCdValue != undefined) {
    		   if(asetWorkgCdValue != "") {
    			   encodeAsetWorkgCdValue = WebSquare.text.BASE64URLEncoder(asetWorkgCdValue);
    		   }
    	   }
     	  if(asetStatCdValue != undefined) {
     		  if(asetStatCdValue != "") {
     			 encodeAsetStatCdValue = WebSquare.text.BASE64URLEncoder(asetStatCdValue);
     		  }
     	  }
     	   if(mngDeptCdValue != undefined) {
     		   if(mngDeptCdValue != "") {
     			  if(typeof mngDeptCdValue == 'object'){
     				  encodeMngDeptCdValue = WebSquare.text.BASE64URLEncoder(mngDeptCdValue.getValue());
     			  }else{
     				 encodeMngDeptCdValue = WebSquare.text.BASE64URLEncoder(mngDeptCdValue);
     			  }
     		   }
     		  if(typeof mngDeptCdValue == 'object'){
     		   setValue("requestGmSearchAset/mngDeptCd", mngDeptCdValue.getValue());
     		  }else{
     			 setValue("requestGmSearchAset/mngDeptCd", mngDeptCdValue); 
     		  }
     	   }
     	   if(mngDeptNmValue != undefined) {
     		   if(mngDeptNmValue != "") {
     			  if(typeof mngDeptNmValue == 'object'){
     				  encodeMngDeptNmValue = WebSquare.text.BASE64URLEncoder(mngDeptNmValue.getValue());
     			  }else{
     				 encodeMngDeptNmValue = WebSquare.text.BASE64URLEncoder(mngDeptNmValue);
     			  }
     		   }
     	   }
     	   if(flagValue != undefined) {
     		   if(flagValue != "") {
     			  encodeFalgValue = WebSquare.text.BASE64URLEncoder(flagValue);
     		   }
     	   }
     	  if(deptFlag != undefined) {
    		   if(deptFlag != "") {
    			   encodeDeptFlagValue = WebSquare.text.BASE64URLEncoder(deptFlag);
    		   }
    	   }
     	   if(type == "click") {
     		   openPopup( "setGmAsetPopupValue", "/views/gm/js/GM_JS_1020_Popup.xml", {width: 925, height:535},
     				      {asetCdNm:encodeValue, asetWorkgCd:encodeAsetWorkgCdValue, asetStatCd:encodeAsetStatCdValue, 
     			           mngDeptCd:encodeMngDeptCdValue, mngDeptNm:encodeMngDeptNmValue, flag:encodeFalgValue, deptFlag:encodeDeptFlagValue });
     		   return;
     	   }

         setValue("requestGmSearchAset/asetNm", value);
         setValue("requestGmSearchAset/asetWorkgCd", asetWorkgCd);
         setValue("requestGmSearchAset/asetStatCd", asetStatCd);
         setValue("requestGmSearchAset/deptFlag", deptFlag);
         execSubmission("sub", "requestGmSearchAset", "responseGmSearchAset", "/js/listAsetBasPopup.do");

         var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchAset/object/asetBasList/object");
         var rowCount = dataArr.length;

         if(rowCount == 1) {
         	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/asetNo"));
         	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/asetNm"));
         	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/mngDeptCd"));
         	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/mngrEno"));
         	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/instlPlacCd"));
         	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/asetPsseQty"));
         	  arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/asetUsgeCd"));
               WebSquare.ModelUtil.removeChildNodes( "responseGmSearchAset" );
             
               setGmAsetPopupValue(arrResult);
         } else if(rowCount > 1) {
         	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchAset" );
         	  openPopup( "setGmAsetPopupValue", "/views/gm/js/GM_JS_1020_Popup.xml", {width: 925, height:535},
 				      {asetCdNm:encodeValue, asetWorkgCd:encodeAsetWorkgCdValue, asetStatCd:encodeAsetStatCdValue, 
 			           mngDeptCd:encodeMngDeptCdValue, mngDeptNm:encodeMngDeptNmValue, flag:encodeFalgValue, deptFlag:encodeDeptFlagValue});
         } else if(rowCount == 0) {
         	   showMsg("C_I041", "자산 코드/명으로 검색한 결과");
         }
     }

     /*============================================================================
     ** 기능  : 자산 조회 팝업 후에 호출됨
     ** 인수  : arrResult
     ** 리턴  : 
     ============================================================================*/
     function setGmAsetPopupValue(arrResult) {
         if(arrResult == undefined) {
             return;
         }
         setValue("responseGmSearchAsetInfo/mngDeptCd",arrResult[2]); //관리부서   
         setValue("responseGmSearchAsetInfo/mngrEno",  arrResult[3]); //관리자
     	 setValue("responseGmSearchAsetInfo/instlPlacCd",arrResult[4]); //설치장소      
     	 setValue("responseGmSearchAsetInfo/asetPsseQty",arrResult[5]); //보유수량       
         
          if(gmSearchTypeFlag == "form") {
         	   eval(gmTextObjID).setValue( arrResult[0] );
         	   eval(gmNameObjID).setValue( arrResult[1] );
         	
         	   //화면에서 부가정보를 사용할 경우에  gmAsetSearchFormCallBack 함수를 만들어 놓고 사용한다
         	   if (typeof gmAsetSearchFormCallBack == 'function') {
         		   gmAsetSearchFormCallBack(arrResult);
         	   }
         	   
     		   return;
     	   }
     	
     	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
     	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
     	
     	   //화면에서 부가정보를 사용할 경우에  gmAsetSearchGridCallBack 함수를 만들어 놓고 사용한다
     	   if (typeof gmAsetSearchGridCallBack == 'function') {
     		  gmAsetSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
     	   }
     }
     /*============================================================================
      ** 기능  : 시간 00:00 체크
      ** 인수  : grid,row,col
      ** 리턴  : 
      ============================================================================*/
     function checkGridTimeValidation(grid,row,col)
     {
         var val = grid.getCellData(row,col);
     	 var regExp = /^(0[0-9]|1[0-9]|2[0-3])([0-5][0-9])$/;
     	 if(!regExp.test(val))
    	 {
             showMsgString("시간 형식은 00:00~23:59 입니다.");
             grid.setCellData(row,col,"");
             grid.setFocusedCell(row,col);
             return; 
    	 }
     }

     /*============================================================================
      ** 기능  : 일반행정 호실팝업
      ** 인수  : 호실코드/호실명, 호실명 오브젝트
      ** 리턴  : 
          "responseGmSearchRoomInfo/roomCd"      호실코드       
          "responseGmSearchRoomInfo/roomNm"      호실명          
          "responseGmSearchRoomInfo/buldCd"      건물코드
          "responseGmSearchRoomInfo/buldCdNm"      건물명
          "responseGmSearchRoomInfo/florCd"      층코드
          "responseGmSearchRoomInfo/florCdNm"    층명
          "responseGmSearchRoomInfo/roomNo"      호실번호         
          "responseGmSearchRoomInfo/roomUsgeCd"        용도구분코드
          "responseGmSearchRoomInfo/roomUsgeCdNm"      용도구분
          "responseGmSearchRoomInfo/roomDetlUsgeCd"    용도상세구분코드      
          "responseGmSearchRoomInfo/roomDetlUsgeCdNm"  용도상세구분           
      ============================================================================*/
      function gmRoomSearch(textObj, nameObj) {
        gmSearchTypeFlag = "form";
      	gmTextObjID = textObj.getID();
      	gmNameObjID = nameObj.getID();
      	
      	nameObj.setValue("");
      	var value = textObj.getValue();
      	textObj.setValue("");    
      	
      	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchRoomInfo" );

      	if(event.type != 'click') {

      	 if(value.length < 1) {
      	  return;
      	 } else if(value.length < 2) {
      	  showMsg("C_I054", "호실 코드/명을 2자 이상");
      	  return;
      	 }
      	} 
      	
      	getGmRoomInfo(event.type, value, arguments[2], arguments[3]);      	
      }

      /*============================================================================
       ** 기능  : 일반행정 호실팝업 && 그리드에 입력
       ** 인수  : submissionId, object
       ** 리턴  : 결과배열, 노드생성     
       ============================================================================*/
       function gmRoomSearchGrid(grid , row , col, initCols) {
       	gmSearchTypeFlag = "grid";
       	gmSearchGridRow = row;
       	gmSearchGridCol = col;
       	gmSearchGridObjID = grid.getID();
       	
       	//var value = grid.getCellData(row, col);
       	
       	grid.setCellData( row , col+2 , "" );
       	var value = grid.getCellData(row, col);
       	grid.setCellData( row , col , "" );
       	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchRoomInfo" );
       	
       	if(initCols != undefined) {
       		for(var index in initCols) {
       			if(initCols[index] != "") {
       				grid.setCellData( row , initCols[index] , "" );	
       			}
       		}
       	}
       	
       	if(event.type != "click"){
       		if(value.length < 1) {
       			return;
       		} else if(value.length < 2) {
       			showMsg("C_I054", "호실 코드/명을 2자 이상");
       			return;
       		}
       	}
       	
       	getGmRoomInfo(event.type, value);
       }
       
      /*============================================================================
      ** 기능  : 호실 조회 팝업
      ** 인수  : value
      ** 리턴  : 
      ============================================================================*/
      function getGmRoomInfo(type,value) {
    	 
      	var encodeValue = "";      	
      	var buldCd = arguments[2];
    	var florCd = arguments[3];
    	var encodeBuldCd = "";
    	var encodeFlorCd = "";
        var arrResult = new Array();       
        
      	if(value != "") {
      	 encodeValue = WebSquare.text.BASE64URLEncoder(value);
      	} 
      	
      	if(buldCd != undefined) {
    		if(buldCd != "") {
    			encodeBuldCd = WebSquare.text.BASE64URLEncoder(buldCd);
    		} 
    		setValue("requestGmSearchRoom/buldCd", buldCd);	
    	}

    	if(florCd != undefined) {
    		if(florCd != "") {
    			encodeFlorCd = WebSquare.text.BASE64URLEncoder(florCd);
    		} 
    		setValue("requestGmSearchRoom/florCd", florCd);	
    	}
      	
      	if(type == "click") {
      	 openPopup( "setGmRoomPopupValue", "/views/gm/ss/GM_SS_2010_Popup.xml", {width: 900, height:560}, {roomCdNm:encodeValue,buldCd:encodeBuldCd,florCd:encodeFlorCd});
      	 return;
      	}

          setValue("requestGmSearchRoom/roomCdNm", value);

          execSubmission("sub", "requestGmSearchRoom", "responseGmSearchRoom", "/ss/listRoomBas.do");

          var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchRoom/object/roomBasList/object");
          var rowCount = dataArr.length;

          if(rowCount == 1) {
          	   arrResult.push(getValue("responseGmSearchRoom/object/roomBasList/object/roomCd"));
          	   arrResult.push(getValue("responseGmSearchRoom/object/roomBasList/object/roomNm"));
          	   arrResult.push(getValue("responseGmSearchRoom/object/roomBasList/object/buldCd"));
          	   arrResult.push(getValue("responseGmSearchRoom/object/roomBasList/object/buldCdNm"));
          	   arrResult.push(getValue("responseGmSearchRoom/object/roomBasList/object/florCd"));
          	   arrResult.push(getValue("responseGmSearchRoom/object/roomBasList/object/florCdNm"));
          	   arrResult.push(getValue("responseGmSearchRoom/object/roomBasList/object/roomNo"));        	  
          	   arrResult.push(getValue("responseGmSearchRoom/object/roomBasList/object/roomUsgeCd"));
          	   arrResult.push(getValue("responseGmSearchRoom/object/roomBasList/object/roomUsgeCdNm"));
          	   arrResult.push(getValue("responseGmSearchRoom/object/roomBasList/object/roomDetlUsgeCd"));	        	 
          	   arrResult.push(getValue("responseGmSearchRoom/object/roomBasList/object/roomDetlUsgeCdNm"));	        	 

              WebSquare.ModelUtil.removeChildNodes( "responseGmSearchRoom" );
              
              setGmRoomPopupValue(arrResult);
          } else if(rowCount > 1) {
          	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchRoom" );
          	   openPopup( "setGmRoomPopupValue", "/views/gm/ss/GM_SS_2010_Popup.xml", {width: 900, height:560}, {roomCdNm:encodeValue,buldCd:encodeBuldCd,florCd:encodeFlorCd});
          } else if(rowCount == 0) {
          	   showMsg("C_I041", "호실 코드/명으로 검색한 결과");
          }
      }

      /*============================================================================
      ** 기능  : 호실 조회 팝업 후에 호출됨
      ** 인수  : arrResult
      ** 리턴  : 
      ============================================================================*/
      function setGmRoomPopupValue(arrResult) {
          if(arrResult == undefined) {
              return;
          }
      	
          setValue("responseGmSearchRoomInfo/roomCd",arrResult[0]); 
          setValue("responseGmSearchRoomInfo/roomNm",arrResult[1]); 
      	  setValue("responseGmSearchRoomInfo/buldCd",arrResult[2]); 
      	  setValue("responseGmSearchRoomInfo/buldCdNm",arrResult[3]); 
          setValue("responseGmSearchRoomInfo/florCd",arrResult[4]); 
          setValue("responseGmSearchRoomInfo/florCdNm",arrResult[5]); 
      	  setValue("responseGmSearchRoomInfo/roomNo",arrResult[6]);         
          setValue("responseGmSearchRoomInfo/roomUsgeCd",arrResult[7]); 
          setValue("responseGmSearchRoomInfo/roomUsgeCdNm",arrResult[8]); 
          setValue("responseGmSearchRoomInfo/roomDetlUsgeCd",arrResult[9]); 
          setValue("responseGmSearchRoomInfo/roomDetlUsgeCdNm",arrResult[10]); 
         
          if(gmSearchTypeFlag == "form") {
          	   eval(gmTextObjID).setValue( arrResult[0] );
          	   eval(gmNameObjID).setValue( arrResult[1] );
          	
          	   //화면에서 부가정보를 사용할 경우에  gmRoomSearchFormCallBack 함수를 만들어 놓고 사용한다
          	   if (typeof gmRoomSearchFormCallBack == 'function') {
          		   gmRoomSearchFormCallBack(arrResult);
          	   }
          	   
      		   return;
      	   }
      	
      	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
      	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
      	
      	   //화면에서 부가정보를 사용할 경우에  gmRoomSearchGridCallBack 함수를 만들어 놓고 사용한다
      	   if (typeof gmRoomSearchGridCallBack == 'function') {
      		   gmRoomSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
      	   }
      }   
      
      /*============================================================================
       ** 기능  : 일반행정 임대팝업
       ** 인수  : 호실코드/호실명, 호실명 오브젝트
       ** 리턴  : 
           "responseGmSearchRentInfo/roomCd"      호실코드       
           "responseGmSearchRentInfo/roomNm"      호실명          
           "responseGmSearchRentInfo/buldCd"      건물코드
           "responseGmSearchRentInfo/buldCdNm"      건물명
           "responseGmSearchRentInfo/florCd"      층코드
           "responseGmSearchRentInfo/florCdNm"    층명
           "responseGmSearchRentInfo/roomNo"      호실번호         
           "responseGmSearchRentInfo/roomUsgeCd"        용도구분코드
           "responseGmSearchRentInfo/roomUsgeCdNm"      용도구분
           "responseGmSearchRentInfo/roomDetlUsgeCd"    용도상세구분코드      
           "responseGmSearchRentInfo/roomDetlUsgeCdNm"  용도상세구분           
           "responseGmSearchRentInfo/shreArea"  공유면적           
       ============================================================================*/
       function gmRentSearch(textObj, nameObj) {
	         gmSearchTypeFlag = "form";
	       	 gmTextObjID = textObj.getID();
	       	 gmNameObjID = nameObj.getID();
	       	
	       	 nameObj.setValue("");
	       	 var value = textObj.getValue();
	       	 textObj.setValue("");    
	       	
	       	 WebSquare.ModelUtil.removeChildNodes( "responseGmSearchRentInfo" );
	
	       	 if(event.type != 'click') {
	
	       	 if(value.length < 1) {
	       	  return;
	       	 } else if(value.length < 2) {
	       	  showMsg("C_I054", "호실 코드/명을 2자 이상");
	       	  return;
	       	 }
	       	} 
	       	
	       	getGmRentInfo(event.type, value, arguments[2], arguments[3]);      	
	       }

       /*============================================================================
        ** 기능  : 일반행정 임대팝업 && 그리드에 입력
        ** 인수  : submissionId, object
        ** 리턴  : 결과배열, 노드생성         
        ============================================================================*/
        function gmRentSearchGrid(grid , row , col, initCols) {
        	gmSearchTypeFlag = "grid";
        	gmSearchGridRow = row;
        	gmSearchGridCol = col;
        	gmSearchGridObjID = grid.getID();
        	
        	//var value = grid.getCellData(row, col);
        	
        	grid.setCellData( row , col+2 , "" );
        	var value = grid.getCellData(row, col);
        	grid.setCellData( row , col , "" );
        	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchRentInfo" );
        	
        	if(initCols != undefined) {
        		for(var index in initCols) {
        			if(initCols[index] != "") {
        				grid.setCellData( row , initCols[index] , "" );	
        			}
        		}
        	}
        	
        	if(event.type != "click"){
        		if(value.length < 1) {
        			return;
        		} else if(value.length < 2) {
        			showMsg("C_I054", "호실 코드/명을 2자 이상");
        			return;
        		}
        	}
        	
        	getGmRentInfo(event.type, value);
        }
        
       /*============================================================================
       ** 기능  : 임대 조회 팝업
       ** 인수  : value
       ** 리턴  : 
       ============================================================================*/
       function getGmRentInfo(type,value) {
     	 
       	 var encodeValue = "";      	
       	 var buldCd = arguments[2];
     	 var florCd = arguments[3];
     	 var encodeBuldCd = "";
     	 var encodeFlorCd = "";
         var arrResult = new Array();       
         
       	if(value != "") {
       	 encodeValue = WebSquare.text.BASE64URLEncoder(value);
       	} 
       	
       	if(buldCd != undefined) {
     		if(buldCd != "") {
     			encodeBuldCd = WebSquare.text.BASE64URLEncoder(buldCd);
     		} 
     		setValue("requestGmSearchRent/buldCd", buldCd);	
     	}

     	if(florCd != undefined) {
     		if(florCd != "") {
     			encodeFlorCd = WebSquare.text.BASE64URLEncoder(florCd);
     		} 
     		setValue("requestGmSearchRent/florCd", florCd);	
     	}
       	
       	if(type == "click") {
       	 openPopup( "setGmRentPopupValue", "/views/gm/ss/GM_SS_6010_Popup.xml", {width: 900, height:560}, {roomCdNm:encodeValue,buldCd:encodeBuldCd,florCd:encodeFlorCd});
       	 return;
       	}

           setValue("requestGmSearchRent/roomCdNm", value);

           execSubmission("sub", "requestGmSearchRent", "responseGmSearchRent", "/ss/listRoomBas.do");

           var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchRent/object/roomBasList/object");
           var rowCount = dataArr.length;

           if(rowCount == 1) {
           	   arrResult.push(getValue("responseGmSearchRent/object/roomBasList/object/roomCd"));
           	   arrResult.push(getValue("responseGmSearchRent/object/roomBasList/object/roomNm"));
           	   arrResult.push(getValue("responseGmSearchRent/object/roomBasList/object/buldCd"));
           	   arrResult.push(getValue("responseGmSearchRent/object/roomBasList/object/buldCdNm"));
           	   arrResult.push(getValue("responseGmSearchRent/object/roomBasList/object/florCd"));
           	   arrResult.push(getValue("responseGmSearchRent/object/roomBasList/object/florCdNm"));
           	   arrResult.push(getValue("responseGmSearchRent/object/roomBasList/object/roomNo"));        	  
           	   arrResult.push(getValue("responseGmSearchRent/object/roomBasList/object/roomUsgeCd"));
           	   arrResult.push(getValue("responseGmSearchRent/object/roomBasList/object/roomUsgeCdNm"));
           	   arrResult.push(getValue("responseGmSearchRent/object/roomBasList/object/roomDetlUsgeCd"));	        	 
           	   arrResult.push(getValue("responseGmSearchRent/object/roomBasList/object/roomDetlUsgeCdNm"));	        	 
           	   arrResult.push(getValue("responseGmSearchRent/object/roomBasList/object/shreArea"));	        	 

               WebSquare.ModelUtil.removeChildNodes( "responseGmSearchRent" );
               
               setGmRentPopupValue(arrResult);
           } else if(rowCount > 1) {
           	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchRent" );
           	   openPopup( "setGmRentPopupValue", "/views/gm/ss/GM_SS_6010_Popup.xml", {width: 900, height:560}, {roomCdNm:encodeValue,buldCd:encodeBuldCd,florCd:encodeFlorCd});
           } else if(rowCount == 0) {
           	   showMsg("C_I041", "호실 코드/명으로 검색한 결과");
           }
       }

       /*============================================================================
       ** 기능  : 임대 조회 팝업 후에 호출됨
       ** 인수  : arrResult
       ** 리턴  : 
       ============================================================================*/
       function setGmRentPopupValue(arrResult) {
           if(arrResult == undefined) {
               return;
           }
       	
           setValue("responseGmSearchRentInfo/roomCd",arrResult[0]); 
           setValue("responseGmSearchRentInfo/roomNm",arrResult[1]); 
       	   setValue("responseGmSearchRentInfo/buldCd",arrResult[2]); 
       	   setValue("responseGmSearchRentInfo/buldCdNm",arrResult[3]); 
           setValue("responseGmSearchRentInfo/florCd",arrResult[4]); 
           setValue("responseGmSearchRentInfo/florCdNm",arrResult[5]); 
       	   setValue("responseGmSearchRentInfo/roomNo",arrResult[6]);         
           setValue("responseGmSearchRentInfo/roomUsgeCd",arrResult[7]); 
           setValue("responseGmSearchRentInfo/roomUsgeCdNm",arrResult[8]); 
           setValue("responseGmSearchRentInfo/roomDetlUsgeCd",arrResult[9]); 
           setValue("responseGmSearchRentInfo/roomDetlUsgeCdNm",arrResult[10]); 
           setValue("responseGmSearchRentInfo/shreArea",arrResult[11]); 
          
           if(gmSearchTypeFlag == "form") {
           	   eval(gmTextObjID).setValue( arrResult[0] );
           	   eval(gmNameObjID).setValue( arrResult[1] );
           	
           	   //화면에서 부가정보를 사용할 경우에  gmRentSearchFormCallBack 함수를 만들어 놓고 사용한다
           	   if (typeof gmRentSearchFormCallBack == 'function') {
           		   gmRentSearchFormCallBack(arrResult);
           	   }
           	   
       		   return;
       	   }
       	
       	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
       	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
       	
       	   //화면에서 부가정보를 사용할 경우에  gmRentSearchGridCallBack 함수를 만들어 놓고 사용한다
       	   if (typeof gmRentSearchGridCallBack == 'function') {
       		   gmRentSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
       	   }
       }      

       /*============================================================================
        ** 기능  : 일반행정 대관팝업
        ** 인수  : 호실코드/호실명, 호실명 오브젝트
        ** 리턴  : 
            "responseGmSearchLendInfo/roomCd"      호실코드       
            "responseGmSearchLendInfo/roomNm"      호실명          
            "responseGmSearchLendInfo/buldCd"      건물코드
            "responseGmSearchLendInfo/buldCdNm"      건물명
            "responseGmSearchLendInfo/florCd"      층코드
            "responseGmSearchLendInfo/florCdNm"    층명
            "responseGmSearchLendInfo/roomNo"      호실번호         
            "responseGmSearchLendInfo/roomUsgeCd"        용도구분코드
            "responseGmSearchLendInfo/roomUsgeCdNm"      용도구분
            "responseGmSearchLendInfo/roomDetlUsgeCd"    용도상세구분코드      
            "responseGmSearchLendInfo/roomDetlUsgeCdNm"  용도상세구분           
        ============================================================================*/
        function gmLendSearch(textObj, nameObj) {
            gmSearchTypeFlag = "form";
        	gmTextObjID = textObj.getID();
        	gmNameObjID = nameObj.getID();
        	
        	nameObj.setValue("");
        	var value = textObj.getValue();
        	textObj.setValue("");    
        	
        	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchLendInfo" );

        	if(event.type != 'click') {

        	 if(value.length < 1) {
        	  return;
        	 } else if(value.length < 2) {
        	  showMsg("C_I054", "호실 코드/명을 2자 이상");
        	  return;
        	 }
        	} 
        	
        	getGmLendInfo(event.type, value, arguments[2], arguments[3]);      	
        }

        /*============================================================================
         ** 기능  : 일반행정 대관팝업 && 그리드에 입력
         ** 인수  : submissionId, object
         ** 리턴  : 결과배열, 노드생성         
         ============================================================================*/
         function gmLendSearchGrid(grid , row , col, initCols) {
         	gmSearchTypeFlag = "grid";
         	gmSearchGridRow = row;
         	gmSearchGridCol = col;
         	gmSearchGridObjID = grid.getID();
         	
         	//var value = grid.getCellData(row, col);
         	
         	grid.setCellData( row , col+2 , "" );
         	var value = grid.getCellData(row, col);
         	grid.setCellData( row , col , "" );
         	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchLendInfo" );
         	
         	if(initCols != undefined) {
         		for(var index in initCols) {
         			if(initCols[index] != "") {
         				grid.setCellData( row , initCols[index] , "" );	
         			}
         		}
         	}
         	
         	if(event.type != "click"){
         		if(value.length < 1) {
         			return;
         		} else if(value.length < 2) {
         			showMsg("C_I054", "호실 코드/명을 2자 이상");
         			return;
         		}
         	}
         	
         	getGmLendInfo(event.type, value);
         }
         
        /*============================================================================
        ** 기능  : 대관 조회 팝업
        ** 인수  : value
        ** 리턴  : 
        ============================================================================*/
        function getGmLendInfo(type,value) {
      	 
        	var encodeValue = "";      	
        	var buldCd = arguments[2];
      	    var florCd = arguments[3];
      	    var encodeBuldCd = "";
      	    var encodeFlorCd = "";
            var arrResult = new Array();       
          
        	if(value != "") {
        	 encodeValue = WebSquare.text.BASE64URLEncoder(value);
        	} 
        	
        	if(buldCd != undefined) {
      		if(buldCd != "") {
      			encodeBuldCd = WebSquare.text.BASE64URLEncoder(buldCd);
      		} 
      		setValue("requestGmSearchLend/buldCd", buldCd);	
      	}

      	if(florCd != undefined) {
      		if(florCd != "") {
      			encodeFlorCd = WebSquare.text.BASE64URLEncoder(florCd);
      		} 
      		setValue("requestGmSearchLend/florCd", florCd);	
      	 }
        	
        	if(type == "click") {
        	 openPopup( "setGmLendPopupValue", "/views/gm/ss/GM_SS_5010_Popup.xml", {width: 900, height:560}, {roomCdNm:encodeValue,buldCd:encodeBuldCd,florCd:encodeFlorCd});
        	 return;
        	}

            setValue("requestGmSearchLend/roomCdNm", value);

            execSubmission("sub", "requestGmSearchLend", "responseGmSearchLend", "/ss/listRoomBas.do");

            var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchLend/object/roomBasList/object");
            var rowCount = dataArr.length;

            if(rowCount == 1) {
            	   arrResult.push(getValue("responseGmSearchLend/object/roomBasList/object/roomCd"));
            	   arrResult.push(getValue("responseGmSearchLend/object/roomBasList/object/roomNm"));
            	   arrResult.push(getValue("responseGmSearchLend/object/roomBasList/object/buldCd"));
            	   arrResult.push(getValue("responseGmSearchLend/object/roomBasList/object/buldCdNm"));
            	   arrResult.push(getValue("responseGmSearchLend/object/roomBasList/object/florCd"));
            	   arrResult.push(getValue("responseGmSearchLend/object/roomBasList/object/florCdNm"));
            	   arrResult.push(getValue("responseGmSearchLend/object/roomBasList/object/roomNo"));        	  
            	   arrResult.push(getValue("responseGmSearchLend/object/roomBasList/object/roomUsgeCd"));
            	   arrResult.push(getValue("responseGmSearchLend/object/roomBasList/object/roomUsgeCdNm"));
            	   arrResult.push(getValue("responseGmSearchLend/object/roomBasList/object/roomDetlUsgeCd"));	        	 
            	   arrResult.push(getValue("responseGmSearchLend/object/roomBasList/object/roomDetlUsgeCdNm"));	        	 

                WebSquare.ModelUtil.removeChildNodes( "responseGmSearchLend" );
                
                setGmLendPopupValue(arrResult);
            } else if(rowCount > 1) {
            	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchLend" );
            	   openPopup( "setGmLendPopupValue", "/views/gm/ss/GM_SS_5010_Popup.xml", {width: 900, height:560}, {roomCdNm:encodeValue,buldCd:encodeBuldCd,florCd:encodeFlorCd});
            } else if(rowCount == 0) {
            	   showMsg("C_I041", "호실 코드/명으로 검색한 결과");
            }
        }

        /*============================================================================
        ** 기능  : 임대 조회 팝업 후에 호출됨
        ** 인수  : arrResult
        ** 리턴  : 
        ============================================================================*/
        function setGmLendPopupValue(arrResult) {
            if(arrResult == undefined) {
                return;
            }
        	
            setValue("responseGmSearchLendInfo/roomCd",arrResult[0]); 
            setValue("responseGmSearchLendInfo/roomNm",arrResult[1]); 
        	setValue("responseGmSearchLendInfo/buldCd",arrResult[2]); 
        	setValue("responseGmSearchLendInfo/buldCdNm",arrResult[3]); 
            setValue("responseGmSearchLendInfo/florCd",arrResult[4]); 
            setValue("responseGmSearchLendInfo/florCdNm",arrResult[5]); 
        	setValue("responseGmSearchLendInfo/roomNo",arrResult[6]);         
            setValue("responseGmSearchLendInfo/roomUsgeCd",arrResult[7]); 
            setValue("responseGmSearchLendInfo/roomUsgeCdNm",arrResult[8]); 
            setValue("responseGmSearchLendInfo/roomDetlUsgeCd",arrResult[9]); 
            setValue("responseGmSearchLendInfo/roomDetlUsgeCdNm",arrResult[10]); 
           
            if(gmSearchTypeFlag == "form") {
            	   eval(gmTextObjID).setValue( arrResult[0] );
            	   eval(gmNameObjID).setValue( arrResult[1] );
            	
            	   //화면에서 부가정보를 사용할 경우에  gmLendSearchFormCallBack 함수를 만들어 놓고 사용한다
            	   if (typeof gmLendSearchFormCallBack == 'function') {
            		   gmLendSearchFormCallBack(arrResult);
            	   }
            	   
        		   return;
        	   }
        	
        	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
        	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
        	
        	   //화면에서 부가정보를 사용할 경우에  gmLendSearchGridCallBack 함수를 만들어 놓고 사용한다
        	   if (typeof gmLendSearchGridCallBack == 'function') {
        		   gmLendSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
        	   }
        } 
       
       /*============================================================================
        ** 기능  : 일반행정 대관현황팝업
        ** 인수  : 호실코드/호실명, 호실명 오브젝트
        ** 리턴  :             
        ============================================================================*/
        function gmLendStateSearch(textObj) {   
        	var encodeValue = WebSquare.text.BASE64URLEncoder(textObj.getValue());        	
        	openPopup( "setGmLendStatePopupValue", "/views/gm/ss/GM_SS_5010_Popup2.xml", {width: 900, height:560}, {roomCd:encodeValue});        	  	
        }       
       
        /*============================================================================
         ** 기능  : 일반행정 장비팝업
         ** 인수  : 장비코드/장비명, 장비명 오브젝트
         ** 리턴  : 
             "responseGmSearchEqmtInfo/eqmtNo"      장비번호       
             "responseGmSearchEqmtInfo/eqmtNm"      장비명
             "responseGmSearchEqmtInfo/buldCd"      건물명          
             "responseGmSearchEqmtInfo/eqmtClsCd"      장비구분코드           
             "responseGmSearchEqmtInfo/modlNm"      모델명
             "responseGmSearchEqmtInfo/roomCdNm"    호실명        
             "responseGmSearchEqmtInfo/roomCd"      호실코드  
         ============================================================================*/
         function gmEqmtSearch(textObj, nameObj) {
           gmSearchTypeFlag = "form";
         	 gmTextObjID = textObj.getID();
         	 gmNameObjID = nameObj.getID();
         	
         	 nameObj.setValue("");
         	 var value = textObj.getValue();
         	 textObj.setValue("");    
         	
         	 WebSquare.ModelUtil.removeChildNodes( "responseGmSearchEqmtInfo" );

         	 if(event.type != 'click') {

  	       	 if(value.length < 1) {
  	       	  return;
  	       	 } 
         	 } 
         	
         	getGmEqmtInfo(event.type, value);      	
         }

         /*============================================================================
          ** 기능  : 일반행정 장비팝업 && 그리드에 입력
          ** 인수  : submissionId, object
          ** 리턴  : 결과배열, 노드생성                   
          ============================================================================*/
          function gmEqmtSearchGrid(grid , row , col, initCols) {
          	gmSearchTypeFlag = "grid";
          	gmSearchGridRow = row;
          	gmSearchGridCol = col;
          	gmSearchGridObjID = grid.getID();
          	
          	//var value = grid.getCellData(row, col);
          	
          	grid.setCellData( row , col+2 , "" );
          	var value = grid.getCellData(row, col);
          	grid.setCellData( row , col , "" );
          	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchEqmtInfo" );
          	
          	if(initCols != undefined) {
          		for(var index in initCols) {
          			if(initCols[index] != "") {
          				grid.setCellData( row , initCols[index] , "" );	
          			}
          		}
          	}

          	if(event.type != "click"){
          		if(value.length < 1) {
          			return;
          		} 
          	}
          	
          	getGmEqmtInfo(event.type, value);
          }
          
         /*============================================================================
         ** 기능  : 장비 조회 팝업
         ** 인수  : value
         ** 리턴  : 
         ============================================================================*/
         function getGmEqmtInfo(type,value) {
       	 
         	var encodeValue = "";     
          var arrResult = new Array();       
          
         	if(value != "") {
         	 encodeValue = WebSquare.text.BASE64URLEncoder(value);
         	}        	
         	   	
         	
         	if(type == "click") {
         	 openPopup( "setGmEqmtPopupValue", "/views/gm/ss/GM_SS_4010_Popup.xml", {width: 900, height:560}, {eqmtNoNm:encodeValue});
         	 return;
         	}

             setValue("requestGmSearchEqmt/eqmtNoNm", value);

             execSubmission("sub", "requestGmSearchEqmt", "responseGmSearchEqmt", "/ss/listEqmtBas.do");

             var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchEqmt/object/eqmtBasList/object");
             var rowCount = dataArr.length;

             if(rowCount == 1) {
             	   arrResult.push(getValue("responseGmSearchEqmt/object/eqmtBasList/object/eqmtNo"));
             	   arrResult.push(getValue("responseGmSearchEqmt/object/eqmtBasList/object/eqmtNm"));
             	   arrResult.push(getValue("responseGmSearchEqmt/object/eqmtBasList/object/buldCd"));
             	   arrResult.push(getValue("responseGmSearchEqmt/object/eqmtBasList/object/eqmtClsCd"));           	   
             	   arrResult.push(getValue("responseGmSearchEqmt/object/eqmtBasList/object/modlNm"));
             	   arrResult.push(getValue("responseGmSearchEqmt/object/eqmtBasList/object/roomCdNm")); 
             	   arrResult.push(getValue("responseGmSearchEqmt/object/eqmtBasList/object/roomCd")); 

                 WebSquare.ModelUtil.removeChildNodes( "responseGmSearchEqmt" );
                 
                 setGmEqmtPopupValue(arrResult);
             } else if(rowCount > 1) {
             	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchEqmt" );
             	   openPopup( "setGmEqmtPopupValue", "/views/gm/ss/GM_SS_4010_Popup.xml", {width: 900, height:560}, {eqmtNoNm:encodeValue});
             } else if(rowCount == 0) {
             	   showMsg("C_I041", "장비 코드/명으로 검색한 결과");
             }
         }

         /*============================================================================
         ** 기능  : 장비 조회 팝업 후에 호출됨
         ** 인수  : arrResult
         ** 리턴  : 
         ============================================================================*/
         function setGmEqmtPopupValue(arrResult) {  
             if(arrResult == undefined) {
                 return;
             }
            
             setValue("responseGmSearchEqmtInfo/eqmtNo",arrResult[0]); 
             setValue("responseGmSearchEqmtInfo/eqmtNm",arrResult[1]); 
             setValue("responseGmSearchEqmtInfo/buldCd",arrResult[2]); 
         	 setValue("responseGmSearchEqmtInfo/eqmtClsCd",arrResult[3]);        	   
             setValue("responseGmSearchEqmtInfo/modlNm",arrResult[4]); 
             setValue("responseGmSearchEqmtInfo/roomCdNm",arrResult[5]);        	 
             setValue("responseGmSearchEqmtInfo/roomCd",arrResult[6]);    
            
             if(gmSearchTypeFlag == "form") {
             	   eval(gmTextObjID).setValue( arrResult[0] );
             	   eval(gmNameObjID).setValue( arrResult[1] );
             	
             	   //화면에서 부가정보를 사용할 경우에  gmEqmtSearchFormCallBack 함수를 만들어 놓고 사용한다
             	   if (typeof gmEqmtSearchFormCallBack == 'function') {           		  
             		gmEqmtSearchFormCallBack(arrResult);
             	   }
             	   
         		   return;
         	   }
         	
         	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
         	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
         	
         	   //화면에서 부가정보를 사용할 경우에  gmEqmtSearchGridCallBack 함수를 만들어 놓고 사용한다
         	   if (typeof gmEqmtSearchGridCallBack == 'function') {
         		   gmEqmtSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
         	   }      	 
         }   
         
         /*============================================================================
          ** 기능  : 일반행정 통신코드팝업
          ** 인수  : 통신코드/통신코드명, 통신코드명 오브젝트
          ** 리턴  : 
              "responseGmSearchCmmtInfo/cmmtCd"      통신코드
              "responseGmSearchCmmtInfo/cmmtCdnm"    통신코드명
              "responseGmSearchCmmtInfo/cmmtClsCd"   통신분류코드                     
          ============================================================================*/
          function gmCmmtSearch(textObj, nameObj) {
               gmSearchTypeFlag = "form";
          	 gmTextObjID = textObj.getID();
          	 gmNameObjID = nameObj.getID();
          	
          	 nameObj.setValue("");
          	 var value = textObj.getValue();
          	 textObj.setValue("");    
          	
          	 WebSquare.ModelUtil.removeChildNodes( "responseGmSearchCmmtInfo" );

          	 if(event.type != 'click') {

  	 	       	 if(value.length < 1) {
  	 	       	  return;
  	 	       	 } 
          	 } 
          	
          	getGmCmmtInfo(event.type, value);      	
          }

          /*============================================================================
           ** 기능  : 일반행정 통신코드팝업
           ** 인수  : 통신코드/통신코드명, 통신코드명 오브젝트
           ** 리턴  : 결과배열, 노드생성                   
           ============================================================================*/
           function gmCmmtSearchGrid(grid , row , col, initCols) {
           	gmSearchTypeFlag = "grid";
           	gmSearchGridRow = row;
           	gmSearchGridCol = col;
           	gmSearchGridObjID = grid.getID();
           	
           	//var value = grid.getCellData(row, col);
           	
           	grid.setCellData( row , col+2 , "" );
           	var value = grid.getCellData(row, col);
           	grid.setCellData( row , col , "" );
           	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchCmmtInfo" );
           	
           	if(initCols != undefined) {
           		for(var index in initCols) {
           			if(initCols[index] != "") {
           				grid.setCellData( row , initCols[index] , "" );	
           			}
           		}
           	}

           	if(event.type != "click"){
           		if(value.length < 1) {
           			return;
           		} 
           	}
           	
           	getGmCmmtInfo(event.type, value);
           }
           
          /*============================================================================
          ** 기능  : 통신코드 조회 팝업
          ** 인수  : value
          ** 리턴  : 
          ============================================================================*/
          function getGmCmmtInfo(type,value) {
        	 
          	var encodeValue = "";     
              var arrResult = new Array();       
           
          	if(value != "") {
          	 encodeValue = WebSquare.text.BASE64URLEncoder(value);
          	}        	
          	   	
          	
          	if(type == "click") {
          	 openPopup( "setGmCmmtPopupValue", "/views/gm/ss/GM_SS_7010_Popup.xml", {width: 900, height:560}, {cmmtCdNm:encodeValue});
          	 return;
          	}

              setValue("requestGmSearchCmmt/cmmtCdNm", value);

              execSubmission("sub", "requestGmSearchCmmt", "responseGmSearchCmmt", "/ss/listCmmtBas.do");

              var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchCmmt/object/cmmtBasList/object");
              var rowCount = dataArr.length;

              if(rowCount == 1) {
              	   arrResult.push(getValue("responseGmSearchCmmt/object/cmmtBasList/object/cmmtCd"));
              	   arrResult.push(getValue("responseGmSearchCmmt/object/cmmtBasList/object/cmmtCdnm"));
              	   arrResult.push(getValue("responseGmSearchCmmt/object/cmmtBasList/object/cmmtClsCd"));            	  

                  WebSquare.ModelUtil.removeChildNodes( "responseGmSearchCmmt" );
                  
                  setGmCmmtPopupValue(arrResult);
              } else if(rowCount > 1) {
              	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchCmmt" );
              	   openPopup( "setGmCmmtPopupValue", "/views/gm/ss/GM_SS_7010_Popup.xml", {width: 900, height:560}, {cmmtCdNm:encodeValue});
              } else if(rowCount == 0) {
              	   showMsg("C_I041", "통신 코드/명으로 검색한 결과");
              }
          }

          /*============================================================================
          ** 기능  : 통신코드 조회 팝업 후에 호출됨
          ** 인수  : arrResult
          ** 리턴  : 
          ============================================================================*/
          function setGmCmmtPopupValue(arrResult) {  
              if(arrResult == undefined) {
                  return;
              }
             
              setValue("responseGmSearchCmmtInfo/cmmtCd",arrResult[0]); 
              setValue("responseGmSearchCmmtInfo/cmmtCdnm",arrResult[1]); 
              setValue("responseGmSearchCmmtInfo/cmmtClsCd",arrResult[2]);         	 
             
              if(gmSearchTypeFlag == "form") {
              	   eval(gmTextObjID).setValue( arrResult[0] );
              	   eval(gmNameObjID).setValue( arrResult[1] );
              	
              	   //화면에서 부가정보를 사용할 경우에  gmCmmtSearchFormCallBack 함수를 만들어 놓고 사용한다
              	   if (typeof gmCmmtSearchFormCallBack == 'function') {           		  
              		gmCmmtSearchFormCallBack(arrResult);
              	   }
              	   
          		   return;
          	   }
          	
          	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
          	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
          	
          	   //화면에서 부가정보를 사용할 경우에  gmCmmtSearchGridCallBack 함수를 만들어 놓고 사용한다
          	   if (typeof gmCmmtSearchGridCallBack == 'function') {
          		   gmCmmtSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
          	   }      	 
          }                                            
      
      /*============================================================================
       ** 기능  : 학생 조회 팝업
       ** 인수  : 학번/성명 
       ** 파라미터 : 
       ** 리턴  : 
           "studPopupSearchInfo/sno"         학번               
           "studPopupSearchInfo/studNm"      성명             
       ============================================================================*/
       function gmStudPopupSearch(textObj, nameObj) {
           gmSearchTypeFlag = "form";
           gmTextObjID = textObj.getID();
           gmNameObjID = nameObj.getID();
           
           nameObj.setValue("");
           var searchStudValue = textObj.getValue();
           textObj.setValue("");
           WebSquare.ModelUtil.removeChildNodes( "studPopupSearchInfo" );
           if(event.type != 'click') {
               if(searchStudValue.length < 1) {
                   nameObj.setValue("");
                   return;
               } else if(searchStudValue.length < 2) {
                   showMsg("C_I054", "학번/성명을 2자 이상");
                   return;
               }
           } 
           getGmStudPopupInfo(event.type, searchStudValue);
       }
       /*============================================================================
       ** 기능  : 학생 조회 팝업
       ** 인수  : value
       ** 리턴  : 
       ============================================================================*/
       function getGmStudPopupInfo(type, searchStudValue) {
           var arrResult = new Array();
           var encodeSearchStudValue = "";
            
           if(searchStudValue != undefined) {
       	    if(searchStudValue != "") {
       	    	encodeSearchStudValue = WebSquare.text.BASE64URLEncoder(searchStudValue);
       	    }
               setValue("reqStudPopupSearchInfo/sno", searchStudValue);
           }
           
           
           if(type == "click") {
               openPopup( "setGmStudPopupValue", "/views/gm/co/STUDENT_Popup.xml", {width: 1020, height:550}, {sno:encodeSearchStudValue});
               return;                                                                                                               
           }                                                                                                                         
                                                                                                                            
           execSubmission("getCommonDataSubm", "reqStudPopupSearchInfo", "studPopupsearchList", "/gm/listStud.do");
           
           var dataArr = WebSquare.ModelUtil.findInstanceNodes("studPopupsearchList/object/studList/object");
           var rowCount = dataArr.length;
           
           if(rowCount == 1) {
               arrResult.push(getValue("studPopupsearchList/object/studList/object/sno"));       
               arrResult.push(getValue("studPopupsearchList/object/studList/object/studNm"));       
               
               WebSquare.ModelUtil.removeChildNodes( "studPopupsearchList" );
               
               setGmStudPopupValue(arrResult);
           } else if(rowCount > 1) {
               WebSquare.ModelUtil.removeChildNodes( "studPopupsearchList" );
               openPopup( "setGmStudPopupValue", "/views/gm/co/STUDENT_Popup.xml", {width: 1020, height:550}, {sno:encodeSearchStudValue});
           } else if(rowCount == 0) {
               showMsg("C_I041", "학번/성명으로 검색한 결과");
           }
       }

       /*============================================================================
       ** 기능  : 학생 조회 팝업 후에 수행됨
       ** 인수  : arrResult
       ** 리턴  : 
       ============================================================================*/
       function setGmStudPopupValue(arrResult) {
           if(arrResult == undefined) {
               return;
           }
           
           setValue("studPopupSearchInfo/sno"         ,arrResult[0]);       
           setValue("studPopupSearchInfo/studNm"         ,arrResult[1]);     

           if(gmSearchTypeFlag == "form") {
               eval(gmTextObjID).setValue( arrResult[0] );
               eval(gmNameObjID).setValue( arrResult[1] );
               
               //화면에서 부가정보를 사용할 경우에  gmDrverSearchFormCallBack 함수를 만들어 놓고 사용한다
               if (typeof gmStudSearchFormCallBack == 'function') {
                   gmStudSearchFormCallBack(arrResult);
               }
               return;
           }
           
           eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
           eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
           
           //화면에서 부가정보를 사용할 경우에  gmDrverSearchGridCallBack 함수를 만들어 놓고 사용한다
           if (typeof gmStudSearchFormCallBack == 'function') {
         	  gmStudSearchFormCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
           }
       }

       /*============================================================================
        ** 기능  : 출연자 조회 팝업
        ** 인수  : 출연자번호/성명(상호명) 
        ** 파라미터 : 
        ** 리턴  : 
            "castPopupSearchInfo/castNo"         출연자번호               
            "castPopupSearchInfo/castCd"         출연자코드(사번,거래처코드,학번)             
            "castPopupSearchInfo/castNm"         출연자명             
        ============================================================================*/
        function gmCastPopupSearch(textObj, nameObj) {
            gmSearchTypeFlag = "form";
            gmTextObjID = textObj.getID();
            gmNameObjID = nameObj.getID();
            
            nameObj.setValue("");
            var searchCastValue = textObj.getValue();
            textObj.setValue("");
            WebSquare.ModelUtil.removeChildNodes( "castPopupSearchInfo" );
            if(event.type != 'click') {
                if(searchCastValue.length < 1) {
                    nameObj.setValue("");
                    return;
                } else if(searchCastValue.length < 2) {
                    showMsg("C_I054", "출연자번호/성명(상호명)을 2자 이상");
                    return;
                }
            } 
            getGmCastPopupInfo(event.type, searchCastValue);
        }
        /*============================================================================
        ** 기능  : 출연자 조회 팝업
        ** 인수  : value
        ** 리턴  : 
        ============================================================================*/
        function getGmCastPopupInfo(type, searchCastValue) {
            var arrResult = new Array();
            var encodeSearchCastValue = "";
             
            if(searchCastValue != undefined) {
        	    if(searchCastValue != "") {
        	    	encodeSearchCastValue = WebSquare.text.BASE64URLEncoder(searchCastValue);
        	    }
                setValue("reqCastPopupSearchInfo/castNo", searchCastValue);
            }
            
            
            if(type == "click") {
                openPopup( "setGmCastPopupValue", "/views/gm/co/GM_CO_2010_Popup.xml", {width: 925, height:535}, {castNo:encodeSearchCastValue});
                return;                                                                                                               
            }                                                                                                                         
                                                                                                                             
            execSubmission("getCommonDataSubm", "reqCastPopupSearchInfo", "castPopupSearchList", "/co/castPopupListCastBas.do");
            
            var dataArr = WebSquare.ModelUtil.findInstanceNodes("castPopupSearchList/object/castBasList/object");

            var rowCount = dataArr.length;
            
            if(rowCount == 1) {
                arrResult.push(getValue("castPopupSearchList/object/castBasList/object/castNo"));       
                arrResult.push(getValue("castPopupSearchList/object/castBasList/object/castNm"));       
                arrResult.push(getValue("castPopupSearchList/object/castBasList/object/castCd"));       
                
                WebSquare.ModelUtil.removeChildNodes( "castPopupSearchList" );
                
                setGmCastPopupValue(arrResult);
            } else if(rowCount > 1) {
                WebSquare.ModelUtil.removeChildNodes( "castPopupSearchList" );
                openPopup( "setGmCastPopupValue", "/views/gm/co/GM_CO_2010_Popup.xml", {width: 925, height:535}, {castNo:encodeSearchCastValue});
            } else if(rowCount == 0) {
                showMsg("C_I041", "출연자번호/성명(상호명)으로 검색한 결과");
            }
        }
        
        /**************************************************************************
         * function    : setTabToWhtieSpace
         * Description : 
         * Parameter   : null
         * Return      : null
         **************************************************************************/ 
         function setTabToWhtieSpace(obj) {
             var strString = obj.getValue().replaceAll("\t","    ");
             obj.setValue( strString );
         } 
        /*============================================================================
        ** 기능  : 출연자 조회 팝업 후에 수행됨
        ** 인수  : arrResult
        ** 리턴  : 
        ============================================================================*/
        function setGmCastPopupValue(arrResult) {
            if(arrResult == undefined) {
                return;
            }
            
            setValue("castPopupSearchInfo/castNo"         ,arrResult[0]);       
            setValue("castPopupSearchInfo/castNm"         ,arrResult[1]);     
            setValue("castPopupSearchInfo/castCd"         ,arrResult[2]);       

            if(gmSearchTypeFlag == "form") {
                eval(gmTextObjID).setValue( arrResult[0] );
                eval(gmNameObjID).setValue( arrResult[1] );
                
                //화면에서 부가정보를 사용할 경우에  gmDrverSearchFormCallBack 함수를 만들어 놓고 사용한다
                if (typeof gmCastSearchFormCallBack == 'function') {
                    gmCastSearchFormCallBack(arrResult);
                }
                return;
            }
            
            eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
            eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
            
            //화면에서 부가정보를 사용할 경우에  gmDrverSearchGridCallBack 함수를 만들어 놓고 사용한다
            if (typeof gmCastSearchFormCallBack == 'function') {
          	  gmCastSearchFormCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
            }
        }   
        /*============================================================================
         ** 기능  : 두 날짜의 차이(년,월,일수)
         ** 인수  : sdt :시작일자 edt:종료일자 ,type: year(년수),month(개월수),day(일수)
         ** 리턴  : 
         ============================================================================*/
        function gmRetDateVal(sdt,edt,type)
        {
        	var sdt = new Date(sdt.substr(0,4),sdt.substr(4,2)-1,sdt.substr(6,2));
        	var edt = new Date(edt.substr(0,4),edt.substr(4,2)-1,edt.substr(6,2));
        	var retVal = 0;
        	var interval = edt-sdt;
        	var day = 1000*60*60*24;
        	var month = day*30;
        	var year = month*12;
        	if(type == undefined ||type == null)
        	{
        		showMsgString("리턴받을 type이 지정되지 않았습니다.");
        		return false;
        	}
        	if(type=="year")
        	{
        		retVal = parseInt(interval/year);
        	}else if(type=="month")
        	{
        		retVal = parseInt(interval/month);
        	}else if(type=="day")
        	{
        		retVal = parseInt(interval/day);
        	}
        	return retVal;
        }
        
        /*============================================================================
         ** 기능  : 그리드의 해당 칼럼들을 필수 컬럼으로 변경
         ** 인수  : Grid Obejct, Columns
         ** 리턴  : 
         ============================================================================*/
        function gmSetGridNotNullCols(){
            var object = arguments[0];
            var columns = arguments[1];
	        for ( var row = 0 ; row < object.getRowCount() ; row++ ){
	            for ( var i = 0 ; i < columns.length ; i++ ) {
                    object.setCellStyle(row , columns[i], "background", "" );
                    if (object.getColumnType( columns[i] ) == "select") {
                        object.setCellStyle(row , columns[i], "background-position", "right center" );
                        object.setCellStyle(row , columns[i], "background", "url(/images/form/select_arrow1.gif)" );
                    } else if(object.getColumnType( columns[i] ) == "checkbox") {
                        
                    } else {
                       object.setCellStyle(row , columns[i], "background-position", "right top" );
                       object.setCellStyle(row , columns[i], "background", "url(/images/form/m_ic_essin.png)" );
                    }
                    
                    object.setCellStyle(row , columns[i], "background-repeat", "no-repeat" );
                    object.setCellBackgroundColor( row , columns[i] , "#FFFCD6" );
                    //disabled 도 false
	             }
	         }
         }

        
        
        
        /*============================================================================
         ** 기능  : 일반행정 꽃차례팝업
         ** 인수  : 꽃차례코드/명
         ** 리턴  : 
         ============================================================================*/
         function gmFwisSearch(textObj, nameObj) {
               gmSearchTypeFlag = "form";
         	   gmTextObjID = textObj.getID();
         	   gmNameObjID = nameObj.getID();
         	
         	   nameObj.setValue("");
         	   var value = textObj.getValue();
         	   textObj.setValue("");
         	   if(event.type != 'click') {
         		   if(value.length < 1) {
         			   return;
         		   } 
         	   } 
         	  getGmFwisInfo(event.type, value);
         }
         /*============================================================================
         ** 기능  : 일반행정 꽃차례팝업
         ** 인수  : value    꽃차례코드
         ** 리턴  : 
         ============================================================================*/
         function getGmFwisInfo(type,value) {
         	 var encodeValue = "";
             var arrResult = new Array();
             WebSquare.ModelUtil.removeChildNodes( "responseGmSearchFwisInfo" );
         	   if(value != "") {
         		   encodeValue = WebSquare.text.BASE64URLEncoder(value);
         	   } 
         	 
         	   if(type == "click") {
         		   openPopup( "setGmFwisPopupValue", "/views/gm/js/GM_JS_7010_Popup.xml", {width: 820, height:535},
         				      {fwisCdNm:encodeValue });
         		   return;
         	   }
             setValue("requestGmSearchFwis/fwisNm", value);

             execSubmission("sub", "requestGmSearchFwis", "responseGmSearchFwis", "/js/listFwisBasPopup.do");
            
             var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchFwis/object/fwisBasList/object");
             var rowCount = dataArr.length;

             if(rowCount == 1) {
             	   arrResult.push(getValue("responseGmSearchFwis/object/fwisBasList/object/fwisCd"));
             	   arrResult.push(getValue("responseGmSearchFwis/object/fwisBasList/object/fwisNm"));
                   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchFwis" );
                 
                   setGmFwisPopupValue(arrResult);
             } else if(rowCount > 1) {
             	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchFwis" );
             	  openPopup( "setGmFwisPopupValue", "/views/gm/js/GM_JS_7010_Popup.xml", {width: 820, height:535},
             			 {fwisCdNm:encodeValue });
             } else if(rowCount == 0) {
             	   showMsg("C_I041", "꽃차례코드/명으로 검색한 결과");
             }
         }

         /*============================================================================
         ** 기능  : 꽃차례 조회 팝업 후에 호출됨
         ** 인수  : arrResult
         ** 리턴  : 
         ============================================================================*/
         function setGmFwisPopupValue(arrResult) {
             if(arrResult == undefined) {
                 return;
             }
             
              if(gmSearchTypeFlag == "form") {
             	   eval(gmTextObjID).setValue( arrResult[0] );
             	   eval(gmNameObjID).setValue( arrResult[1] );
             	
             	   //화면에서 부가정보를 사용할 경우에  gmAsetSearchFormCallBack 함수를 만들어 놓고 사용한다
             	   if (typeof gmFwisSearchFormCallBack == 'function') {
             		  gmFwisSearchFormCallBack(arrResult);
             	   }
         		   return;
         	   }
         	
         	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
         	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
         	
         	   //화면에서 부가정보를 사용할 경우에  gmAsetSearchGridCallBack 함수를 만들어 놓고 사용한다
         	   if (typeof gmFwisSearchGridCallBack == 'function') {
         		  gmFwisSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
         	   }
         }
         
         
         /*============================================================================
          ** 기능  : 일반행정 수종팝업
          ** 인수  : 수종분류코드/자산명, 수종분류명 오브젝트 
          ** 리턴  : 
            
          ============================================================================*/
          function gmKnotSearch(textObj, nameObj) {
               gmSearchTypeFlag = "form";
          	   gmTextObjID = textObj.getID();
          	   gmNameObjID = nameObj.getID();
          	
          	   nameObj.setValue("");
          	   var value = textObj.getValue();
          	   textObj.setValue("");
          	
          	   if(event.type != 'click') {

          		   if(value.length < 1) {
          			   return;
          		   } else if(value.length < 2) {
          			   showMsg("C_I054", "수종분류코드/명을 2자 이상");
          			   return;
          		   }
          	   } 
          	   getGmKnotInfo(event.type, value);
          }

          /*============================================================================
           ** 기능  : 일반행정 수종팝업 && 그리드에 입력
           ** 인수  : submissionId, object      
           ** 리턴  : 결과배열, 노드생성
            
           ============================================================================*/
           function gmKnotSearchGrid(grid , row , col, initCols) {
           	gmSearchTypeFlag = "grid";
           	gmSearchGridRow = row;
           	gmSearchGridCol = col;
           	gmSearchGridObjID = grid.getID();
           
           	
           	grid.setCellData( row , col+2 , "" );
           	var value = grid.getCellData(row, col);
           	grid.setCellData( row , col , "" );
           	
           	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchKnotInfo" );
           	
           	if(initCols != undefined) {
            		for(var index in initCols) {
            			if(initCols[index] != "") {
            				grid.setCellData( row , initCols[index] , "" );	
            			}
            		}
            	}
           	
           	if(event.type != "click"){
           		if(value.length < 1) {
           			return;
           		} else if(value.length < 2) {
           			showMsg("C_I054", "수종분류코드/명을 2자 이상");
           			return;
           		}
           	}
           	getGmKnotInfo(event.type, value);
           }
           
          /*============================================================================
          ** 기능  : 수종 조회 팝업
          ** 인수  : value   
          ** 리턴  : 
          ============================================================================*/
          function getGmKnotInfo(type,value) {
           	 var encodeValue = "";
              var arrResult = new Array();
              WebSquare.ModelUtil.removeChildNodes( "responseGmSearchKnotInfo" );
              
          	   if(value != "") {
          		   encodeValue = WebSquare.text.BASE64URLEncoder(value);
          	   } 
          	   if(type == "click") {
          		   openPopup( "setGmKnotPopupValue", "/views/gm/js/GM_JS_7040_Popup.xml", {width: 700, height:535},
          				      {knotClsNm:encodeValue});
          		   return;
          	   }
     
              setValue("requestGmSearchKnot/knotClsCd", value);

              execSubmission("sub", "requestGmSearchKnot", "responseGmSearchKnot", "/js/listKnotClsBasPopup.do");

              var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchKnot/object/knotClsBasList/object");
              var rowCount = dataArr.length;

              if(rowCount == 1) {
              	   arrResult.push(getValue("responseGmSearchKnot/object/knotClsBasList/object/knotClsCd"));
              	   arrResult.push(getValue("responseGmSearchKnot/object/knotClsBasList/object/knotClsNm"));
              	   arrResult.push(getValue("responseGmSearchKnot/object/knotClsBasList/object/upKnotClsCd"));
                   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchKnot" );
                  
                   setGmKnotPopupValue(arrResult);
              } else if(rowCount > 1) {
              	  WebSquare.ModelUtil.removeChildNodes( "responseGmSearchKnot" );
              	  openPopup( "setGmKnotPopupValue", "/views/gm/js/GM_JS_7040_Popup.xml", {width: 700, height:535},
      				      {knotClsNm:encodeValue});
              } else if(rowCount == 0) {
              	   showMsg("C_I041", "수종분류코드/명으로 검색한 결과");
              }
          }

          /*============================================================================
          ** 기능  : 수종 조회 팝업 후에 호출됨
          ** 인수  : arrResult
          ** 리턴  : 
          ============================================================================*/
          function setGmKnotPopupValue(arrResult) {
              if(arrResult == undefined) {
                  return;
              }
               if(gmSearchTypeFlag == "form") {
              	   eval(gmTextObjID).setValue( arrResult[0] );
              	   eval(gmNameObjID).setValue( arrResult[1] );
              	
              	   //화면에서 부가정보를 사용할 경우에  gmAsetSearchFormCallBack 함수를 만들어 놓고 사용한다
              	   if (typeof gmKnotSearchFormCallBack == 'function') {
              		   gmKnotSearchFormCallBack(arrResult);
              	   }
          		   return;
          	   }
          	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
          	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
          	   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol-1 , arrResult[2] );
          	
          	   //화면에서 부가정보를 사용할 경우에  gmAsetSearchGridCallBack 함수를 만들어 놓고 사용한다
          	   if (typeof gmKnotSearchGridCallBack == 'function') {
          		  gmKnotSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
          	   }
          }
          
          /*============================================================================
          ** 기능  : 일반행정 교직원부서팝업
          ** 인수  : 사번/성명, 성명 오브젝트
          ** 리턴  : 
              "responseGmSearchUserInfo/eno"        사번            
              "responseGmSearchUserInfo/stafNm"     교직원성명      
              "responseGmSearchUserInfo/iidno"      주민등록번호      
              "responseGmSearchUserInfo/birth"      생년월일        
              "responseGmSearchUserInfo/sexCd"      성별코드      
              "responseGmSearchUserInfo/sexCdNm"    성별코드명   
              "responseGmSearchUserInfo/clsfCd"     직급코드       
              "responseGmSearchUserInfo/clsfNm"     직급명        
              "responseGmSearchUserInfo/deptCd"     부서코드       
              "responseGmSearchUserInfo/deptNm"     부서코드명      
              "responseGmSearchUserInfo/hffcStatCd" 재직상태코드
              "responseGmSeazrchUserInfo/hffcStatDt" 재직상태일자
              "responseGmSearchUserInfo/hffcStatNm" 재직상태명
              "responseGmSearchUserInfo/nltyCd" 국적코드
              "responseGmSearchUserInfo/nltyCdNm" 국적코드명
              "responseGmSearchUserInfo/salcCd" 호봉코드
              "responseGmSearchUserInfo/salcNm" 호봉코드명
              "responseGmSearchUserInfo/payFormCd" 급여형태코드
              "responseGmSearchUserInfo/payFormCdNm" 급여형태코드명
              "responseGmSearchUserInfo/rtirDt" 퇴직일자
              "responseGmSearchUserInfo/jobcCd" 직종코드
              "responseGmSearchUserInfo/jobcCdNm" 직종코드명
              "responseGmSearchUserInfo/payBankCd" 급여은행코드
              "responseGmSearchUserInfo/payBankCdNm" 급여은행코드명
              "responseGmSearchUserInfo/payAcno" 급여계좌번호
              "responseGmSearchUserInfo/payDepoNm" 급여예금주명
          ============================================================================*/
          function gmUserDeptSearch(textObj, nameObj) {
          	gmSearchTypeFlag = "form";
          	gmTextObjID = textObj.getID();
          	gmNameObjID = nameObj.getID();
          	
          	nameObj.setValue("");
          	var value = textObj.getValue();
          	textObj.setValue("");
          	
          	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
          	if(event.type != 'click') {
          		if(value.length < 1) {
          			showMsg("C_I054", "사번/성명을 1자 이상");
          			return;
          		}
          	}

          	getGmUserDeptInfo(event.type, value, arguments[2], arguments[3], arguments[4], arguments[5],arguments[6]);
          }
          /*============================================================================
           ** 기능  : 일반행정 교직원부서팝업(크롬 대응)
           ** 인수  : 사번/성명, 성명 오브젝트
           ** 리턴  : 
               "responseGmSearchUserInfo/eno"        사번            
               "responseGmSearchUserInfo/stafNm"     교직원성명      
               "responseGmSearchUserInfo/iidno"      주민등록번호      
               "responseGmSearchUserInfo/birth"      생년월일        
               "responseGmSearchUserInfo/sexCd"      성별코드      
               "responseGmSearchUserInfo/sexCdNm"    성별코드명   
               "responseGmSearchUserInfo/clsfCd"     직급코드       
               "responseGmSearchUserInfo/clsfNm"     직급명        
               "responseGmSearchUserInfo/deptCd"     부서코드       
               "responseGmSearchUserInfo/deptNm"     부서코드명      
               "responseGmSearchUserInfo/hffcStatCd" 재직상태코드
               "responseGmSeazrchUserInfo/hffcStatDt" 재직상태일자
               "responseGmSearchUserInfo/hffcStatNm" 재직상태명
               "responseGmSearchUserInfo/nltyCd" 국적코드
               "responseGmSearchUserInfo/nltyCdNm" 국적코드명
               "responseGmSearchUserInfo/salcCd" 호봉코드
               "responseGmSearchUserInfo/salcNm" 호봉코드명
               "responseGmSearchUserInfo/payFormCd" 급여형태코드
               "responseGmSearchUserInfo/payFormCdNm" 급여형태코드명
               "responseGmSearchUserInfo/rtirDt" 퇴직일자
               "responseGmSearchUserInfo/jobcCd" 직종코드
               "responseGmSearchUserInfo/jobcCdNm" 직종코드명
               "responseGmSearchUserInfo/payBankCd" 급여은행코드
               "responseGmSearchUserInfo/payBankCdNm" 급여은행코드명
               "responseGmSearchUserInfo/payAcno" 급여계좌번호
               "responseGmSearchUserInfo/payDepoNm" 급여예금주명
           ============================================================================*/
           function gmUserDeptSearchMultiBrowser(textObj, nameObj,e) {
           	gmSearchTypeFlag = "form";
           	gmTextObjID = textObj.getID();
           	gmNameObjID = nameObj.getID();
           
           	nameObj.setValue("");
           	var value = textObj.getValue();
           	textObj.setValue("");
           	
           	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
           	if(e.type != 'click') {
           		if(value.length < 1) {
           			showMsg("C_I054", "사번/성명을 1자 이상");
           			return;
           		}
           	}
           	
           	getGmUserDeptInfo(e.type, value, arguments[3], arguments[4], arguments[5], arguments[6],arguments[7]);
           }
          /*============================================================================
          ** 기능  : 일반행정 교직원부서팝업 && 그리드에 입력
          ** 인수  : submissionId, object
          ** 리턴  : 결과배열, 노드생성
              "responseGmSearchUserInfo/eno"        사번            
              "responseGmSearchUserInfo/stafNm"     교직원성명      
              "responseGmSearchUserInfo/iidno"      주민등록번호      
              "responseGmSearchUserInfo/birth"      생년월일        
              "responseGmSearchUserInfo/sexCd"      성별코드      
              "responseGmSearchUserInfo/sexCdNm"    성별코드명   
              "responseGmSearchUserInfo/clsfCd"     직급코드       
              "responseGmSearchUserInfo/clsfNm"     직급명        
              "responseGmSearchUserInfo/deptCd"     부서코드       
              "responseGmSearchUserInfo/deptNm"     부서코드명      
              "responseGmSearchUserInfo/hffcStatCd" 재직상태코드
              "responseGmSeazrchUserInfo/hffcStatDt" 재직상태일자
              "responseGmSearchUserInfo/hffcStatNm" 재직상태명
              "responseGmSearchUserInfo/nltyCd" 국적코드
              "responseGmSearchUserInfo/nltyCdNm" 국적코드명 
              "responseGmSearchUserInfo/salcCd" 호봉코드
              "responseGmSearchUserInfo/salcNm" 호봉코드명
              "responseGmSearchUserInfo/payFormCd" 급여형태코드
              "responseGmSearchUserInfo/payFormCdNm" 급여형태코드명
              "responseGmSearchUserInfo/rtirDt" 퇴직일자
              "responseGmSearchUserInfo/jobcCd" 직종코드
              "responseGmSearchUserInfo/jobcCdNm" 직종코드명
              "responseGmSearchUserInfo/payBankCd" 급여은행코드
              "responseGmSearchUserInfo/payBankCdNm" 급여은행코드명
              "responseGmSearchUserInfo/payAcno" 급여계좌번호
              "responseGmSearchUserInfo/payDepoNm" 급여예금주명
          ============================================================================*/
          function gmUserDeptSearchGrid(grid , row , col, initCols) {
          	gmSearchTypeFlag = "grid";
          	gmSearchGridRow = row;
          	gmSearchGridCol = col;
          	gmSearchGridObjID = grid.getID();

          	grid.setCellData( row , col+2 , "" );
          	var value = grid.getCellData(row, col);
          	grid.setCellData( row , col , "" );
          	
          	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
          	
          	if(initCols != undefined) {
          		for(var index in initCols) {
          			if(initCols[index] != "") {
          				grid.setCellData( row , initCols[index] , "" );	
          			}
          		}
          	}

          	if(event.type != "click"){
          		if(value.length < 1) {
          			showMsg("C_I054", "사번/성명을 1자 이상");
          			return;
          		}
          	} 
          	
          	getGmUserDeptInfo(event.type, value, arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
          }

          /*============================================================================
          ** 기능  : 교직원부서 조회 팝업
          ** 인수  : value
          ** 리턴  : 
          ============================================================================*/
          function getGmUserDeptInfo(type, value) {
          	var arrResult = new Array();
          	var clsfLCdValue = arguments[2];
          	var jobcCdValue = arguments[3];
          	var orgCd = arguments[4];
          	var orgNm = arguments[5];
          	var roleCheck = arguments[6];
          	
          	var encodeValue = "";
          	var encodeJobcCdValue = "";
          	var encodeClsfLCdValue = "";
          	var encodeOrgCd = "";
          	var encodeOrgNm = "";
          	var encodeLoginOrgCd = "";
          	var encodeRoleCheck = "";
          	if(value != "") {
          		encodeValue = WebSquare.text.BASE64URLEncoder(value);
          	}
          	if(orgCd != undefined) {
          		if(orgCd != "") {
          			encodeOrgCd = WebSquare.text.BASE64URLEncoder(orgCd);
          		} 
          		setValue("requestGmSearchUser/selectDeptCd", orgCd);
          	}
          	if(orgNm != undefined) {
          		if(orgNm != "") {
          			encodeOrgNm = WebSquare.text.BASE64URLEncoder(orgNm);
          		} 
          	}
          	if(roleCheck != undefined) {
          		if(roleCheck != "") {
          			encodeRoleCheck = WebSquare.text.BASE64URLEncoder(roleCheck);
          		} 
          	}
          	if(clsfLCdValue != undefined) {
          		if(clsfLCdValue != "") {
          			encodeClsfLCdValue = WebSquare.text.BASE64URLEncoder(clsfLCdValue);
          		} 
          		setValue("requestGmSearchUser/selectClsfLCd", clsfLCdValue);	
          	}
          	if(jobcCdValue != undefined) {
          		if(jobcCdValue != "") {
          			encodeJobcCdValue = WebSquare.text.BASE64URLEncoder(jobcCdValue);
          		} 
          		setValue("requestGmSearchUser/selectJobcCd", jobcCdValue);	
          	}
              setValue("requestGmSearchUser/eno", value);
          	if(type == "click") {
          		if(typeof setNavigator != 'function') {
          			openNewPopup( "setGmUserDeptPopupValue", "/views/gm/is/GM_IS_0004.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, orgNm:encodeOrgNm,roleCheck:encodeRoleCheck});
          			return;
          		}
          		openPopup( "setGmUserDeptPopupValue", "/views/gm/is/GM_IS_0004.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, orgNm:encodeOrgNm, roleCheck:encodeRoleCheck});
          		return;
          	}
          	
              execSubmission("getCommonDataSubm", "requestGmSearchUser", "responseGmSearchUser", "/gm/listUser.do");
              
              var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchUser/object/userList/object");
              var rowCount = dataArr.length;
              
              if(rowCount == 1) {
              	arrResult.push(getValue("responseGmSearchUser/object/userList/object/eno"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/stafNm"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/iidno"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/birth"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/sexDvcd"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/sexDvcdNm"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/clsfCd"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/clsfNm"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/deptCd"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/deptNm"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatCd"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatDt"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatNm"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/nltyCd"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/nltyCdNm"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/salcCd"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/salcNm"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/payFormCd"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/payFormCdNm"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/rtirDt"));      
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/jobcCd"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/jobcCdNm"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/payBankCd"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/payBankCdNm"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/payAcno"));
                  arrResult.push(getValue("responseGmSearchUser/object/userList/object/payDepoNm"));
                  
                  WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUser" );
                  
                  setGmUserDeptPopupValue(arrResult);
              } else if(rowCount > 1) {
              	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUser" );
              	if(typeof setNavigator != 'function') {
          			openNewPopup( "setGmUserDeptPopupValue", "/views/gm/is/GM_IS_0004.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, orgNm:encodeOrgNm, loginOrgCd:encodeLoginOrgCd});
          			return;
          		}
              	openPopup( "setGmUserDeptPopupValue", "/views/gm/is/GM_IS_0004.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, orgNm:encodeOrgNm, loginOrgCd:encodeLoginOrgCd});
              } else if(rowCount == 0) {
              	showMsg("C_I041", "사번/성명으로 검색한 결과");
              }
          }

          /*============================================================================
          ** 기능  : 교직원부서 조회 팝업 후에 수행됨
          ** 인수  : arrResult
          ** 리턴  : 
          ============================================================================*/
          function setGmUserDeptPopupValue(arrResult) {
          	if(arrResult == undefined) {
          		return;
          	}
          	
          	setValue("responseGmSearchUserInfo/eno",arrResult[0]);       
              setValue("responseGmSearchUserInfo/stafNm",arrResult[1]);    
              setValue("responseGmSearchUserInfo/iidno",arrResult[2]);     
              setValue("responseGmSearchUserInfo/birth",arrResult[3]);     
              setValue("responseGmSearchUserInfo/sexDvcd",arrResult[4]);     
              setValue("responseGmSearchUserInfo/sexDvcdNm",arrResult[5]);   
              setValue("responseGmSearchUserInfo/clsfCd",arrResult[6]);    
              setValue("responseGmSearchUserInfo/clsfNm",arrResult[7]);    
              setValue("responseGmSearchUserInfo/deptCd",arrResult[8]);    
              setValue("responseGmSearchUserInfo/deptNm",arrResult[9]);    
              setValue("responseGmSearchUserInfo/hffcStatCd",arrResult[10]);
              setValue("responseGmSearchUserInfo/hffcStatDt",arrResult[11]);
              setValue("responseGmSearchUserInfo/hffcStatNm",arrResult[12]);
              setValue("responseGmSearchUserInfo/nltyCd",arrResult[13]);
              setValue("responseGmSearchUserInfo/nltyCdNm",arrResult[14]);
              setValue("responseGmSearchUserInfo/salcCd",arrResult[15]); 
              setValue("responseGmSearchUserInfo/salcNm",arrResult[16]); 
              setValue("responseGmSearchUserInfo/payFormCd",arrResult[17]); 
              setValue("responseGmSearchUserInfo/payFormCdNm",arrResult[18]); 
              setValue("responseGmSearchUserInfo/rtirDt",arrResult[19]);
              setValue("responseGmSearchUserInfo/jobcCd",arrResult[20]);
              setValue("responseGmSearchUserInfo/jobcCdNm",arrResult[21]); 
              setValue("responseGmSearchUserInfo/payBankCd",arrResult[22]); 
              setValue("responseGmSearchUserInfo/payBankCdNm",arrResult[23]); 
              setValue("responseGmSearchUserInfo/payAcno",arrResult[24]); 
              setValue("responseGmSearchUserInfo/payDepoNm",arrResult[25]);
              setValue("responseGmSearchUserInfo/hffcStatMclsCdNm",arrResult[26]);

              if(gmSearchTypeFlag == "form") {
              	eval(gmTextObjID).setValue( arrResult[0] );
              	eval(gmNameObjID).setValue( arrResult[1] );
              	
              	//화면에서 부가정보를 사용할 경우에  gmUserDeptSearchFormCallBack 함수를 만들어 놓고 사용한다
              	if (typeof gmUserDeptSearchFormCallBack == 'function') {
              		gmUserDeptSearchFormCallBack(arrResult);
              	}
          		return;
          	}
          	
          	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
          	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
          	
          	//화면에서 부가정보를 사용할 경우에  gmUserDeptSearchGridCallBack 함수를 만들어 놓고 사용한다
          	if (typeof gmUserDeptSearchGridCallBack == 'function') {
          		gmUserDeptSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
          	}
          }

          /*============================================================================
           ** 기능  : 전화번호 합치기
           ** 인수  : telno1, telno2, telno3, node
           ============================================================================*/
          function gmSumTelno(telno1, telno2, telno3, node) {
       	   if ( !gmIsEmpty(telno1.getValue()) && !gmIsEmpty(telno2.getValue()) && !gmIsEmpty(telno3.getValue()) ) {
                  setValue(node, telno1.getValue() + "-" + telno2.getValue() + "-" + telno3.getValue());
              } else {
                  setValue(node, "");
              }
          }
          
          /*============================================================================
           ** 기능  : 전화번호 유효성
           ** 인수  : telno1, telno2, telno3, node
           ============================================================================*/
          function gmCheckTelno(telno1, telno2, telno3) {
       	      if ( !gmIsEmpty(telno1.getValue()) || !gmIsEmpty(telno2.getValue()) || !gmIsEmpty(telno3.getValue()) ) {
       		      gmChkValid([telno1],true, "se_combo_E");
                  gmChkValid([telno2,telno3], true, "se_input_E");
              } else {
                  gmChkValid([telno1],false, "se_combo_E");
                  gmChkValid([telno2,telno3], false, "se_input_E");
              }
          }
          
          /*============================================================================
           ** 기능  : 코드/코드명 유효성
           ** 인수  : valueCd, valueNm
           ============================================================================*/
          function gmCheckCdNm(valueCd, valueNm, classGbn) {
       	      if ( !gmIsEmpty(valueCd.getValue()) ) {
                  gmChkValid([valueNm], true, classGbn);
              } else {
                  gmChkValid([valueNm], false, classGbn);
              }
          }
          
          /*============================================================================
           ** 기능  : 그리드의 해당 로우의 칼럼들을 필수 컬럼으로 변경
           ** 인수  : Grid Obejct, Columns
           ** 리턴  : 
           ============================================================================*/
          function gmSetGridRowSetCols(){
              var object = arguments[0];
              var columns = arguments[1];
              var row = arguments[2];
              
  	         for ( var i = 0 ; i < columns.length ; i++ ) {
	              object.setCellStyle(row , columns[i], "background", "" );
	              if (object.getColumnType( columns[i] ) == "select") {
	                  object.setCellStyle(row , columns[i], "background-position", "right center" );
	                  object.setCellStyle(row , columns[i], "background", "url(/images/form/select_arrow1.gif)" );
	              } else if(object.getColumnType( columns[i] ) == "checkbox") {
	                  
	              } else {
	                 object.setCellStyle(row , columns[i], "background-position", "right top" );
	                 object.setCellStyle(row , columns[i], "background", "url(/images/form/m_ic_essin.png)" );
	              }
	              
	              object.setCellStyle(row , columns[i], "background-repeat", "no-repeat" );
	              object.setCellBackgroundColor( row , columns[i] , "#FFFCD6" );
  	         }
           }
          
          
          /*===============================================================
           * function    : gyeomJikDeptSearch
           * Description : 회계 겸직 부서 팝업
           * Parameter   : 부서코드obj , 부서명obj, submission
           * Return      : null
           **===============================================================*/
          function gyeomJikDeptSearch(reslDeptCd,reslDeptNm,reslEno, subMissionId){
          	var reslDeptCdID = WebSquare.text.BASE64URLEncoder(reslDeptCd.getID());
          	var reslDeptNmID  = WebSquare.text.BASE64URLEncoder(reslDeptNm.getID());
          	var pReslDeptCd = WebSquare.text.BASE64URLEncoder(reslDeptCd.getValue());
          	var eno = WebSquare.text.BASE64URLEncoder(reslEno.getValue());
          	if(event.type == 'click'){
          		if(typeof setNavigator != 'function') {
              		var rArr = openNewPopup("gyeomJikDeptSearchCallBack","/views/gm/hg/GM_HG_2017.xml"
 		                   , { width      : 580
 		                     , height     : 530
 		                     , resizable  : false
 		                     , scrollbars : false }
 		                   , {pReslDeptCd:pReslDeptCd,reslDeptCdID:reslDeptCdID,reslDeptNmID:reslDeptNmID, pEno:eno}) ;
          			return;
          		}
          		var rArr = openPopup("gyeomJikDeptSearchCallBack","/views/gm/hg/GM_HG_2017.xml"
		                   , { width      : 580
		                     , height     : 530
		                     , resizable  : false
		                     , scrollbars : false }
		                   , {pReslDeptCd:pReslDeptCd,reslDeptCdID:reslDeptCdID,reslDeptNmID:reslDeptNmID, pEno:eno}) ;
          		return;
          	}else{
          		  WebSquare.ModelUtil.setInstanceValue( "reqGeyomJikDept/reslDeptCd" , reslDeptCd.getValue());
          		  WebSquare.ModelUtil.setInstanceValue( "reqGeyomJikDept/reslEno" , reslEno.getValue());
          		  execSubmission(subMissionId, "reqGeyomJikDept", "resGeyomJikDept","/hg/listGeyomJikDept.do");
          		  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resGeyomJikDept/object/gyeomJikDeptList/object");
          	      rowCount = dataArr.length;
          	      if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
          		  	  var arrResult = new Array();
          		      arrResult.push(getValue("resGeyomJikDept/object/gyeomJikDeptList/object[1]/deptCd"));
          		      arrResult.push(getValue("resGeyomJikDept/object/gyeomJikDeptList/object[1]/deptNm"));
          		      gyeomJikDeptSearchCallBack(arrResult,reslDeptCd.getID(),reslDeptNm.getID());
          	      }else if(rowCount == 0){
          	    	    reslDeptCd.setValue("");
          	    	    reslDeptNm.setValue("");
          	        	showMsg("C_I041", "검색한 결과");
          	        	
          	      }else {   //데이터가 여러개인 경우 팝업띄움 
                		if(typeof setNavigator != 'function') {
                      		var rArr = openNewPopup("gyeomJikDeptSearchCallBack","/views/gm/hg/GM_HG_2017.xml"
         		                   , { width      : 580
         		                     , height     : 530
         		                     , resizable  : false
         		                     , scrollbars : false }
         		                   , {pReslDeptCd:pReslDeptCd,reslDeptCdID:reslDeptCdID,reslDeptNmID:reslDeptNmID, pEno:eno}) ;
                  			return;
                  		}
                  		var rArr = openPopup("gyeomJikDeptSearchCallBack","/views/gm/hg/GM_HG_2017.xml"
        		                   , { width      : 580
        		                     , height     : 530
        		                     , resizable  : false
        		                     , scrollbars : false }
        		                   , {pReslDeptCd:pReslDeptCd,reslDeptCdID:reslDeptCdID,reslDeptNmID:reslDeptNmID, pEno:eno}) ;
                  		return;
          		  }
          	}
          }
          /*===============================================================
           * function    : gyeomJikDeptSearchCallBack
           * Description : 
           * Parameter   : 
           * Return      :  
           **===============================================================*/
          function gyeomJikDeptSearchCallBack(arrResult, reslDeptCdID, reslDeptNmID) {
          	if (arrResult != undefined && arrResult != null) {
          		eval(reslDeptCdID).setValue( arrResult[0] );              
          		eval(reslDeptNmID).setValue( arrResult[1] );              
              }
          }
          
          /*===============================================================
           * function    : onClickCorpChgrPopUp
           * Description : 법인 예산회계의 책임코드 팝업 호출
           * Parameter   : 책임코드 오브젝트, 책임자명 오브젝트, 서브미션
           * Return      : null
           **===============================================================*/
          function onClickCorpChgrPopUp(chgrEno,chgrNm, subMissionId){
            	var chgrEnoID = WebSquare.text.BASE64URLEncoder(chgrEno.getID());
            	var chgrNmID  = WebSquare.text.BASE64URLEncoder(chgrNm.getID());
            	var eChgrEno = WebSquare.text.BASE64URLEncoder(chgrEno.getValue());
            	if(event.type != 'click') {
             		if(chgrEno.getValue().length < 1) {
             			chgrNm.setValue("");
             			return;
             		}
             	}

            	if(event.type == 'click'){
                //var eChgrEno = WebSquare.text.BASE64URLEncoder(chgrEno.getValue());
            		var rArr = openPopup("onClickChgrPopUpCallBack","/views/gm/corpys/GM_YS_1031.xml"
            		                   , { width      : 580
            		                     , height     : 530
            		                     , resizable  : false
            		                     , scrollbars : false }
            		                   , {pChgrEno:eChgrEno,chgrEnoID:chgrEnoID,chgrNmID:chgrNmID}) ;

            	}else{
            		  WebSquare.ModelUtil.setInstanceValue( "reqChgr/chgrEno" , chgrEno.getValue() );
            		  WebSquare.ModelUtil.setInstanceValue( "reqChgr/acctyCd" , getValue("respFrameAcctyBass/object/acctyBass/acctyCd") );
                    execSubmission(subMissionId, "reqChgr", "resChgrEno","/corpys/listBudgChgrCdPopup.do");

            		  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resChgrEno/object/budgetBaseList/object");
            	      rowCount = dataArr.length;

            	      if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌
            		  	  var arrResult = new Array();
            		      arrResult.push(getValue("resChgrEno/object/budgetBaseList/object[1]/chgrEno"));
            		      arrResult.push(getValue("resChgrEno/object/budgetBaseList/object[1]/chgrNm"));
            		      onClickChgrPopUpCallBack(arrResult,chgrEno.getID(),chgrNm.getID());
            	      }else if(rowCount == 0){
            	    	    chgrEno.setValue("");
            	    	    chgrNm.setValue("");
            	        	showMsg("C_I041", "검색한 결과");

            	      }else {   //데이터가 여러개인 경우 팝업띄움
            			  var rArr = openPopup("onClickChgrPopUpCallBack","/views/gm/corpys/GM_YS_1031.xml"
            	                   , { width      : 580
            	                     , height     : 530
            	                     , resizable  : false
            	                     , scrollbars : false }
            	                   , {pChgrEno:eChgrEno,chgrEnoID:chgrEnoID,chgrNmID:chgrNmID}) ;
            		  }
            	}
            }


          /*===============================================================
          * function    : onClickCorpCpcdPopUp
          * Description : 법인 예산회계의 법인카드 팝업 호출
          * Parameter   : 법인카드 오브젝트, 서브미션
          * Return      : null
          **===============================================================*/
          function onClickCorpCpcdPopUp(cardNo, cardMngNm, subMissionId){
          	var cardNoID = WebSquare.text.BASE64URLEncoder(cardNo.getID());
          	var cardMngNmID  = WebSquare.text.BASE64URLEncoder(cardMngNm.getID());
          	var eCardNo = WebSquare.text.BASE64URLEncoder(cardNo.getValue());
          	if(event.type != 'click') {
           		if(cardNo.getValue().length < 1) {
           			cardMngNm.setValue("");
           			return;
           		}
           	} 
          	if(event.type == 'click'){
          		var rArr = openPopup("onClickCpcdPopUpCallBack","/views/gm/corphg/GM_HG_1032.xml"
          		                   , { width      : 580
          		                     , height     : 530
          		                     , resizable  : false
          		                     , scrollbars : false }
          		                   , {pCardNo:eCardNo,cardNoID:cardNoID,cardMngNmID:cardMngNmID}) ;
          	}else{
          		  WebSquare.ModelUtil.setInstanceValue( "reqCard/cardNo" , cardNo.getValue() );
          		  execSubmission(subMissionId, "reqCard", "resCardNo","/corphg/searchListCpcd.do");
          	  	  
          		  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resCardNo/object/searchCpcdList/object");
          	      rowCount = dataArr.length;
                 	      
          	      if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
          		  	  var arrResult = new Array();
          		      arrResult.push(getValue("resCardNo/object/searchCpcdList/object[1]/cardNo"));
          		      arrResult.push(getValue("resCardNo/object/searchCpcdList/object[1]/cardMngNm"));
          		      onClickChgrPopUpCallBack(arrResult,cardNo.getID(),cardMngNm.getID());
          	      }else if(rowCount == 0){
          	    	  cardNo.setValue("");
          	    	  cardMngNm.setValue("");
          	          showMsg("C_I041", "검색한 결과");
          	        	
          	      }else {   //데이터가 여러개인 경우 팝업띄움 
          	    	  var rArr = openPopup("onClickCpcdPopUpCallBack","/views/gm/corphg/GM_HG_1032.xml"
          	                   , { width      : 580
          	                     , height     : 530
          	                     , resizable  : false
          	                     , scrollbars : false }
          	                   , {pCardNo:eCardNo,cardNoID:cardNoID,cardMngNmID:cardMngNmID}) ;
          		  }
          	}
          }



          /*===============================================================
           * function    : onClickCorpMngCdPopUp
           * Description : 법인 예산회계의 관리코드 팝업 호출
           * Parameter   : 관리코드/명 오브젝트, 서브미션
           *               Flag : 1(계정), 2(일반), null(전체)
           * Return      : null
           **===============================================================*/
          function onClickCorpMngCdPopUp(mngCd, mngNm, subMissionId, Flag){
          	    var mngCdID = WebSquare.text.BASE64URLEncoder(mngCd.getID());
          	    var mngNmID  = WebSquare.text.BASE64URLEncoder(mngNm.getID());
              	var eMngCd = WebSquare.text.BASE64URLEncoder(mngCd.getValue());
              	var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
              
              	if(event.type != 'click') {
               		if(mngCd.getValue().length < 1) {
               			mngNm.setValue("");
               			return;
               		}
               	} 
              	
              	if(event.type == 'click'){
              		var rArr = openPopup("onClickMngCdPopUpCallBack","/views/gm/corphg/GM_HG_1061.xml"
          		                   , { width      : 580
          		                     , height     : 530
          		                     , resizable  : false
          		                     , scrollbars : false }
          		                   , {pMngCd:eMngCd,pFlag:eFlag,mngCdID:mngCdID,mngNmID:mngNmID}) ;
              	}else{
                    WebSquare.ModelUtil.setInstanceValue( "reqMngCd/mngCd" , mngCd.getValue() );
                    execSubmission(subMissionId, "reqMngCd", "resMngCd", "/corphg/listMngCdPopup.do");
            		  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resMngCd/object/mngCdList/object");
            	      rowCount = dataArr.length;
                     	      
            	      if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
            		  	  var arrResult = new Array();
            		      arrResult.push(getValue("resMngCd/object/mngCdList/object[1]/mngCd"));
            		      arrResult.push(getValue("resMngCd/object/mngCdList/object[1]/mngNm"));
            		      onClickChgrPopUpCallBack(arrResult,mngCd.getID(),mngNm.getID());
            	      }else if(rowCount == 0){
            	    	  	mngCd.setValue("");
            	    	    mngNm.setValue("");
            	        	showMsg("C_I041", "검색한 결과");
            	        	
            	      }else {   //데이터가 여러개인 경우 팝업띄움 
            			  var rArr = openPopup("onClickMngCdPopUpCallBack","/views/gm/corphg/GM_HG_1061.xml"
            	                   , { width      : 580
            	                     , height     : 530
            	                     , resizable  : false
            	                     , scrollbars : false }
            			           , {pMngCd:eMngCd,pFlag:eFlag,mngCdID:mngCdID,mngNmID:mngNmID}) ;
            		  }
            	}
          }

           /*===============================================================
           * function    : onClickCorpDocfmSetPopUp
           * Description : 법인 예산회계의 보고서서식세트 팝업 호출
           * Parameter   : 
           * Return      : null
           **===============================================================*/
          function onClickCorpDocfmSetPopUp(docfmSetCd, docfmSetNm, acctyCd, subMissionId){
          	    var docfmSetCdID = WebSquare.text.BASE64URLEncoder(docfmSetCd.getID());
          	    var docfmSetNmID  = WebSquare.text.BASE64URLEncoder(docfmSetNm.getID());
              	var eDocfmSetCd = WebSquare.text.BASE64URLEncoder(docfmSetCd.getValue());		
              	if(event.type != 'click') {
               		if(docfmSetCd.getValue().length < 1) {
               			docfmSetNm.setValue("");
               			return;
               		}
               	} 
              	if(event.type == 'click'){
          	    	var rArr = openPopup("onClickDocfmPopUpCallBack","/views/gm/corphg/GM_HG_1114.xml"
          			                   , { width      : 580
          			                     , height     : 530
          			                     , resizable  : false
          			                     , scrollbars : false }
          			                   , {pDocfmSetCd:eDocfmSetCd,docfmSetCdID:docfmSetCdID,docfmSetNmID:docfmSetNmID, pAcctyCd:acctyCd}) ;
              	}else{
              		WebSquare.ModelUtil.setInstanceValue( "reqDocfmSet/searchDocfmSetCd" , docfmSetCd.getValue() );
              		execSubmission(subMissionId, "reqDocfmSet", "resDocfmSet","/corphg/listDocfmSetPopup.do");
            	  	  
            		    var dataArr = WebSquare.ModelUtil.findInstanceNodes("resDocfmSet/object/searchAcctyDocfmList/object");
            	        rowCount = dataArr.length;
                   	      
            	        if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
            		  	  var arrResult = new Array();
            		      arrResult.push(getValue("resDocfmSet/object/searchAcctyDocfmList/object[1]/docfmSetCd"));
            		      arrResult.push(getValue("resDocfmSet/object/searchAcctyDocfmList/object[1]/docfmSetNm"));
            		      onClickDocfmPopUpCallBack(arrResult,docfmSetCd.getID(),docfmSetNm.getID());
            	        }else if(rowCount == 0){
            	          docfmSetCd.setValue("");
            	          docfmSetNm.setValue("");
            	          showMsg("C_I041", "검색한 결과");
            	        }else {   //데이터가 여러개인 경우 팝업띄움 
            	    	  var rArr = openPopup("onClickDocfmPopUpCallBack","/views/gm/corphg/GM_HG_1114.xml"
            	                   , { width      : 580
            	                     , height     : 530
            	                     , resizable  : false
            	                     , scrollbars : false }
            	    	           , {pDocfmSetCd:eDocfmSetCd,docfmSetCdID:docfmSetCdID,docfmSetNmID:docfmSetNmID}) ;
            		    }
            	}	
          }


          /*===============================================================
           ** 기능 : 법인 예산회계의 부서코드 팝업 호출
           ** 인수 : 부서코드 오브젝트, 부서명 오브젝트, 사업코드, 조회팝업("Y") 또는 신청팝업("N"), 예산단위가 최상위단위일떄 최상위조직만 조회("1")
           ** 결과 : 
           **===============================================================*/
          function onClickCorpBudgDeptPopUp(subMissionId, budgDeptCd, budgDeptNm, busiCd, busiNm, Flag, deptFlag, popGbn){
          	 var budgDeptCdID = WebSquare.text.BASE64URLEncoder(budgDeptCd.getID());
          	 var budgDeptNmID = WebSquare.text.BASE64URLEncoder(budgDeptNm.getID());
          	 var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
          	 var eDeptFlag = WebSquare.text.BASE64URLEncoder(deptFlag);
          	 var eBudgDeptCd = WebSquare.text.BASE64URLEncoder(budgDeptCd.getValue()); 
          	 var eBusiCd ;
          	 var vBusiCd ;
          	 if(event.type != 'click') {
          		if(budgDeptCd.getValue().length < 1) {
          			budgDeptNm.setValue("");
          			return;
          		}
          	 } 
          	if(busiCd == ""){
          		 eBusiCd = WebSquare.text.BASE64URLEncoder(busiCd);
          		 vBusiCd = busiCd;
          	}else{
          		if(busiCd.getValue().length == 4 && busiNm.getValue() != ""){ //사업코드가 완전할때만 반영
          		     eBusiCd = WebSquare.text.BASE64URLEncoder(busiCd.getValue());
          		     vBusiCd = busiCd.getValue();
          		 }
          		 else{
          		  	eBusiCd = "" ;
          		  	vBusiCd = "";
          		   	busiCd.setValue("");
          		   	busiNm.setValue("");
          	    }
          	}
          	
              if(event.type == 'click'){
              	if(popGbn == '2'){
              		var rArr = openNewPopup("onClickBudgDeptPopUpCallBack", "/views/gm/corpys/GM_YS_1011.xml"
              				, { width      : 915
              			, height     : 525
              			, resizable  : false
              			, scrollbars : false }
              		, {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag, budgDeptCdID:budgDeptCdID, budgDeptNmID:budgDeptNmID}) ;
              	}else{
              		var rArr = openPopup("onClickBudgDeptPopUpCallBack", "/views/gm/corpys/GM_YS_1011.xml"
              				, { width      : 915
              			, height     : 525
              			, resizable  : false
              			, scrollbars : false }
              		, {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag, budgDeptCdID:budgDeptCdID, budgDeptNmID:budgDeptNmID}) ;
              	}
              }else{
              	
                  WebSquare.ModelUtil.setInstanceValue( "reqBudgDept/orgNm" , budgDeptCd.getValue() );
                  WebSquare.ModelUtil.setInstanceValue( "reqBudgDept/busiCd", vBusiCd );
                  execSubmission(subMissionId, "reqBudgDept", "resBudgDept","/corpys/listBudgDeptCd.do");
                  
                  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgDept/object/budgBusiCdList/object");
                  rowCount = dataArr.length;
                  if(rowCount == 1 && ((Flag == "N" && getValue("resBudgDept/object/budgBusiCdList/object[1]/useYn") == "Y") || Flag == "Y")) {    
                  	if(deptFlag == "1" && (getValue("respFrameAcctyBass/object/acctyBass/budgUnitCd") == "10" || getValue("respFrameAcctyBass/object/acctyBass/budgUnitCd") == "20")){ 
                  		if(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd") != getValue("respFrameAcctyBass/object/acctyBass/subInfoVal7")){
                  			budgDeptCd.setValue("");
                  			budgDeptNm.setValue("");
                  			showMsg("C_I084", ["예산단위가 최상위기관", "다른부서"]);    
                  			return;
                  		}
                  	}
                  	//budgDeptCd.setValue(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd"));
                  	//budgDeptNm.setValue(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgNm"));     
                  	  var arrResult = new Array();
                        arrResult.push(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd"));
                        arrResult.push(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgNm"));
                        onClickBudgDeptPopUpCallBack(arrResult,budgDeptCd.getID(),budgDeptNm.getID());
                  }else if(rowCount == 0){
                  	budgDeptCd.setValue("");
          			budgDeptNm.setValue("");
                  	showMsg("C_I041", "검색한 결과");
                  	
                  }
                  else{
                  	if(popGbn == '2'){
                  		var rArr = openNewPopup("onClickBudgDeptPopUpCallBack", "/views/gm/corpys/GM_YS_1011.xml"
                  				, { width      : 915
                  			, height     : 525
                  			, resizable  : false
                  			, scrollbars : false }
                  		, {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag, budgDeptCdID:budgDeptCdID, budgDeptNmID:budgDeptNmID}) ;
                  	}else{
                  		var rArr = openPopup("onClickBudgDeptPopUpCallBack", "/views/gm/corpys/GM_YS_1011.xml"
                  				, { width      : 915
                  			, height     : 525
                  			, resizable  : false
                  			, scrollbars : false }
                  		, {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag, budgDeptCdID:budgDeptCdID, budgDeptNmID:budgDeptNmID}) ;
                  	}
                  }   	
              }
          }


          /*===============================================================
             ** 기능 : 법인 예산회계의 사업코드 팝업 호출(컴포넌트)
             ** 인수 : 서브미션,  사업코드 오브젝트, 사업명 오브젝트, 부서코드 오브젝트, 부서명 오브젝트, (검색시(Y), 신청시(N)), popGbn(팝업구분:null,"1"-UI에서 팝업호출, "2"-팝업에서 호출)
             *** 결과 : 이주원 추가 로직필요 
             **===============================================================*/
          function onClickCorpBusiPopUp(subMissionId, busiCd, busiNm, budgDeptCd, budgDeptNm, Flag, popGbn){
          	  var busiCdID = WebSquare.text.BASE64URLEncoder(busiCd.getID());
          	  var busiNmID = WebSquare.text.BASE64URLEncoder(busiNm.getID());
                var eBusiCd = WebSquare.text.BASE64URLEncoder(busiCd.getValue());
                var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
                var eBudgDeptCd;
                var vBudgDeptCd
                if(event.type != 'click') {
            		if(busiCd.getValue().length < 1) {
            			busiNm.setValue("");
            			return;
            		}
            	 } 
                if(budgDeptCd == ""){
              	     eBudgDeptCd = WebSquare.text.BASE64URLEncoder(budgDeptCd);
              	     vBudgDeptCd = budgDeptCd;
                }else{
              	  if(budgDeptCd.getValue().length == 7 && budgDeptNm.getValue() != ""){ //부서코드가 완전할때만 반영
          	    	  eBudgDeptCd = WebSquare.text.BASE64URLEncoder(budgDeptCd.getValue());
          	    	  vBudgDeptCd = budgDeptCd.getValue();
          	      }else{
          	    	 eBudgDeptCd = "" ;
          	    	 vBudgDeptCd = ""
          	    	 budgDeptCd.setValue("");
          	    	 budgDeptNm.setValue("");
          	      }
                }
                if(event.type == 'click'){
              	  if (popGbn == "2") {
              		  openNewPopup("onClickBusiPopUpCallBack", "/views/gm/corpys/GM_YS_1041.xml"
                                , { width      : 580
                                  , height     : 565
                                  , resizable  : false
                                  , scrollbars : false }
                                , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, busiCdID:busiCdID, busiNmID:busiNmID}) ;
              	  } else {
          	          var rArr = openPopup("onClickBusiPopUpCallBack", "/views/gm/corpys/GM_YS_1041.xml"
          	                         , { width      : 580
          	                           , height     : 565
          	                           , resizable  : false
          	                           , scrollbars : false }
          	                         , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, busiCdID:busiCdID, busiNmID:busiNmID}) ;
                    }
          	      
//          	      if (rArr != undefined && rArr != null) {
//          	     	 busiCd.setValue( rArr[0] );
//          	     	 busiNm.setValue( rArr[1] );
//          	      }
                }else{
              	 
              	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/busiCd" , busiCd.getValue() );
              	//  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/acctyCd" , getValue("respFrameAcctyBass/object/acctyBass/acctyCd") );
              	  
              	  if(vBudgDeptCd.length == '0')  //부서코드가 없으면 사업테이블에서 조회/ 있으면 예산부서테이블에서 조회
                    {   
              		  execSubmission(subMissionId, "reqBudgBusiCd", "resBudgBusiCd","/corpys/selBudgBusiCd.do");
                    }else{
                  	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/budgApplDeptCd" , vBudgDeptCd );
                  	  execSubmission(subMissionId, "reqBudgBusiCd", "resBudgBusiCd","/corpys/selBudgDeptBusiCd.do");
                    }
              	  
              	  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgBusiCd/object/selbudgBusiCd/object");
                    rowCount = dataArr.length;
                    if(rowCount == 1 && ((Flag == "N" && getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/useYn") == "Y") || Flag == "Y")){ //데이터가 하나면 바로 뿌려줌 
                  	 
                  	 // busiCd.setValue(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiCd"));
                  	 // busiNm.setValue(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiNm"));  
                  	  var arrResult = new Array();
                        arrResult.push(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiCd"));
                        arrResult.push(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiNm"));
                  	  onClickBusiPopUpCallBack(arrResult,busiCd.getID(),busiNm.getID());
                  	  
                    }else if(rowCount == 0){
                  	  busiCd.setValue("");
                  	  busiNm.setValue("");
                  	  showMsg("C_I041", "검색한 결과");
                  	
                    }else {   //데이터가 여러개인 경우 팝업띄움 
                  	  if (popGbn == "2") {
                  		  openNewPopup("onClickBusiPopUpCallBack", "/views/gm/corpys/GM_YS_1041.xml"
                                    , { width      : 580
                                      , height     : 565
                                      , resizable  : false
                                      , scrollbars : false }
                                    , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, busiCdID:busiCdID, busiNmID:busiNmID}) ;
                  	  } else {
                  	      var rArr = openPopup("onClickBusiPopUpCallBack", "/views/gm/corpys/GM_YS_1041.xml"
                                    , { width      : 580
                                    , height     : 565
                                    , resizable  : false
                                    , scrollbars : false }
                                    , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, busiCdID:busiCdID, busiNmID:busiNmID}) ;
                  	  }
             
                    }
                }
            }
            
            
          /*===============================================================
           ** 기능 : 법인 예산회계의 그리드용 부서코드 팝업 호출 (그리드)
           ** 인수 : 부서코드 오브젝트, 부서명 오브젝트, 서브미션, 사업코드 
           ** 결과 : 
           **===============================================================*/
          function onClickCorpBudgDeptGridPopUp(subMissionId, grid, row, col, busiCdCol, busiNmCol, Flag, deptFlag){
              var eBudgDeptCd =WebSquare.text.BASE64URLEncoder(grid.getCellData(row, col)); 
              var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
              var eDeptFlag = WebSquare.text.BASE64URLEncoder(deptFlag);
              var eBusiCd ;
              var vBusiCd ;
              
          	 if(event.type != 'click') {
          		if(grid.getCellData(row, col).length < 1) {
          			grid.setCellData(row, col+2, "");
          			return;
          		}
          	 } 
          	 
          	if(busiCdCol == ""){
          		 eBusiCd = "";
          		 vBusiCd = "";
          	}else{
          		if(grid.getCellData(row, busiCdCol).length == 4 && grid.getCellData(row, busiNmCol) != ""){ //사업코드가 완전할때만 반영
          		     eBusiCd = WebSquare.text.BASE64URLEncoder(grid.getCellData(row, busiCdCol));
          		     vBusiCd = grid.getCellData(row, busiCdCol);
          		 }
          		 else{
          		    eBusiCd = "" ;
          		  	vBusiCd = "";
          		  	grid.setCellData(row, busiCdCol, "");
          	    	grid.setCellData(row, busiNmCol, "");
          	    }
          	}
              
          	if(event.type == 'click'){
          	    var rArr = openPopup("/views/gm/corpys/GM_YS_1011.xml"
          	                       , { width      : 915
          	                         , height     : 525
          	                         , resizable  : false
          	                         , scrollbars : false }
          	                       , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag}) ;
          	    
          	    if (rArr != undefined && rArr != null) {
          	    	eval(grid).setCellData( row , col , rArr[0] );
          	    	eval(grid).setCellData( row , col+2 , rArr[1] );
          	    	
          	    }
              }else{
              	 WebSquare.ModelUtil.setInstanceValue( "reqBudgDept/orgNm" , grid.getCellData(row, col) );
                   WebSquare.ModelUtil.setInstanceValue( "reqBudgDept/busiCd", vBusiCd );
                   execSubmission(subMissionId, "reqBudgDept", "resBudgDept","/corpys/listBudgDeptCd.do");
                   
                   var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgDept/object/budgBusiCdList/object");
                   rowCount = dataArr.length;
                   
                   if(rowCount == 1 && ((Flag == "N" && getValue("resBudgDept/object/budgBusiCdList/object[1]/useYn") == "Y") || Flag == "Y")) {    
                   	if(deptFlag == "1" && (getValue("respFrameAcctyBass/object/acctyBass/budgUnitCd") == "10" || getValue("respFrameAcctyBass/object/acctyBass/budgUnitCd") == "20")){ 
                   		if(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd") != getValue("respFrameAcctyBass/object/acctyBass/subInfoVal7")){
                   			 eval(grid).setCellData(row, col,"");
                   			 eval(grid).setCellData(row, col+2,"");
                   			return;
                   		}
                   	}
                   	eval(grid).setCellData(row, col, getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd"));
                   	eval(grid).setCellData(row, col+2, getValue("resBudgDept/object/budgBusiCdList/object[1]/orgNm"));        	   	
                   }else{
                   	var rArr = openPopup("/views/gm/corpys/GM_YS_1011.xml"
                               , { width      : 915
                                 , height     : 525
                                 , resizable  : false
                                 , scrollbars : false }
                               , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag}) ;
            
           			if (rArr != undefined && rArr != null) {
           				eval(grid).setCellData( row , col , rArr[0] );
           		    	eval(grid).setCellData( row , col+2 , rArr[1] );
           			}
                   }
              }
          }


          /*===============================================================
           ** 기능 : 법인 예산회계의 사업코드 팝업 호출(그리드)
           ** 인수 : 서브미션, 그리드명, 사업코드 오브젝트, 사업명 오브젝트, 부서컬럼, 부서명컬럼, 조회조건여부
           ** 결과 : 
           **===============================================================*/
          function onClickCorpBusiGridPopUp(subMissionId, grid, row, col, deptCdCol, deptNmCol, Flag){
              var eBusiCd = WebSquare.text.BASE64URLEncoder(grid.getCellData(row, col)); 
              var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
              var  eBudgDeptCd;
              var  vBudgDeptCd;
              
              gmSearchTypeFlag = "grid";
          	  gmSearchGridRow = row;
              gmSearchGridCol = col;
          	  gmSearchGridObjID = grid.getID();  
                 
              if(deptCdCol == ""){
          	     eBudgDeptCd = "";
          	     vBudgDeptCd = "";
              }else{
          	     if(grid.getCellData(row, deptCdCol).length == 7 && grid.getCellData(row, deptNmCol) != ""){ //부서코드가 완전할때만 반영
          	    	  eBudgDeptCd = WebSquare.text.BASE64URLEncoder(grid.getCellData(row, deptCdCol));
          	    	  vBudgDeptCd = grid.getCellData(row, deptCdCol);
          	      }else{
          	    	 eBudgDeptCd = "" ;
          	    	 vBudgDeptCd = ""
          	         grid.setCellData(row, deptCdCol, "");
          	    	 grid.setCellData(row, deptNmCol, "");
          	      }
              }
             
              if(event.type == 'click'){
            	   var rArr = openPopup("onClickBusiGridPopUpCallBack","/views/gm/corpys/GM_YS_1041.xml"
                          , { width      : 580
                            , height     : 565
                            , resizable  : false
                            , scrollbars : false }
                          , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag}) ;
          			if (rArr != undefined && rArr != null) {
          				  eval(grid).setCellData( row , col , rArr[0] );
          			      eval(grid).setCellData( row , col+2 , rArr[1] );
          			}
              }else{
            	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/busiCd" , grid.getCellData(row, col));
            	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/acctyCd" , getValue("respFrameAcctyBass/object/acctyBass/acctyCd") );
            	  
            	  if(vBudgDeptCd.length == '0')  //부서코드가 없으면 사업테이블에서 조회/ 있으면 예산부서테이블에서 조회
                  {   
            		  execSubmission(subMissionId, "reqBudgBusiCd", "resBudgBusiCd","/corpys/selBudgBusiCd.do");
                  }else{
                	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/budgApplDeptCd" , vBudgDeptCd );
                	  execSubmission(subMissionId, "reqBudgBusiCd", "resBudgBusiCd","/corpys/selBudgDeptBusiCd.do");
                  }
            	  
            	  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgBusiCd/object/selbudgBusiCd/object");
                  rowCount = dataArr.length; 
            	  
                  if(rowCount == 1 && ((Flag == "N" && getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/useYn") == "Y") || Flag == "Y")){ //데이터가 하나면 바로 뿌려줌 
                	  eval(grid).setCellData(row, col, getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiCd"));
                	  eval(grid).setCellData(row, col+2, getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiNm"));  
                  }else {   //데이터가 여러개인 경우 팝업띄움 
                	  var rArr = openPopup("onClickBusiGridPopUpCallBack","/views/gm/corpys/GM_YS_1041.xml"
                              , { width      : 580
                                , height     : 565
                                , resizable  : false
                                , scrollbars : false }
                	  , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag}) ;
           
                	  	if (rArr != undefined && rArr != null) {
                	  		 eval(grid).setCellData( row , col , rArr[0] );
           			         eval(grid).setCellData( row , col+2 , rArr[1] );
                       }
                  }
              }
          }


          /*===============================================================
           * function    : onClickCorpEtcIncrPopUp
           * Description : 법인 기타소득자  팝업 호출
           * Parameter   :   
           * Return      : 기타소득자 정보를 Doc로 반환
           *               여러 자료를 사용 할 수 있으므로 doc로 return 처리 함
           *               return 받아 WebSquare.xml.getValue 를 이용하여 참조 필드의 값을 참조
           **===============================================================*/
          function onClickCorpEtcIncrPopUp(incrNo, incrNm, sumissionID){
          	//    if (event.type == "click") {
          		    openPopup("etcIncrCallBack", "/views/gm/corphg/GM_HG_2112.xml"
          		             , { width      : 700
          		             , height     : 450
          		             , resizable  : false
          		             , scrollbars : false } 
          		              , {pIncrNoID : WebSquare.text.BASE64URLEncoder(incrNo.getID()) 
          		             ,  pIncrNmID : WebSquare.text.BASE64URLEncoder(incrNm.getID())
          		             ,  pIncrNo   : WebSquare.text.BASE64URLEncoder(incrNo.getValue()) } ) ;
              //    }
          }


          /*===============================================================
           ** 기능 : 법인 예산회계의 계정코드 팝업 호출(그리드)
           ** 인수 : 
           ** 결과 : 
           **===============================================================*/
          function onClickCorpAcntGridPopUp(acntCd, acntNm, acctyYear, acctyCd, grid, rowNum, cdCol, nmCol){
          	var rArr = openPopup("/views/gm/corphg/GM_HG_1072.xml"
          	                       , { width      : 700
          	                         , height     : 500
          	                         , resizable  : false
          	                         , scrollbars : false }
          	                       , {pAacctyYear:acctyYear, pAcctyCd:acctyCd}) ;
              
          	    if (rArr != undefined && rArr != null) {
          	  	    eval(grid).setCellData( rowNum , cdCol , WebSquare.xml.getValue( rArr , "acntCd"  ) );
          	  	    eval(grid).setCellData( rowNum , nmCol , WebSquare.xml.getValue( rArr , "acntNm"  ) );
          	    }
          	return rArr;
          }      


          /*===============================================================
           * function    : onClickCorpAcctPopUp
           * Description : 법인 예산회계의 계좌정보 팝업 호출
           * Parameter   : 계좌번호 object, 계좌명 object
           * Return      : null
           **===============================================================*/
          function onClickCorpAcctPopUp(acno, acctNm){
              var vAcno = WebSquare.text.BASE64URLEncoder(acno.getValue());
          		var rArr = openPopup("onClickAcctPopUpCallBack", "/views/gm/corphg/GM_HG_1051.xml"
          		                   , { width      : 580
          		                     , height     : 530
          		                     , resizable  : false
          		                     , scrollbars : false }
          		                   , { pAcno:vAcno
          		                	 , pAcnoId:WebSquare.text.BASE64URLEncoder(acno.getID())
          		                	 , pAcctNmId:WebSquare.text.BASE64URLEncoder(acctNm.getID())
          		                     }) ;
          }


          /*===============================================================
           * function    : onClickCorpItmgCdPopup
           * Description : 법인 관리항목 팝업 호출
           * Parameter   : itmgCd(관리항목코드 object), itmgNm(관리항목명 object), mngCd(관리코드 값)
           * Return      : 
           **===============================================================*/
          function onClickCorpItmgCdPopup(itmgCd, itmgNm, mngCd, vAcctyCd, sumissionID) {
      	    if (mngCd == "") {

      	        showMsg("C_I066", ["관리항목 계정","관리항목"]);
      	        return;
      	     }
      	 	if(typeof setNavigator != 'function') {
      	 		openNewPopup("itmgCdCallBack", "/views/gm/corphg/GM_HG_2113.xml"
      	 	               , { width      : 500
      	             , height     : 520
      	             , resizable  : false
      	             , scrollbars : false }
      	             , {pMngCd : WebSquare.text.BASE64URLEncoder(mngCd)
      	             ,  pItmgCd : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
      	             ,  pItmgCdID : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
      	             ,  pItmgNmID : WebSquare.text.BASE64URLEncoder(itmgNm.getID())
      	             ,  pAcctyCd : WebSquare.text.BASE64URLEncoder(vAcctyCd)}) ;
      	 		return;
      	 	}
      	     openPopup("itmgCdCallBack", "/views/gm/corphg/GM_HG_2113.xml"
      	                , { width      : 500
      	                , height     : 520
      	                , resizable  : false
      	                , scrollbars : false }
      	                , {pMngCd : WebSquare.text.BASE64URLEncoder(mngCd)
      	                ,  pItmgCd : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
      	                ,  pItmgCdID : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
      	                ,  pItmgNmID : WebSquare.text.BASE64URLEncoder(itmgNm.getID())
                        ,  pAcctyCd : WebSquare.text.BASE64URLEncoder(vAcctyCd)}) ;
        }



          /*===============================================================
           * function    : onClickCorpItmgCdUserPopup
           * Description : 법인 관리항목 팝업 호출 (관리자용)
           * Parameter   : itmgCd(관리항목코드 object), itmgNm(관리항목명 object), mngCd(관리코드 값)
           * Return      : 
           **===============================================================*/
          function onClickCorpItmgCdUserPopup(acctyYear,acctyCd, acntCd, busiCd, deptCd, mngCd,  itmgCd, itmgNm, sumissionID) {
              if (mngCd == "") {

                 showMsg("C_I066", ["관리항목 계정","관리항목"]);                    
                 return;
              }

              if (event.type=="click") {
				if(typeof setNavigator != 'function') {
                 openNewPopup("itmgCdCallBack", "/views/gm/corphg/GM_HG_2115.xml"
                         , { width      : 500
                         , height     : 520
                         , resizable  : false
                         , scrollbars : false }
                         , {
                      	  pAcctyYear :  WebSquare.text.BASE64URLEncoder(acctyYear)
                         ,  pAcctyCd   :  WebSquare.text.BASE64URLEncoder(acctyCd)
                         ,  pAcntCd    :  WebSquare.text.BASE64URLEncoder(acntCd)
                         ,  pBusiCd    :  WebSquare.text.BASE64URLEncoder(busiCd)
                         ,  pDeptCd    :  WebSquare.text.BASE64URLEncoder(deptCd)
                         ,  pMngCd     : WebSquare.text.BASE64URLEncoder(mngCd)
                         ,  pItmgCd    : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
                         ,  pItmgCdID  : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
                         ,  pItmgNmID  : WebSquare.text.BASE64URLEncoder(itmgNm.getID())   }) ;
					return;
              }
             openPopup("itmgCdCallBack", "/views/gm/corphg/GM_HG_2115.xml"
               , { width      : 500
               , height     : 520
               , resizable  : false
               , scrollbars : false } 
               , {
            	  pAcctyYear :  WebSquare.text.BASE64URLEncoder(acctyYear)
               ,  pAcctyCd   :  WebSquare.text.BASE64URLEncoder(acctyCd)
               ,  pAcntCd    :  WebSquare.text.BASE64URLEncoder(acntCd)
               ,  pBusiCd    :  WebSquare.text.BASE64URLEncoder(busiCd)
               ,  pDeptCd    :  WebSquare.text.BASE64URLEncoder(deptCd)               
               ,  pMngCd     : WebSquare.text.BASE64URLEncoder(mngCd)
               ,  pItmgCd    : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
               ,  pItmgCdID  : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
               ,  pItmgNmID  : WebSquare.text.BASE64URLEncoder(itmgNm.getID())   }) ;
              } else {
              	//setValue( "reqItmg/acctyYear" , acctyYear);
                  setValue( "reqItmg/acctyCd"   , acctyCd  );
                  setValue( "reqItmg/acntCd"    , acntCd   );
                  //setValue( "reqItmg/busiCd"    , busiCd   );
                  setValue( "reqItmg/deptCd"    , deptCd   );
                  setValue( "reqItmg/mngCd"     , mngCd    );
                  setValue( "reqItmg/itmgCd"    , itmgCd.getValue()   );

                  execSubmission(sumissionID, "reqItmg", "respItmg", "/corphg/listCracc.do");

                  var retArr = WebSquare.ModelUtil.findInstanceNodes( "respItmg/object/craccList/object" );

                  if (retArr.length != 1)
                  	openPopup("itmgCdCallBack", "/views/gm/corphg/GM_HG_2115.xml"
                              , { width      : 500
                              , height     : 520
                              , resizable  : false
                              , scrollbars : false }
                              , {
                           	  pAcctyYear :  WebSquare.text.BASE64URLEncoder(acctyYear)
                              ,  pAcctyCd   :  WebSquare.text.BASE64URLEncoder(acctyCd)
                              ,  pAcntCd    :  WebSquare.text.BASE64URLEncoder(acntCd)
                              ,  pBusiCd    :  WebSquare.text.BASE64URLEncoder(busiCd)
                              ,  pDeptCd    :  WebSquare.text.BASE64URLEncoder(deptCd)
                              ,  pMngCd     : WebSquare.text.BASE64URLEncoder(mngCd)
                              ,  pItmgCd    : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
                              ,  pItmgCdID  : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
                              ,  pItmgNmID  : WebSquare.text.BASE64URLEncoder(itmgNm.getID())   }) ;
                  else {
                      itmgCd.setValue(getValue("respItmg/object/craccList/object[1]/itmgCd"));
                      itmgNm.setValue(getValue("respItmg/object/craccList/object[1]/itmgNm"));

                      if (typeof setItmgCdInfo == 'function') {
                		   setItmgCdInfo("");
                	    }
                  }
              }
          }


          /*============================================================================
           ** 기능  : 법인 사업자(거래처) 코드 팝업, 키 입력
           ** 인수  : bizno(사업자코드 object), mtltyNm(사업자명 object), submissionId(서브미션id)
           ** 리턴  : 사업자 코드, 사업자 명 해당 object에 set 및 사업자 정보 doc 로 리턴(setBiznoInfo(retDoc) 함수를 UI에 생성 후 코딩
          ============================================================================*/
          function onClickCorpBiznoPopUp(bizno, mtltyNm, submissionId) {
              if(event.type == 'click'){
                 openPopup("biznoPopCallback", "/views/gm/corphg/GM_HG_2114.xml",
                                      { width      : 700
                                      , height     : 550
                                      , resizable  : false
                                      , scrollbars : false } 
                                    , {pBizno:      WebSquare.text.BASE64URLEncoder(bizno.getValue())
                                    ,  pBiznoID :   WebSquare.text.BASE64URLEncoder(bizno.getID())
                                    ,  pMtltyNmID : WebSquare.text.BASE64URLEncoder(mtltyNm.getID()) }) ;  
               } else {
                  setValue("reqVndr/vndrCd", "" );
                  setValue("reqVndr/bizno",  bizno.getValue() );
                  execSubmission(submissionId, "reqVndr", "respVndr", "/corphg/listHgVndrBas.do");
                  
                  var dataArr = WebSquare.ModelUtil.findInstanceNodes( "respVndr/object/vndrBasList/object" );

                  if (dataArr.length != 1) {
                     openPopup("setBiznoInfo", "/views/gm/corphg/GM_HG_2114.xml",
                                      { width      : 700
                                      , height     : 550
                                      , resizable  : false
                                      , scrollbars : false }
                                      , {pBizno:    WebSquare.text.BASE64URLEncoder(bizno.getValue())
                                      ,  pBiznoID :   WebSquare.text.BASE64URLEncoder(bizno.getID())
                                      ,  pMtltyNmID : WebSquare.text.BASE64URLEncoder(mtltyNm.getID()) } ) ;
                  } else {
                     bizno.setValue( getValue("respVndr/object/vndrBasList/object/bizno") );
                     mtltyNm.setValue( getValue("respVndr/object/vndrBasList/object/vndrNm") );
                     
                     var doc = WebSquare.ModelUtil.findInstanceNode( "respVndr/object/vndrBasList/object" );
                     try {setBiznoInfo(doc); }
                     catch(e) {}
                  }
               }                                          
          }


          function acntCdCorpOpenPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, popGbn){
          	if (selectGbn == null) selectGbn = " ";
          	if (selectValue == null) selectValue = " ";
          	if (selectGbn1 == null) selectGbn1 = " ";
          	if (selectValue1 == null) selectValue1 = " ";
          	if (popGbn == "2") {
          	    openNewPopup("acntCdPopUpCallBack", "/views/gm/corphg/GM_HG_1072.xml"
                      , { width      : 800
                        , height     : 530
                        , resizable  : false
                        , scrollbars : false } 
                        , {pAacctyYear:    WebSquare.text.BASE64URLEncoder(acctyYear)
                        ,  pAcctyCd:       WebSquare.text.BASE64URLEncoder(acctyCd)
                        ,  pSelectGbn :    WebSquare.text.BASE64URLEncoder(selectGbn)
                        ,  pSelectValue :  WebSquare.text.BASE64URLEncoder(selectValue)
                        ,  pSelectGbn1 :   WebSquare.text.BASE64URLEncoder(selectGbn1)
                        ,  pSelectValue1 : WebSquare.text.BASE64URLEncoder(selectValue1)
                        ,  pAcntCd :       WebSquare.text.BASE64URLEncoder(acntCd.getValue())
                        ,  pAcntCdID :     WebSquare.text.BASE64URLEncoder(acntCd.getID())
                        ,  pAcntNmID :     WebSquare.text.BASE64URLEncoder(acntNm.getID())     }) ;
          	} else {
          		openPopup("acntCdPopUpCallBack", "/views/gm/corphg/GM_HG_1072.xml"
          	            , { width      : 800
          	              , height     : 530
          	              , resizable  : false
          	              , scrollbars : false } 
          	              , {pAacctyYear:    WebSquare.text.BASE64URLEncoder(acctyYear)
          	              ,  pAcctyCd:       WebSquare.text.BASE64URLEncoder(acctyCd)
          	              ,  pSelectGbn :    WebSquare.text.BASE64URLEncoder(selectGbn)
          	              ,  pSelectValue :  WebSquare.text.BASE64URLEncoder(selectValue)
          	              ,  pSelectGbn1 :   WebSquare.text.BASE64URLEncoder(selectGbn1)
          	              ,  pSelectValue1 : WebSquare.text.BASE64URLEncoder(selectValue1)
          	              ,  pAcntCd :       WebSquare.text.BASE64URLEncoder(acntCd.getValue())
          	              ,  pAcntCdID :     WebSquare.text.BASE64URLEncoder(acntCd.getID())
          	              ,  pAcntNmID :     WebSquare.text.BASE64URLEncoder(acntNm.getID())     }) ;
          	}
          }


          /*===============================================================
           * function    : onChangeCorpEtcIncr
           * Description : 법인 기타소득자 조회
           * Parameter   : subId(서브미션 id), etcIncrNo(기타소득자 입력 object)
           * Return      : 
           **===============================================================*/
          function onChangeCorpEtcIncr(subId, etcIncrNo, etcIncrNm) {
              if (etcIncrNo.getValue() == "") return;
              
              setValue( "reqEtc/etcIncrNo" ,  etcIncrNo.getValue());
              
              execSubmission(subId, "reqEtc", "respEtc", "/corphg/listBusiEtcIncrBass.do");
              
              var retArr = WebSquare.ModelUtil.findInstanceNodes( "respEtc/object/busiEtcIncrBassList/object" );

              if (retArr.length != 1) 
              	var retDoc = onClickCorpEtcIncrPopUp(etcIncrNo, etcIncrNm, subId);
              else {    
              	var retDoc = getInstanceNode("respEtc/object/busiEtcIncrBassList/object");
              }
              
              return retDoc;
          }

          /*===============================================================
           * function    : searchCorpAcct
           * Description : 법인 예산회계의 계좌정보를 조회
           * Parameter   : 계좌번호 object, 계좌명 object, 서브미션
           * Return      : null
           **===============================================================*/
          function searchCorpAcct(acno, acctNm, subMissionId){
          	 var vAcno = acno.getValue();
          	     
          	 if(vAcno.length<2){
          		 showMsg("C_I054", "계좌번호/명을 두자리이상");
          	     return;
          	 }
          	     
          	 acno.blur();
          	     
          	 WebSquare.ModelUtil.setInstanceValue( "reqAcct/pAcno" , vAcno );
          	 execSubmission(subMissionId, "reqAcct", "resAcct","/corphg/listAcct.do");
          	 
          	 var retArr = WebSquare.ModelUtil.findInstanceNodes( "resAcct/object/acctList/object" );
          	     
          	 if( retArr.length == 1){
          		 acno.setValue(WebSquare.xml.getValue( retArr[0] , "acno"));
          		 acctNm.setValue(WebSquare.xml.getValue( retArr[0] , "acctNm"));
          		 
          		 return retArr[0];
              }
              else{
              	return onClickCorpAcctPopUp(acno, acctNm); 
              }
          }


          /*===============================================================
           * function    : onChangeCorpItmgCdPopup
           * Description : 법인 관리항목 팝업 호출
           * Parameter   : itmgCd(관리항목코드 object), itmgNm(관리항목명 object), mngCd(관리코드 값), subId(서브미션 id)
           * Return      : 
           **===============================================================*/
          function onChangeCorpItmgCdPopup(itmgCd, itmgNm, mngCd, vAcctyCd, subId) {
              if (mngCd == "") {

                 showMsg("C_I066", ["관리항목 계정","관리항목"]);    
                 return;
              }

              if (itmgCd.getValue() == "") return;

              setValue( "reqItmg/mngCd" ,  mngCd);
              setValue( "reqItmg/acctyCd" ,  vAcctyCd);
              setValue( "reqItmg/itmgCd" , itmgCd.getValue());
              setValue( "reqItmg/flag"  , "N");

              execSubmission(subId, "reqItmg", "respItmg", "/corphg/listItmgCd.do");

              var retArr = WebSquare.ModelUtil.findInstanceNodes( "respItmg/object/itmgCdList/object" );

              if (retArr.length != 1)
              	onClickCorpItmgCdPopup(itmgCd, itmgNm, mngCd, vAcctyCd);
              else {
                  itmgCd.setValue(getValue("respItmg/object/itmgCdList/object[1]/itmgCd"));
                  itmgNm.setValue(getValue("respItmg/object/itmgCdList/object[1]/itmgNm"));

                  if (typeof setItmgCdInfo == 'function') {
           		   setItmgCdInfo("");
           	   	  }
              }
          }
          
          /*===============================================================
           * function    : onClickAcntCdPopUp
           * Description : 계정코드 팝업 호출
           * Parameter   : 계정코드/명 오브젝트
           *               회계년도/회곅구분코드 Param
           *               선택 구분 - "1" : 전표입력여부 (전표입력여부가 'Y'인 것만 선택 가능)
           *                       "2" : 계정분류코드 ( 코드가 10,20,30 인 것만 선택 가능)
           *                       "3" : 계정분류코드 ( 코드가 40,50,50 인 것만 선택 가능)
           *                       "4" : 계정레벨 ( 계정레벨이 selectValue 인 것만 선택 가능)
           *                       "5" : 계정례벨 ( 계정 레벨이 SelectValue 보다 하위 인것만 선택 가능 )
          						 "6" : 계정례벨 ( 계정 레벨이 SelectValue 보다 상위 인것만 선택 가능 )
           *                       "7" : 예산 계정여부 값에 따라   (selectValue : Y,N )  - 에산 계정일때만 사용
           *                       "8" : 관리코드 있는것만 조회
           *                       "9" : 계정분류코드 (10,20,30,60,80)
           *                       "10" : 해당 관리코드만 선택 가능                       
           *               선택 값 : 선택 구분이 "4", "5" 일 경우만 사용 ( 계층 레벨 값)  
           *               선택 구분1  ( 조건이 2개일 경우 )
           *               선택 값1   ( 조건이 2개일 경우 )
           *               subMissionId : keyUp 이벤트에서 호출시 사용할 sumission ID
           *               popGbn : 팝업 구분  (null, "1" : UI에서 팝업 호출, "2" : 팝업에서 호출)
           * Return      : 계정정보를 Doc로 반환
           *               기본적으로 parma의 acntCd, acntNm에 값을 넣고 계정코드와 명 이외의 값을 참조할 경우
           *               return 받아 WebSquare.xml.getValue 를 이용하여 참조 필드의 값을 참조
           *               화면에서 계정코드의 정보를 활용할 경우 setAcntCdInfo(retDoc) 함수를 만들어 retDoc안의 내용을 가지고 처리
           **===============================================================*/
          function onClickCorpAcntCdPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, subMissionId, popGbn){
          	if(event.type == 'click'){
          		acntCdCorpOpenPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, popGbn);
          	} else {
          		setValue("reqAcnt/acntCd", acntCd.getValue());
                  setValue("reqAcnt/acctyCd", acctyCd);
                  setValue("reqAcnt/acctyYear", acctyYear);
                  
                  execSubmission(subMissionId, "reqAcnt", "respAcnt", "/corphg/listAcntBass.do");
                  
                  var dataArr = WebSquare.ModelUtil.findInstanceNodes( "respAcnt/object/acntList/object" );
                  
                  if (dataArr.length != 1) {
                	  acntCdCorpOpenPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, popGbn); 
                  } else {
                  	 // 해당 조회 값에 따라 선택 유무 처리
                     var cnt = 1;  
                     if (selectGbn != "" || selectValue != "" || selectGbn1 != "" || selectValue1 != "")  {
                       if (selectGbn == "1" || selectGbn1 == "1") {                 // 전표 입력 가능 여부     	
                           if (getValue("respAcnt/object/acntList/object/slipInptYn") != "Y" ) cnt--;
                       } 
                       if (selectGbn == "2" || selectGbn1 == "2") {          // 계정분류코드 (10,20,30)   
                           if (getValue("respAcnt/object/acntList/object/acntClsCd") != "10" &&
                  		     getValue("respAcnt/object/acntList/object/acntClsCd") != "20" &&
                  		     getValue("respAcnt/object/acntList/object/acntClsCd") != "30" ) cnt--;
                       } 
                       if (selectGbn == "3" || selectGbn1 == "3") {          // 계정분류코드(40,50,60)
                  	     if (getValue("respAcnt/object/acntList/object/acntClsCd") != "40" &&
                     		     getValue("respAcnt/object/acntList/object/acntClsCd") != "50" &&
                     		     getValue("respAcnt/object/acntList/object/acntClsCd") != "60" ) cnt--;
                       } 
                       if (selectGbn == "4" || selectGbn1 == "4") {          // selectValue에 있는 레벨과 동일한거
                  	     if (selectGbn  == "4" && getValue("respAcnt/object/acntList/object/acntLevel") != selectValue ) cnt--;
                  	     if (selectGbn1 == "4" && getValue("respAcnt/object/acntList/object/acntLevel") != selectValue1 ) cnt--;
                       }
                       if (selectGbn == "5" || selectGbn1 == "5") {          // selectValue에 있는 레델의 이하 등급만 선택 가능
                  	     if (selectGbn  == "5" && getValue("respAcnt/object/acntList/object/acntLevel") < selectValue ) cnt--;
                  	     if (selectGbn1 == "5" && getValue("respAcnt/object/acntList/object/acntLevel") < selectValue1 ) cnt--;
                       }
                       if (selectGbn == "6" || selectGbn1 == "6") {          // selectValue에 있는 레델의 이하 등급만 선택 가능
                  	     if (selectGbn  == "6" && getValue("respAcnt/object/acntList/object/acntLevel") > selectValue ) cnt--;
                  	     if (selectGbn1 == "6" && getValue("respAcnt/object/acntList/object/acntLevel") > selectValue1 ) cnt--;
                       }
                       if (selectGbn == "7" || selectGbn1 == "7") {          // 예산 계정
                  	     if (selectGbn  == "7" && getValue("respAcnt/object/acntList/object/budgAcntYn") != selectValue ) cnt--;
                  	     if (selectGbn1 == "7" && getValue("respAcnt/object/acntList/object/budgAcntYn") != selectValue1 ) cnt--;
                       }
                       if (selectGbn == "8" || selectGbn1 == "8") {          // 관리코드 있는것만 조회
                    	     if (getValue("respAcnt/object/acntList/object/mngCd") == "" || getValue("respAcnt/object/acntList/object/mngCd") == null) cnt--;
                       }
                       if (selectGbn == "9" || selectGbn1 == "9") {
                  	     if (getValue("respAcnt/object/acntList/object/acntClsCd") != "10" &&
                               getValue("respAcnt/object/acntList/object/acntClsCd") != "20" &&
                         	     getValue("respAcnt/object/acntList/object/acntClsCd") != "30" &&
                         	     getValue("respAcnt/object/acntList/object/acntClsCd") != "60" &&
                         	     getValue("respAcnt/object/acntList/object/acntClsCd") != "80"    ) cnt--;
                       }
                       if (selectGbn == "10" || selectGbn1 == "10") {
                  	     if (selectGbn  == "10" && getValue("respAcnt/object/acntList/object/mngCd") != selectValue ) cnt--;
                  	     if (selectGbn1 == "10" && getValue("respAcnt/object/acntList/object/mngCd") != selectValue1 ) cnt--;
                       }

               //      if (selectGbn != "7" && selectGbn1 != "7")
               //   	   if (getValue("respAcnt/object/acntList/object/slipInptYn") != "Y" ) cnt--;
                       if (getValue("respAcnt/object/acntList/object/acntUseYn") == "N") cnt--;
                     }                      
                     
                     
                     if (cnt == 1) {
                  	   acntCd.setValue(getValue("respAcnt/object/acntList/object/acntCd"));
                         acntNm.setValue(getValue("respAcnt/object/acntList/object/acntNm"));
                         var doc = WebSquare.ModelUtil.findInstanceNode( "respAcnt/object/acntList/object" );
                         
                         try {
                   	      setAcntCdInfo(doc);
                   	    }
                   	    catch(e){}
                     } else 
                    	 acntCdCorpOpenPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, popGbn); 
          	    }
          	}
          	 
          }
          
          /*============================================================================
           ** 기능  : 멀티일반행정 자산팝업 && 그리드에 입력
           ** 인수  : submissionId, object             자산작업코드 "10":정상, "20":이관, "30": 수리, "40":폐기 
           *                                         ,자산상태코드 "10":양호, "20":불량, "30": 폐기예정, "40":폐기, "50":매각
           *                                arguments[4] => 부서코드 arguments[5] => 부서명 arguments[6] => 부서코드/명, 자산상태 disable true/false
           *                                 arguments[7] => 과학대 실습관리과이면 "Y"
           *                                                 과학대 관리과 이면 "N" 
           *                                                 수원대 이면 ""
           ** 리턴  : 결과배열, 노드생성
            
           ============================================================================*/
           function gmAsetMultiSearchGrid(grid , asetWorkgCd, asetStatCd) {
           	gmSearchTypeFlag = "grid";
           //	gmSearchGridRow = row;
           //	gmSearchGridCol = col;
           	gmSearchGridObjID = grid.getID();
           
           	
//           	grid.setCellData( row , col+2 , "" );
//           	var value = grid.getCellData(row, col);
//           	grid.setCellData( row , col , "" );
           	
           	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchAsetInfo" );
           	
//           	if(initCols != undefined) {
//            		for(var index in initCols) {
//            			if(initCols[index] != "") {
//            				grid.setCellData( row , initCols[index] , "" );	
//            			}
//            		}
//            	}
           	
           
           	getGmAsetMultiInfo(event.type, "",  asetWorkgCd, asetStatCd, arguments[3], arguments[4], arguments[5], arguments[6]);
           }
           
          /*============================================================================
          ** 기능  : 자산 조회 팝업
          ** 인수  : value    arguments[2]=> 자산작업코드 "10":정상, "20":이관, "30": 수리, "40":폐기 
          *                  arguments[3] => 부서코드 arguments[4] => 부서명
          ** 리턴  : 
          ============================================================================*/
          function getGmAsetMultiInfo(type,value, asetWorkgCd, asetStatCd) {
          	 var encodeValue = "";
              var arrResult = new Array();
          	 var asetWorkgCdValue = asetWorkgCd;
          	 var asetStatCdValue = asetStatCd;
          	 var mngDeptCdValue = arguments[4];
          	 var mngDeptNmValue = arguments[5];
          	 var flagValue = arguments[6];
          	 var deptFlag = arguments[7];
          	 var encodeAsetWorkgCdValue = "";
          	 var encodeAsetStatCdValue = "";
          	 var encodeMngDeptCdValue = "";
          	 var encodeMngDeptNmValue = "";
          	 var encodeFalgValue = WebSquare.text.BASE64URLEncoder("false");
             var encodeDeptFlag = "";
              WebSquare.ModelUtil.removeChildNodes( "responseGmSearchAsetInfo" );
              
          	   if(value != "") {
          		   encodeValue = WebSquare.text.BASE64URLEncoder(value);
          	   } 
          	  if(asetWorkgCdValue != undefined) {
         		   if(asetWorkgCdValue != "") {
         			   encodeAsetWorkgCdValue = WebSquare.text.BASE64URLEncoder(asetWorkgCdValue);
         		   }
         	   }
          	  if(asetStatCdValue != undefined) {
          		  if(asetStatCdValue != "") {
          			 encodeAsetStatCdValue = WebSquare.text.BASE64URLEncoder(asetStatCdValue);
          		  }
          	  }
          	   if(mngDeptCdValue != undefined) {
          		   if(mngDeptCdValue != "") {
          			 if(typeof mngDeptCdValue == 'object'){
        				  encodeMngDeptCdValue = WebSquare.text.BASE64URLEncoder(mngDeptCdValue.getValue());
        			  }else{
        				 encodeMngDeptCdValue = WebSquare.text.BASE64URLEncoder(mngDeptCdValue);
        			  }
          		   }
          		 if(typeof mngDeptCdValue == 'object'){
          		   setValue("requestGmSearchAset/mngDeptCd", mngDeptCdValue.getValue());
          		 }else{
          			setValue("requestGmSearchAset/mngDeptCd", mngDeptCdValue);
          			 
          		 }
          	   }
          	   if(mngDeptNmValue != undefined) {
          		   if(mngDeptNmValue != "") {
          			 if(typeof mngDeptNmValue == 'object'){
          			  encodeMngDeptNmValue = WebSquare.text.BASE64URLEncoder(mngDeptNmValue.getValue());
          			 }else{
          				encodeMngDeptNmValue = WebSquare.text.BASE64URLEncoder(mngDeptNmValue); 
          				 
          			 }
          		   }
          	   }
          	   if(flagValue != undefined) {
          		   if(flagValue != "") {
          			  encodeFalgValue = WebSquare.text.BASE64URLEncoder(flagValue);
          		   }
          	   }
               if(deptFlag != undefined) {
        		   if(deptFlag != "") {
        			   encodeDeptFlag = WebSquare.text.BASE64URLEncoder(deptFlag);
        		   }
        	   }
          	   if(type == "click") {
          		   openPopup( "setGmAsetMultiPopupValue", "/views/gm/js/GM_JS_1020_Popup2.xml", {width: 925, height:535},
          				      {asetCdNm:encodeValue, asetWorkgCd:encodeAsetWorkgCdValue, asetStatCd:encodeAsetStatCdValue, 
          			           mngDeptCd:encodeMngDeptCdValue, mngDeptNm:encodeMngDeptNmValue, flag:encodeFalgValue, deptFlag:encodeDeptFlag });
          		   return;
          	   }

              setValue("requestGmSearchAset/asetNm", value);
              setValue("requestGmSearchAset/asetWorkgCd", asetWorkgCd);
              setValue("requestGmSearchAset/asetStatCd", asetStatCd);
              setValue("requestGmSearchAset/deptFlag", deptFlag);

              execSubmission("sub", "requestGmSearchAset", "responseGmSearchAset", "/js/listAsetBasPopup.do");

              var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchAset/object/asetBasList/object");
              var rowCount = dataArr.length;

              if(rowCount == 1) {
              	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/asetNo"));
              	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/asetNm"));
              	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/mngDeptCd"));
              	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/mngrEno"));
              	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/instlPlacCd"));
              	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/asetPsseQty"));
              	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/asetUsgeCd"));
              	   arrResult.push(getValue("responseGmSearchAset/object/asetBasList/object/mngDeptNm"));
              	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchAset" );
                  
                    setGmAsetPopupValue(arrResult);
              } else if(rowCount > 1) {
              	   WebSquare.ModelUtil.removeChildNodes( "responseGmSearchAset" );
              	  openPopup( "setGmAsetMultiPopupValue", "/views/gm/js/GM_JS_1020_Popup2.xml", {width: 925, height:535},
      				      {asetCdNm:encodeValue, asetWorkgCd:encodeAsetWorkgCdValue, asetStatCd:encodeAsetStatCdValue, 
      			           mngDeptCd:encodeMngDeptCdValue, mngDeptNm:encodeMngDeptNmValue, flag:encodeFalgValue, deptFlag:encodeDeptFlag });
              } else if(rowCount == 0) {
              	   showMsg("C_I041", "자산 코드/명으로 검색한 결과");
              }
          }

          /*============================================================================
          ** 기능  : 자산 조회 팝업 후에 호출됨
          ** 인수  : arrResult
          ** 리턴  : 
          ============================================================================*/
          function setGmAsetMultiPopupValue(returnXml) {
        	  console.log(returnXml);
              if(returnXml == undefined) {
                  return;
              }
             var mapArr = WebSquare.xml.findNodes( returnXml , "asetBasList/object" );               
             
             var tmpXml;
         	 for(var i = 0; i < mapArr.length; i++) {
         	    tmpXml = mapArr[i];
         	   console.log(tmpXml);
         	    gridNewRow( eval(gmSearchGridObjID)); 
         	    var asetNo = WebSquare.xml.getValue( tmpXml, "asetNo" );
         	    var asetNm = WebSquare.xml.getValue( tmpXml, "asetNm" );
         	    var trsfDeptd = WebSquare.xml.getValue( tmpXml, "mngDeptCd" );
         	    var trsfDeptNm = WebSquare.xml.getValue( tmpXml, "mngDeptNm" );
         	    var trsfPlacCd = WebSquare.xml.getValue( tmpXml, "instlPlacCd" );
         	    var trsfrEno = WebSquare.xml.getValue( tmpXml, "mngrEno" );
         	    var asetPsseQty = WebSquare.xml.getValue( tmpXml, "asetPsseQty" );
         	    eval(gmSearchGridObjID).setCellData( eval(gmSearchGridObjID).getRowCount()-1 , "asetNo" , asetNo );
         	    eval(gmSearchGridObjID).setCellData( eval(gmSearchGridObjID).getRowCount()-1 , "asetNm" , asetNm );
         	    if (typeof gmAsetMultiSearchGridCallBack == 'function') {
         	    	gmAsetMultiSearchGridCallBack(eval(gmSearchGridObjID).getRowCount()-1, trsfDeptd, trsfPlacCd, trsfrEno, asetPsseQty,trsfDeptNm);
          	    }
         	 }
             
          }   
          /*===============================================================
           * function    : onClickSscitmgCdPopup(과학대)
           * Description : 관리항목 팝업 호출
           * Parameter   : itmgCd(관리항목코드 object), itmgNm(관리항목명 object), mngCd(관리코드 값)
           * Return      : 
           **===============================================================*/
          function onClickSscItmgCdPopup(itmgCd, itmgNm, mngCd, sumissionID) {
              if (mngCd == "") {
              	
                 showMsg("C_I066", ["관리항목 계정","관리항목"]);                    
                 return;
              }
          	if(typeof setNavigator != 'function') {
          		openNewPopup("itmgCdCallBack", "/views/gm/hg/GM_HG_2113.xml"
          	               , { width      : 500
                      , height     : 520
                      , resizable  : false
                      , scrollbars : false } 
                      , {pMngCd : WebSquare.text.BASE64URLEncoder(mngCd)
                      ,  pItmgCd : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
                      ,  pItmgCdID : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
                      ,  pItmgNmID : WebSquare.text.BASE64URLEncoder(itmgNm.getID())}) ;
          		return;
          	}
              openPopup("itmgCdCallBack", "/views/gm/hg/GM_HG_2113.xml"
                         , { width      : 500
                         , height     : 520
                         , resizable  : false
                         , scrollbars : false } 
                         , {pMngCd : WebSquare.text.BASE64URLEncoder(mngCd)
                         ,  pItmgCd : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
                         ,  pItmgCdID : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
                         ,  pItmgNmID : WebSquare.text.BASE64URLEncoder(itmgNm.getID())}) ;
          }
          /*===============================================================
           * function    : onChangeSscItmgCdPopup(과학대)
           * Description : 관리항목 팝업 호출
           * Parameter   : itmgCd(관리항목코드 object), itmgNm(관리항목명 object), mngCd(관리코드 값), subId(서브미션 id)
           * Return      : 
           **===============================================================*/
          function onChangeSscItmgCdPopup(itmgCd, itmgNm, mngCd, subId) {
              if (mngCd == "") {
              	
                 showMsg("C_I066", ["관리항목 계정","관리항목"]);                    
                 return;
              }
              
              if (itmgCd.getValue() == "") return;
              
              setValue( "reqItmg/mngCd" ,  mngCd);
              setValue( "reqItmg/itmgCd" , itmgCd.getValue());
              setValue( "reqItmg/flag"  , "N");
              
              execSubmission(subId, "reqItmg", "respItmg", "/hg/listItmgCd.do");
              
              var retArr = WebSquare.ModelUtil.findInstanceNodes( "respItmg/object/itmgCdList/object" );

              if (retArr.length != 1) 
              	onClickSscItmgCdPopup(itmgCd, itmgNm, mngCd);
              else {    
                  itmgCd.setValue(getValue("respItmg/object/itmgCdList/object[1]/itmgCd"));
                  itmgNm.setValue(getValue("respItmg/object/itmgCdList/object[1]/itmgNm"));
                  
                  if (typeof setItmgCdInfo == 'function') {
           		   setItmgCdInfo("");
           	   }
              }
          }
          
          
          //법인/재단용  사용자 조회
          function gmCorpUserSearch(textObj, nameObj) {
        		gmSearchTypeFlag = "form";
        		gmTextObjID = textObj.getID();
        		gmNameObjID = nameObj.getID();
        		
        		nameObj.setValue("");
        		var value = textObj.getValue();
        		textObj.setValue("");
        		
        		WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
        		if(event.type != 'click') {
        			if(value.length < 1) {
        				nameObj.setValue("");
        				return;
        			} else if(value.length < 1) {
        				showMsg("C_I054", "사번/성명을 1자 이상");
        				return;
        			}
        		} 
        		getGmCorpUserInfo(event.type, value, arguments[2], arguments[3], arguments[4], arguments[5],arguments[6]);
        	}

          	
            //법인/재단용  사용자 조회(그리드)
        	function gmCorpUserSearchGrid(grid , row , col, initCols) {
        		gmSearchTypeFlag = "grid";
        		gmSearchGridRow = row;
        		gmSearchGridCol = col;
        		gmSearchGridObjID = grid.getID();

        		grid.setCellData( row , col+2 , "" );
        		var value = grid.getCellData(row, col);
        		grid.setCellData( row , col , "" );
        		
        		WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
        		
        		if(initCols != undefined) {
        			for(var index in initCols) {
        				if(initCols[index] != "") {
        					grid.setCellData( row , initCols[index] , "" );	
        				}
        			}
        		}

        		if(event.type != "click"){
        			if(value.length < 1) {
        				return;
        			} else if(value.length < 1) {
        				showMsg("C_I054", "사번/성명을 1자 이상");
        				return;
        			}
        		} 
        		
        		getGmCorpUserInfo(event.type, value, arguments[4], arguments[5], arguments[6], arguments[7]);
        	}

        	/*============================================================================
        	** 기능  : 법인/재단용 교직원 조회 팝업
        	** 인수  : value
        	** 리턴  : 
        	============================================================================*/
        	function getGmCorpUserInfo(type, value) {
        		var arrResult = new Array();
        		var clsfLCdValue = arguments[2];
        		var jobcCdValue = arguments[3];
        		var orgCd = arguments[4];
        		var roleCheck = arguments[5];
        		var bmGb = arguments[6];
        		
        		var encodeValue = "";
        		var encodeJobcCdValue = "";
        		var encodeClsfLCdValue = "";
        		var encodeOrgCd = "";
        		var encodeLoginOrgCd = "";
        		var encodeRoleCheck = "";
        		var encodeBmGb = "";
        		if(value != "") {
        			encodeValue = WebSquare.text.BASE64URLEncoder(value);
        		}
        		
        		if(orgCd != undefined) {
        			if(orgCd != "") {
        				encodeOrgCd = WebSquare.text.BASE64URLEncoder(orgCd);
        			} 
        			setValue("requestGmSearchUser/orgCd", orgCd);
        		}
        		
        		if(roleCheck != undefined) {
        			if(roleCheck != "") {
        				encodeRoleCheck = WebSquare.text.BASE64URLEncoder(roleCheck);
        			} 
        		}
        		
        		if(clsfLCdValue != undefined) {
        			if(clsfLCdValue != "") {
        				encodeClsfLCdValue = WebSquare.text.BASE64URLEncoder(clsfLCdValue);
        			} 
        			setValue("requestGmSearchUser/selectClsfLCd", clsfLCdValue);	
        		}

        		if(jobcCdValue != undefined) {
        			if(jobcCdValue != "") {
        				encodeJobcCdValue = WebSquare.text.BASE64URLEncoder(jobcCdValue);
        			} 
        			setValue("requestGmSearchUser/selectJobcCd", jobcCdValue);	
        		}
        		
        		if(bmGb != undefined) {
        			if(bmGb != "") {
        				encodeBmGb = WebSquare.text.BASE64URLEncoder(bmGb);
        			} 
        			setValue("requestGmSearchUser/bmGb", bmGb);	
        		}
        		
        		
        	    setValue("requestGmSearchUser/eno", value);
        	    
        		if(type == "click") {
        			if(typeof setNavigator != 'function') {
        				openNewPopup( "setGmCorpUserPopupValue", "/views/gm/corphg/GM_HG_9001.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, roleCheck:encodeRoleCheck, pBmGb:encodeBmGb});
        				return;
        			}
        			openPopup( "setGmCorpUserPopupValue", "/views/gm/corphg/GM_HG_9001.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, roleCheck:encodeRoleCheck, pBmGb:encodeBmGb});
        			return;
        		}
        		
        	    execSubmission("getCommonDataSubm", "requestGmSearchUser", "responseGmSearchUser", "/corphg/listCorpUser.do");
        	    
        	    var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchUser/object/userList/object");
        	    var rowCount = dataArr.length;
        	    
        	    if(rowCount == 1) {
        	    	arrResult.push(getValue("responseGmSearchUser/object/userList/object/eno"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/stafNm"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/iidno"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/birth"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/sexDvcd"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/sexDvcdNm"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/clsfCd"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/clsfNm"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/deptCd"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/deptNm"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatCd"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatDt"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatNm"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/nltyCd"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/nltyCdNm"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/salcCd"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/salcNm"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payFormCd"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payFormCdNm"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/rtirDt"));      
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/jobcCd"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/jobcCdNm"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payBankCd"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payBankCdNm"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payAcno"));
        	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payDepoNm"));
        	        
        	        WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUser" );
        	        
        	        setGmCorpUserPopupValue(arrResult);
        	    } else if(rowCount > 1) {
        	    	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUser" );
        	    	if(typeof setNavigator != 'function') {
        				openNewPopup( "setGmCorpUserPopupValue", "/views/gm/corphg/GM_HG_9001.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, roleCheck:encodeRoleCheck, pBmGb:encodeBmGb});
        				return;
        			}
        	    	openPopup( "setGmCorpUserPopupValue", "/views/gm/corphg/GM_HG_9001.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, roleCheck:encodeRoleCheck, pBmGb:encodeBmGb});
        	    } else if(rowCount == 0) {
        	    	showMsg("C_I041", "사번/성명으로 검색한 결과");
        	    }
        	}

        	/*============================================================================
        	** 기능  : 법인/재단용 교직원 조회 팝업 후에 수행됨
        	** 인수  : arrResult
        	** 리턴  : 
        	============================================================================*/
        	function setGmCorpUserPopupValue(arrResult) {
        		if(arrResult == undefined) {
        			return;
        		}
        		
        		setValue("responseGmSearchUserInfo/eno",arrResult[0]);       
        	    setValue("responseGmSearchUserInfo/stafNm",arrResult[1]);    
        	    setValue("responseGmSearchUserInfo/iidno",arrResult[2]);     
        	    setValue("responseGmSearchUserInfo/birth",arrResult[3]);     
        	    setValue("responseGmSearchUserInfo/sexDvcd",arrResult[4]);     
        	    setValue("responseGmSearchUserInfo/sexDvcdNm",arrResult[5]);   
        	    setValue("responseGmSearchUserInfo/clsfCd",arrResult[6]);    
        	    setValue("responseGmSearchUserInfo/clsfNm",arrResult[7]);    
        	    setValue("responseGmSearchUserInfo/deptCd",arrResult[8]);    
        	    setValue("responseGmSearchUserInfo/deptNm",arrResult[9]);    
        	    setValue("responseGmSearchUserInfo/hffcStatCd",arrResult[10]);
        	    setValue("responseGmSearchUserInfo/hffcStatDt",arrResult[11]);
        	    setValue("responseGmSearchUserInfo/hffcStatNm",arrResult[12]);
        	    setValue("responseGmSearchUserInfo/nltyCd",arrResult[13]);
        	    setValue("responseGmSearchUserInfo/nltyCdNm",arrResult[14]);
        	    setValue("responseGmSearchUserInfo/salcCd",arrResult[15]); 
        	    setValue("responseGmSearchUserInfo/salcNm",arrResult[16]); 
        	    setValue("responseGmSearchUserInfo/payFormCd",arrResult[17]); 
        	    setValue("responseGmSearchUserInfo/payFormCdNm",arrResult[18]); 
        	    setValue("responseGmSearchUserInfo/rtirDt",arrResult[19]);
        	    setValue("responseGmSearchUserInfo/jobcCd",arrResult[20]);
        	    setValue("responseGmSearchUserInfo/jobcCdNm",arrResult[21]); 
        	    setValue("responseGmSearchUserInfo/payBankCd",arrResult[22]); 
        	    setValue("responseGmSearchUserInfo/payBankCdNm",arrResult[23]); 
        	    setValue("responseGmSearchUserInfo/payAcno",arrResult[24]); 
        	    setValue("responseGmSearchUserInfo/payDepoNm",arrResult[25]);

        	    if(gmSearchTypeFlag == "form") {
        	    	eval(gmTextObjID).setValue( arrResult[0] );
        	    	eval(gmNameObjID).setValue( arrResult[1] );
        	    	
        	    	//화면에서 부가정보를 사용할 경우에  gmUserSearchFormCallBack 함수를 만들어 놓고 사용한다
        	    	if (typeof gmUserSearchFormCallBack == 'function') {
        	    		gmUserSearchFormCallBack(arrResult);
        	    	}
        			return;
        		}
        		
        		eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
        		eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
        		
        		//화면에서 부가정보를 사용할 경우에  gmUserSearchGridCallBack 함수를 만들어 놓고 사용한다
        		if (typeof gmUserSearchGridCallBack == 'function') {
        			gmUserSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
        		}
        	}
        	
        	
            /*===============================================================
             * function    : gyeomJikDeptCorpSearch
             * Description : 회계 겸직 부서 팝업(법인)
             * Parameter   : 부서코드obj , 부서명obj, submission
             * Return      : null
             **===============================================================*/
            function gyeomJikDeptCorpSearch(reslDeptCd,reslDeptNm,reslEno, subMissionId){
            	var reslDeptCdID = WebSquare.text.BASE64URLEncoder(reslDeptCd.getID());
            	var reslDeptNmID  = WebSquare.text.BASE64URLEncoder(reslDeptNm.getID());
            	var pReslDeptCd = WebSquare.text.BASE64URLEncoder(reslDeptCd.getValue());
            	var eno = WebSquare.text.BASE64URLEncoder(reslEno.getValue());
            	if(event.type == 'click'){
            		if(typeof setNavigator != 'function') {
                		var rArr = openNewPopup("gyeomJikDeptSearchCallBack","/views/gm/corphg/GM_HG_2017.xml"
   		                   , { width      : 580
   		                     , height     : 530
   		                     , resizable  : false
   		                     , scrollbars : false }
   		                   , {pReslDeptCd:pReslDeptCd,reslDeptCdID:reslDeptCdID,reslDeptNmID:reslDeptNmID, pEno:eno}) ;
            			return;
            		}
            		var rArr = openPopup("gyeomJikDeptSearchCallBack","/views/gm/corphg/GM_HG_2017.xml"
  		                   , { width      : 580
  		                     , height     : 530
  		                     , resizable  : false
  		                     , scrollbars : false }
  		                   , {pReslDeptCd:pReslDeptCd,reslDeptCdID:reslDeptCdID,reslDeptNmID:reslDeptNmID, pEno:eno}) ;
            		return;
            	}else{
            		  WebSquare.ModelUtil.setInstanceValue( "reqGeyomJikDept/reslDeptCd" , reslDeptCd.getValue());
            		  WebSquare.ModelUtil.setInstanceValue( "reqGeyomJikDept/reslEno" , reslEno.getValue());
            		  execSubmission(subMissionId, "reqGeyomJikDept", "resGeyomJikDept","/corphg/listGeyomJikDept.do");
            		  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resGeyomJikDept/object/gyeomJikDeptList/object");
            	      rowCount = dataArr.length;
            	      if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
            		  	  var arrResult = new Array();
            		      arrResult.push(getValue("resGeyomJikDept/object/gyeomJikDeptList/object[1]/deptCd"));
            		      arrResult.push(getValue("resGeyomJikDept/object/gyeomJikDeptList/object[1]/deptNm"));
            		      gyeomJikDeptSearchCallBack(arrResult,reslDeptCd.getID(),reslDeptNm.getID());
            	      }else if(rowCount == 0){
            	    	    reslDeptCd.setValue("");
            	    	    reslDeptNm.setValue("");
            	        	showMsg("C_I041", "검색한 결과");
            	        	
            	      }else {   //데이터가 여러개인 경우 팝업띄움 
                  		if(typeof setNavigator != 'function') {
                        		var rArr = openNewPopup("gyeomJikDeptSearchCallBack","/views/gm/corphg/GM_HG_2017.xml"
           		                   , { width      : 580
           		                     , height     : 530
           		                     , resizable  : false
           		                     , scrollbars : false }
           		                   , {pReslDeptCd:pReslDeptCd,reslDeptCdID:reslDeptCdID,reslDeptNmID:reslDeptNmID, pEno:eno}) ;
                    			return;
                    		}
                    		var rArr = openPopup("gyeomJikDeptSearchCallBack","/views/gm/corphg/GM_HG_2017.xml"
          		                   , { width      : 580
          		                     , height     : 530
          		                     , resizable  : false
          		                     , scrollbars : false }
          		                   , {pReslDeptCd:pReslDeptCd,reslDeptCdID:reslDeptCdID,reslDeptNmID:reslDeptNmID, pEno:eno}) ;
                    		return;
            		  }
            	}
            }
            
            /*============================================================================
             ** 기능  : 멀티일반행정 자산팝업 && 그리드에 입력
             ** 인수  : submissionId, object     arguments[4] => 부서코드 arguments[5] => 부서명 arguments[6] => 부서코드/명, 자산상태 disable true/false
             *                                 arguments[7] => 과학대 실습관리과이면 "Y"
             *                                                 과학대 관리과 이면 "N" 
             *                                                 수원대 이면 ""
             ** 리턴  : 결과배열, 노드생성
              
             ============================================================================*/
             function gmIsptMultiSearchGrid(grid) {
             	gmSearchTypeFlag = "grid";
             	gmSearchGridObjID = grid.getID();
                          	
             	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchIsptInfo" );

             	getGmIsptMultiInfo(event.type, "", arguments[1], arguments[2]);
             }
             
             /*============================================================================
              ** 기능  : 구매_발주품목 조회 팝업
              ** 인수  : value
              ** 리턴  : 
              ============================================================================*/
             function getGmIsptMultiInfo(type,value) {
            	 var encodeValue = "";
                 var arrResult = new Array();
                 
            	 var ordeNo = arguments[2];
            	 var ordeNm = arguments[3];
            	 var encodeOrdeNoValue = "";
            	 var encodeOrdeNmValue = "";

            	 WebSquare.ModelUtil.removeChildNodes( "responseGmSearchIsptInfo" );
                
            	   if(value != "") {
            		   encodeValue = WebSquare.text.BASE64URLEncoder(value);
            	   } 

            	   if(ordeNo != undefined) {
            		   if(ordeNo != "") {
            			   encodeOrdeNoValue = WebSquare.text.BASE64URLEncoder(ordeNo);
            		   }
            		   setValue("requestGmSearchIspt/ordeNo", ordeNo);
            	   }

            	   if(ordeNm != undefined) {
            		   if(ordeNm != "") {
            			   encodeOrdeNmValue = WebSquare.text.BASE64URLEncoder(ordeNm);
            		   }
            	   }

            	   if(type == "click") {

            		   openPopup( "setGmIsptPopupValue", "/views/gm/gm/GM_GM_4010_Popup.xml", {width: 925, height:535},
            				      {ordeNo:encodeOrdeNoValue, ordeNm:encodeOrdeNmValue});
            		   return;
            	   }

             }

             /*============================================================================
             ** 기능  : 검수품목 조회 팝업 후에 호출됨
             ** 인수  : arrResult
             ** 리턴  : 
             ============================================================================*/
             function setGmIsptPopupValue(returnXml) {
           	    //console.log(returnXml);
                if(returnXml == undefined) {
                    return;
                }
    
                var mapArr = WebSquare.xml.findNodes( returnXml , "pchsApplDtlIsptList/object" );               
                
                var tmpXml;
        	    for(var i = 0; i < mapArr.length; i++) {
        	        tmpXml = mapArr[i];
        	        //console.log(tmpXml);
        	        gridNewRow( eval(gmSearchGridObjID)); 
        	        
        	        var applNo = WebSquare.xml.getValue( tmpXml, "applNo" );
        	        var applSeq = WebSquare.xml.getValue( tmpXml, "applSeq" );
        	        var cfmtThngNm = WebSquare.xml.getValue( tmpXml, "cfmtThngNm" );
        	        var cfmtSpecNm = WebSquare.xml.getValue( tmpXml, "cfmtSpecNm" );
        	        var cfmtQty = WebSquare.xml.getValue( tmpXml, "cfmtQty" );
        	        var suptYn = WebSquare.xml.getValue( tmpXml, "suptYn" );
        	        var asetClsCd = WebSquare.xml.getValue( tmpXml, "asetClsCd" );

        	        if (typeof gmIsptMultiSearchGridCallBack == 'function') {
        	    	    gmIsptMultiSearchGridCallBack(eval(gmSearchGridObjID).getRowCount()-1, applNo, applSeq, cfmtThngNm, cfmtSpecNm, cfmtQty, suptYn, asetClsCd);
         	        }
        	    }
             }
             
             /*===============================================================
              * function    : onClickFndtChgrPopUp
              * Description : 재단 예산회계의 책임코드 팝업 호출
              * Parameter   : 책임코드 오브젝트, 책임자명 오브젝트, 서브미션
              * Return      : null
              **===============================================================*/
             function onClickFndtChgrPopUp(chgrEno,chgrNm, subMissionId){
               	var chgrEnoID = WebSquare.text.BASE64URLEncoder(chgrEno.getID());
               	var chgrNmID  = WebSquare.text.BASE64URLEncoder(chgrNm.getID());
               	var eChgrEno = WebSquare.text.BASE64URLEncoder(chgrEno.getValue());
               	if(event.type != 'click') {
                		if(chgrEno.getValue().length < 1) {
                			chgrNm.setValue("");
                			return;
                		}
                	}

               	if(event.type == 'click'){
                   //var eChgrEno = WebSquare.text.BASE64URLEncoder(chgrEno.getValue());
               		var rArr = openPopup("onClickChgrPopUpCallBack","/views/gm/fndtys/GM_YS_1031.xml"
               		                   , { width      : 580
               		                     , height     : 530
               		                     , resizable  : false
               		                     , scrollbars : false }
               		                   , {pChgrEno:eChgrEno,chgrEnoID:chgrEnoID,chgrNmID:chgrNmID}) ;

               	}else{
               		  WebSquare.ModelUtil.setInstanceValue( "reqChgr/chgrEno" , chgrEno.getValue() );
               		  WebSquare.ModelUtil.setInstanceValue( "reqChgr/acctyCd" , getValue("respFrameAcctyBass/object/acctyBass/acctyCd") );
                       execSubmission(subMissionId, "reqChgr", "resChgrEno","/fndtys/listBudgChgrCdPopup.do");

               		  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resChgrEno/object/budgetBaseList/object");
               	      rowCount = dataArr.length;

               	      if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌
               		  	  var arrResult = new Array();
               		      arrResult.push(getValue("resChgrEno/object/budgetBaseList/object[1]/chgrEno"));
               		      arrResult.push(getValue("resChgrEno/object/budgetBaseList/object[1]/chgrNm"));
               		      onClickChgrPopUpCallBack(arrResult,chgrEno.getID(),chgrNm.getID());
               	      }else if(rowCount == 0){
               	    	    chgrEno.setValue("");
               	    	    chgrNm.setValue("");
               	        	showMsg("C_I041", "검색한 결과");

               	      }else {   //데이터가 여러개인 경우 팝업띄움
               			  var rArr = openPopup("onClickChgrPopUpCallBack","/views/gm/fndtys/GM_YS_1031.xml"
               	                   , { width      : 580
               	                     , height     : 530
               	                     , resizable  : false
               	                     , scrollbars : false }
               	                   , {pChgrEno:eChgrEno,chgrEnoID:chgrEnoID,chgrNmID:chgrNmID}) ;
               		  }
               	}
               }


             /*===============================================================
             * function    : onClickFndtCpcdPopUp
             * Description : 재단 예산회계의 법인카드 팝업 호출
             * Parameter   : 법인카드 오브젝트, 서브미션
             * Return      : null
             **===============================================================*/
             function onClickFndtCpcdPopUp(cardNo, cardMngNm, subMissionId){
             	var cardNoID = WebSquare.text.BASE64URLEncoder(cardNo.getID());
             	var cardMngNmID  = WebSquare.text.BASE64URLEncoder(cardMngNm.getID());
             	var eCardNo = WebSquare.text.BASE64URLEncoder(cardNo.getValue());
             	if(event.type != 'click') {
              		if(cardNo.getValue().length < 1) {
              			cardMngNm.setValue("");
              			return;
              		}
              	} 
             	if(event.type == 'click'){
             		var rArr = openPopup("onClickCpcdPopUpCallBack","/views/gm/fndthg/GM_HG_1032.xml"
             		                   , { width      : 580
             		                     , height     : 530
             		                     , resizable  : false
             		                     , scrollbars : false }
             		                   , {pCardNo:eCardNo,cardNoID:cardNoID,cardMngNmID:cardMngNmID}) ;
             	}else{
             		  WebSquare.ModelUtil.setInstanceValue( "reqCard/cardNo" , cardNo.getValue() );
             		  execSubmission(subMissionId, "reqCard", "resCardNo","/fndthg/searchListCpcd.do");
             	  	  
             		  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resCardNo/object/searchCpcdList/object");
             	      rowCount = dataArr.length;
                    	      
             	      if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
             		  	  var arrResult = new Array();
             		      arrResult.push(getValue("resCardNo/object/searchCpcdList/object[1]/cardNo"));
             		      arrResult.push(getValue("resCardNo/object/searchCpcdList/object[1]/cardMngNm"));
             		      onClickChgrPopUpCallBack(arrResult,cardNo.getID(),cardMngNm.getID());
             	      }else if(rowCount == 0){
             	    	  cardNo.setValue("");
             	    	  cardMngNm.setValue("");
             	          showMsg("C_I041", "검색한 결과");
             	        	
             	      }else {   //데이터가 여러개인 경우 팝업띄움 
             	    	  var rArr = openPopup("onClickCpcdPopUpCallBack","/views/gm/fndthg/GM_HG_1032.xml"
             	                   , { width      : 580
             	                     , height     : 530
             	                     , resizable  : false
             	                     , scrollbars : false }
             	                   , {pCardNo:eCardNo,cardNoID:cardNoID,cardMngNmID:cardMngNmID}) ;
             		  }
             	}
             }



             /*===============================================================
              * function    : onClickFndtMngCdPopUp
              * Description : 재단 예산회계의 관리코드 팝업 호출
              * Parameter   : 관리코드/명 오브젝트, 서브미션
              *               Flag : 1(계정), 2(일반), null(전체)
              * Return      : null
              **===============================================================*/
             function onClickFndtMngCdPopUp(mngCd, mngNm, subMissionId, Flag){
             	    var mngCdID = WebSquare.text.BASE64URLEncoder(mngCd.getID());
             	    var mngNmID  = WebSquare.text.BASE64URLEncoder(mngNm.getID());
                 	var eMngCd = WebSquare.text.BASE64URLEncoder(mngCd.getValue());
                 	var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
                 
                 	if(event.type != 'click') {
                  		if(mngCd.getValue().length < 1) {
                  			mngNm.setValue("");
                  			return;
                  		}
                  	} 
                 	
                 	if(event.type == 'click'){
                 		var rArr = openPopup("onClickMngCdPopUpCallBack","/views/gm/fndthg/GM_HG_1061.xml"
             		                   , { width      : 580
             		                     , height     : 530
             		                     , resizable  : false
             		                     , scrollbars : false }
             		                   , {pMngCd:eMngCd,pFlag:eFlag,mngCdID:mngCdID,mngNmID:mngNmID}) ;
                 	}else{
                       WebSquare.ModelUtil.setInstanceValue( "reqMngCd/mngCd" , mngCd.getValue() );
                       execSubmission(subMissionId, "reqMngCd", "resMngCd", "/fndthg/listMngCdPopup.do");
               		  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resMngCd/object/mngCdList/object");
               	      rowCount = dataArr.length;
                        	      
               	      if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
               		  	  var arrResult = new Array();
               		      arrResult.push(getValue("resMngCd/object/mngCdList/object[1]/mngCd"));
               		      arrResult.push(getValue("resMngCd/object/mngCdList/object[1]/mngNm"));
               		      onClickChgrPopUpCallBack(arrResult,mngCd.getID(),mngNm.getID());
               	      }else if(rowCount == 0){
               	    	  	mngCd.setValue("");
               	    	    mngNm.setValue("");
               	        	showMsg("C_I041", "검색한 결과");
               	        	
               	      }else {   //데이터가 여러개인 경우 팝업띄움 
               			  var rArr = openPopup("onClickMngCdPopUpCallBack","/views/gm/fndthg/GM_HG_1061.xml"
               	                   , { width      : 580
               	                     , height     : 530
               	                     , resizable  : false
               	                     , scrollbars : false }
               			           , {pMngCd:eMngCd,pFlag:eFlag,mngCdID:mngCdID,mngNmID:mngNmID}) ;
               		  }
               	}
             }

              /*===============================================================
              * function    : onClickFndtDocfmSetPopUp
              * Description : 재단 예산회계의 보고서서식세트 팝업 호출
              * Parameter   : 
              * Return      : null
              **===============================================================*/
             function onClickFndtDocfmSetPopUp(docfmSetCd, docfmSetNm, acctyCd, subMissionId){
             	    var docfmSetCdID = WebSquare.text.BASE64URLEncoder(docfmSetCd.getID());
             	    var docfmSetNmID  = WebSquare.text.BASE64URLEncoder(docfmSetNm.getID());
                 	var eDocfmSetCd = WebSquare.text.BASE64URLEncoder(docfmSetCd.getValue());		
                 	if(event.type != 'click') {
                  		if(docfmSetCd.getValue().length < 1) {
                  			docfmSetNm.setValue("");
                  			return;
                  		}
                  	} 
                 	if(event.type == 'click'){
             	    	var rArr = openPopup("onClickDocfmPopUpCallBack","/views/gm/fndthg/GM_HG_1114.xml"
             			                   , { width      : 580
             			                     , height     : 530
             			                     , resizable  : false
             			                     , scrollbars : false }
             			                   , {pDocfmSetCd:eDocfmSetCd,docfmSetCdID:docfmSetCdID,docfmSetNmID:docfmSetNmID, pAcctyCd:acctyCd}) ;
                 	}else{
                 		WebSquare.ModelUtil.setInstanceValue( "reqDocfmSet/searchDocfmSetCd" , docfmSetCd.getValue() );
                 		execSubmission(subMissionId, "reqDocfmSet", "resDocfmSet","/fndthg/listDocfmSetPopup.do");
               	  	  
               		    var dataArr = WebSquare.ModelUtil.findInstanceNodes("resDocfmSet/object/searchAcctyDocfmList/object");
               	        rowCount = dataArr.length;
                      	      
               	        if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
               		  	  var arrResult = new Array();
               		      arrResult.push(getValue("resDocfmSet/object/searchAcctyDocfmList/object[1]/docfmSetCd"));
               		      arrResult.push(getValue("resDocfmSet/object/searchAcctyDocfmList/object[1]/docfmSetNm"));
               		      onClickDocfmPopUpCallBack(arrResult,docfmSetCd.getID(),docfmSetNm.getID());
               	        }else if(rowCount == 0){
               	          docfmSetCd.setValue("");
               	          docfmSetNm.setValue("");
               	          showMsg("C_I041", "검색한 결과");
               	        }else {   //데이터가 여러개인 경우 팝업띄움 
               	    	  var rArr = openPopup("onClickDocfmPopUpCallBack","/views/gm/fndthg/GM_HG_1114.xml"
               	                   , { width      : 580
               	                     , height     : 530
               	                     , resizable  : false
               	                     , scrollbars : false }
               	    	           , {pDocfmSetCd:eDocfmSetCd,docfmSetCdID:docfmSetCdID,docfmSetNmID:docfmSetNmID}) ;
               		    }
               	}	
             }


             /*===============================================================
              ** 기능 : 재단 예산회계의 부서코드 팝업 호출
              ** 인수 : 부서코드 오브젝트, 부서명 오브젝트, 사업코드, 조회팝업("Y") 또는 신청팝업("N"), 예산단위가 최상위단위일떄 최상위조직만 조회("1")
              ** 결과 : 
              **===============================================================*/
             function onClickFndtBudgDeptPopUp(subMissionId, budgDeptCd, budgDeptNm, busiCd, busiNm, Flag, deptFlag, popGbn){
             	 var budgDeptCdID = WebSquare.text.BASE64URLEncoder(budgDeptCd.getID());
             	 var budgDeptNmID = WebSquare.text.BASE64URLEncoder(budgDeptNm.getID());
             	 var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
             	 var eDeptFlag = WebSquare.text.BASE64URLEncoder(deptFlag);
             	 var eBudgDeptCd = WebSquare.text.BASE64URLEncoder(budgDeptCd.getValue()); 
             	 var eBusiCd ;
             	 var vBusiCd ;
             	 if(event.type != 'click') {
             		if(budgDeptCd.getValue().length < 1) {
             			budgDeptNm.setValue("");
             			return;
             		}
             	 } 
             	if(busiCd == ""){
             		 eBusiCd = WebSquare.text.BASE64URLEncoder(busiCd);
             		 vBusiCd = busiCd;
             	}else{
             		if(busiCd.getValue().length == 4 && busiNm.getValue() != ""){ //사업코드가 완전할때만 반영
             		     eBusiCd = WebSquare.text.BASE64URLEncoder(busiCd.getValue());
             		     vBusiCd = busiCd.getValue();
             		 }
             		 else{
             		  	eBusiCd = "" ;
             		  	vBusiCd = "";
             		   	busiCd.setValue("");
             		   	busiNm.setValue("");
             	    }
             	}
             	
                 if(event.type == 'click'){
                 	if(popGbn == '2'){
                 		var rArr = openNewPopup("onClickBudgDeptPopUpCallBack", "/views/gm/fndtys/GM_YS_1011.xml"
                 				, { width      : 915
                 			, height     : 525
                 			, resizable  : false
                 			, scrollbars : false }
                 		, {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag, budgDeptCdID:budgDeptCdID, budgDeptNmID:budgDeptNmID}) ;
                 	}else{
                 		var rArr = openPopup("onClickBudgDeptPopUpCallBack", "/views/gm/fndtys/GM_YS_1011.xml"
                 				, { width      : 915
                 			, height     : 525
                 			, resizable  : false
                 			, scrollbars : false }
                 		, {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag, budgDeptCdID:budgDeptCdID, budgDeptNmID:budgDeptNmID}) ;
                 	}
                 }else{
                 	
                     WebSquare.ModelUtil.setInstanceValue( "reqBudgDept/orgNm" , budgDeptCd.getValue() );
                     WebSquare.ModelUtil.setInstanceValue( "reqBudgDept/busiCd", vBusiCd );
                     execSubmission(subMissionId, "reqBudgDept", "resBudgDept","/fndtys/listBudgDeptCd.do");
                     
                     var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgDept/object/budgBusiCdList/object");
                     rowCount = dataArr.length;
                     if(rowCount == 1 && ((Flag == "N" && getValue("resBudgDept/object/budgBusiCdList/object[1]/useYn") == "Y") || Flag == "Y")) {    
                     	if(deptFlag == "1" && (getValue("respFrameAcctyBass/object/acctyBass/budgUnitCd") == "10" || getValue("respFrameAcctyBass/object/acctyBass/budgUnitCd") == "20")){ 
                     		if(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd") != getValue("respFrameAcctyBass/object/acctyBass/subInfoVal7")){
                     			budgDeptCd.setValue("");
                     			budgDeptNm.setValue("");
                     			showMsg("C_I084", ["예산단위가 최상위기관", "다른부서"]);    
                     			return;
                     		}
                     	}
                     	//budgDeptCd.setValue(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd"));
                     	//budgDeptNm.setValue(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgNm"));     
                     	  var arrResult = new Array();
                           arrResult.push(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd"));
                           arrResult.push(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgNm"));
                           onClickBudgDeptPopUpCallBack(arrResult,budgDeptCd.getID(),budgDeptNm.getID());
                     }else if(rowCount == 0){
                     	budgDeptCd.setValue("");
             			budgDeptNm.setValue("");
                     	showMsg("C_I041", "검색한 결과");
                     	
                     }
                     else{
                     	if(popGbn == '2'){
                     		var rArr = openNewPopup("onClickBudgDeptPopUpCallBack", "/views/gm/fndtys/GM_YS_1011.xml"
                     				, { width      : 915
                     			, height     : 525
                     			, resizable  : false
                     			, scrollbars : false }
                     		, {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag, budgDeptCdID:budgDeptCdID, budgDeptNmID:budgDeptNmID}) ;
                     	}else{
                     		var rArr = openPopup("onClickBudgDeptPopUpCallBack", "/views/gm/fndtys/GM_YS_1011.xml"
                     				, { width      : 915
                     			, height     : 525
                     			, resizable  : false
                     			, scrollbars : false }
                     		, {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag, budgDeptCdID:budgDeptCdID, budgDeptNmID:budgDeptNmID}) ;
                     	}
                     }   	
                 }
             }


             /*===============================================================
                ** 기능 : 재단 예산회계의 사업코드 팝업 호출(컴포넌트)
                ** 인수 : 서브미션,  사업코드 오브젝트, 사업명 오브젝트, 부서코드 오브젝트, 부서명 오브젝트, (검색시(Y), 신청시(N)), popGbn(팝업구분:null,"1"-UI에서 팝업호출, "2"-팝업에서 호출)
                *** 결과 : 이주원 추가 로직필요 
                **===============================================================*/
             function onClickFndtBusiPopUp(subMissionId, busiCd, busiNm, budgDeptCd, budgDeptNm, Flag, popGbn){
             	  var busiCdID = WebSquare.text.BASE64URLEncoder(busiCd.getID());
             	  var busiNmID = WebSquare.text.BASE64URLEncoder(busiNm.getID());
                   var eBusiCd = WebSquare.text.BASE64URLEncoder(busiCd.getValue());
                   var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
                   var eBudgDeptCd;
                   var vBudgDeptCd
                   if(event.type != 'click') {
               		if(busiCd.getValue().length < 1) {
               			busiNm.setValue("");
               			return;
               		}
               	 } 
                   if(budgDeptCd == ""){
                 	     eBudgDeptCd = WebSquare.text.BASE64URLEncoder(budgDeptCd);
                 	     vBudgDeptCd = budgDeptCd;
                   }else{
                 	  if(budgDeptCd.getValue().length == 7 && budgDeptNm.getValue() != ""){ //부서코드가 완전할때만 반영
             	    	  eBudgDeptCd = WebSquare.text.BASE64URLEncoder(budgDeptCd.getValue());
             	    	  vBudgDeptCd = budgDeptCd.getValue();
             	      }else{
             	    	 eBudgDeptCd = "" ;
             	    	 vBudgDeptCd = ""
             	    	 budgDeptCd.setValue("");
             	    	 budgDeptNm.setValue("");
             	      }
                   }
                   if(event.type == 'click'){
                 	  if (popGbn == "2") {
                 		  openNewPopup("onClickBusiPopUpCallBack", "/views/gm/fndtys/GM_YS_1041.xml"
                                   , { width      : 580
                                     , height     : 565
                                     , resizable  : false
                                     , scrollbars : false }
                                   , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, busiCdID:busiCdID, busiNmID:busiNmID}) ;
                 	  } else {
             	          var rArr = openPopup("onClickBusiPopUpCallBack", "/views/gm/fndtys/GM_YS_1041.xml"
             	                         , { width      : 580
             	                           , height     : 565
             	                           , resizable  : false
             	                           , scrollbars : false }
             	                         , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, busiCdID:busiCdID, busiNmID:busiNmID}) ;
                       }
             	      
//             	      if (rArr != undefined && rArr != null) {
//             	     	 busiCd.setValue( rArr[0] );
//             	     	 busiNm.setValue( rArr[1] );
//             	      }
                   }else{
                 	 
                 	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/busiCd" , busiCd.getValue() );
                 	//  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/acctyCd" , getValue("respFrameAcctyBass/object/acctyBass/acctyCd") );
                 	  
                 	  if(vBudgDeptCd.length == '0')  //부서코드가 없으면 사업테이블에서 조회/ 있으면 예산부서테이블에서 조회
                       {   
                 		  execSubmission(subMissionId, "reqBudgBusiCd", "resBudgBusiCd","/fndtys/selBudgBusiCd.do");
                       }else{
                     	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/budgApplDeptCd" , vBudgDeptCd );
                     	  execSubmission(subMissionId, "reqBudgBusiCd", "resBudgBusiCd","/fndtys/selBudgDeptBusiCd.do");
                       }
                 	  
                 	  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgBusiCd/object/selbudgBusiCd/object");
                       rowCount = dataArr.length;
                       if(rowCount == 1 && ((Flag == "N" && getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/useYn") == "Y") || Flag == "Y")){ //데이터가 하나면 바로 뿌려줌 
                     	 
                     	 // busiCd.setValue(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiCd"));
                     	 // busiNm.setValue(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiNm"));  
                     	  var arrResult = new Array();
                           arrResult.push(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiCd"));
                           arrResult.push(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiNm"));
                     	  onClickBusiPopUpCallBack(arrResult,busiCd.getID(),busiNm.getID());
                     	  
                       }else if(rowCount == 0){
                     	  busiCd.setValue("");
                     	  busiNm.setValue("");
                     	  showMsg("C_I041", "검색한 결과");
                     	
                       }else {   //데이터가 여러개인 경우 팝업띄움 
                     	  if (popGbn == "2") {
                     		  openNewPopup("onClickBusiPopUpCallBack", "/views/gm/fndtys/GM_YS_1041.xml"
                                       , { width      : 580
                                         , height     : 565
                                         , resizable  : false
                                         , scrollbars : false }
                                       , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, busiCdID:busiCdID, busiNmID:busiNmID}) ;
                     	  } else {
                     	      var rArr = openPopup("onClickBusiPopUpCallBack", "/views/gm/fndtys/GM_YS_1041.xml"
                                       , { width      : 580
                                       , height     : 565
                                       , resizable  : false
                                       , scrollbars : false }
                                       , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, busiCdID:busiCdID, busiNmID:busiNmID}) ;
                     	  }
                
                       }
                   }
               }
               
               
             /*===============================================================
              ** 기능 : 재단 예산회계의 그리드용 부서코드 팝업 호출 (그리드)
              ** 인수 : 부서코드 오브젝트, 부서명 오브젝트, 서브미션, 사업코드 
              ** 결과 : 
              **===============================================================*/
             function onClickFndtBudgDeptGridPopUp(subMissionId, grid, row, col, busiCdCol, busiNmCol, Flag, deptFlag){
                 var eBudgDeptCd =WebSquare.text.BASE64URLEncoder(grid.getCellData(row, col)); 
                 var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
                 var eDeptFlag = WebSquare.text.BASE64URLEncoder(deptFlag);
                 var eBusiCd ;
                 var vBusiCd ;
                 
             	 if(event.type != 'click') {
             		if(grid.getCellData(row, col).length < 1) {
             			grid.setCellData(row, col+2, "");
             			return;
             		}
             	 } 
             	 
             	if(busiCdCol == ""){
             		 eBusiCd = "";
             		 vBusiCd = "";
             	}else{
             		if(grid.getCellData(row, busiCdCol).length == 4 && grid.getCellData(row, busiNmCol) != ""){ //사업코드가 완전할때만 반영
             		     eBusiCd = WebSquare.text.BASE64URLEncoder(grid.getCellData(row, busiCdCol));
             		     vBusiCd = grid.getCellData(row, busiCdCol);
             		 }
             		 else{
             		    eBusiCd = "" ;
             		  	vBusiCd = "";
             		  	grid.setCellData(row, busiCdCol, "");
             	    	grid.setCellData(row, busiNmCol, "");
             	    }
             	}
                 
             	if(event.type == 'click'){
             	    var rArr = openPopup("/views/gm/fndtys/GM_YS_1011.xml"
             	                       , { width      : 915
             	                         , height     : 525
             	                         , resizable  : false
             	                         , scrollbars : false }
             	                       , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag}) ;
             	    
             	    if (rArr != undefined && rArr != null) {
             	    	eval(grid).setCellData( row , col , rArr[0] );
             	    	eval(grid).setCellData( row , col+2 , rArr[1] );
             	    	
             	    }
                 }else{
                 	 WebSquare.ModelUtil.setInstanceValue( "reqBudgDept/orgNm" , grid.getCellData(row, col) );
                      WebSquare.ModelUtil.setInstanceValue( "reqBudgDept/busiCd", vBusiCd );
                      execSubmission(subMissionId, "reqBudgDept", "resBudgDept","/fndtys/listBudgDeptCd.do");
                      
                      var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgDept/object/budgBusiCdList/object");
                      rowCount = dataArr.length;
                      
                      if(rowCount == 1 && ((Flag == "N" && getValue("resBudgDept/object/budgBusiCdList/object[1]/useYn") == "Y") || Flag == "Y")) {    
                      	if(deptFlag == "1" && (getValue("respFrameAcctyBass/object/acctyBass/budgUnitCd") == "10" || getValue("respFrameAcctyBass/object/acctyBass/budgUnitCd") == "20")){ 
                      		if(getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd") != getValue("respFrameAcctyBass/object/acctyBass/subInfoVal7")){
                      			 eval(grid).setCellData(row, col,"");
                      			 eval(grid).setCellData(row, col+2,"");
                      			return;
                      		}
                      	}
                      	eval(grid).setCellData(row, col, getValue("resBudgDept/object/budgBusiCdList/object[1]/orgcd"));
                      	eval(grid).setCellData(row, col+2, getValue("resBudgDept/object/budgBusiCdList/object[1]/orgNm"));        	   	
                      }else{
                      	var rArr = openPopup("/views/gm/fndtys/GM_YS_1011.xml"
                                  , { width      : 915
                                    , height     : 525
                                    , resizable  : false
                                    , scrollbars : false }
                                  , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd,  pFlag:eFlag, pDeptFlag:eDeptFlag}) ;
               
              			if (rArr != undefined && rArr != null) {
              				eval(grid).setCellData( row , col , rArr[0] );
              		    	eval(grid).setCellData( row , col+2 , rArr[1] );
              			}
                      }
                 }
             }


             /*===============================================================
              ** 기능 : 재단 예산회계의 사업코드 팝업 호출(그리드)
              ** 인수 : 서브미션, 그리드명, 사업코드 오브젝트, 사업명 오브젝트, 부서컬럼, 부서명컬럼, 조회조건여부
              ** 결과 : 
              **===============================================================*/
             function onClickFndtBusiGridPopUp(subMissionId, grid, row, col, deptCdCol, deptNmCol, Flag){
                 var eBusiCd = WebSquare.text.BASE64URLEncoder(grid.getCellData(row, col)); 
                 var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
                 var  eBudgDeptCd;
                 var  vBudgDeptCd;
                 
                 gmSearchTypeFlag = "grid";
             	  gmSearchGridRow = row;
                 gmSearchGridCol = col;
             	  gmSearchGridObjID = grid.getID();  
                    
                 if(deptCdCol == ""){
             	     eBudgDeptCd = "";
             	     vBudgDeptCd = "";
                 }else{
             	     if(grid.getCellData(row, deptCdCol).length == 7 && grid.getCellData(row, deptNmCol) != ""){ //부서코드가 완전할때만 반영
             	    	  eBudgDeptCd = WebSquare.text.BASE64URLEncoder(grid.getCellData(row, deptCdCol));
             	    	  vBudgDeptCd = grid.getCellData(row, deptCdCol);
             	      }else{
             	    	 eBudgDeptCd = "" ;
             	    	 vBudgDeptCd = ""
             	         grid.setCellData(row, deptCdCol, "");
             	    	 grid.setCellData(row, deptNmCol, "");
             	      }
                 }
                
                 if(event.type == 'click'){
               	   var rArr = openPopup("onClickBusiGridPopUpCallBack","/views/gm/fndtys/GM_YS_1041.xml"
                             , { width      : 580
                               , height     : 565
                               , resizable  : false
                               , scrollbars : false }
                             , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag}) ;
             			if (rArr != undefined && rArr != null) {
             				  eval(grid).setCellData( row , col , rArr[0] );
             			      eval(grid).setCellData( row , col+2 , rArr[1] );
             			}
                 }else{
               	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/busiCd" , grid.getCellData(row, col));
               	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/acctyCd" , getValue("respFrameAcctyBass/object/acctyBass/acctyCd") );
               	  
               	  if(vBudgDeptCd.length == '0')  //부서코드가 없으면 사업테이블에서 조회/ 있으면 예산부서테이블에서 조회
                     {   
               		  execSubmission(subMissionId, "reqBudgBusiCd", "resBudgBusiCd","/fndtys/selBudgBusiCd.do");
                     }else{
                   	  WebSquare.ModelUtil.setInstanceValue( "reqBudgBusiCd/budgApplDeptCd" , vBudgDeptCd );
                   	  execSubmission(subMissionId, "reqBudgBusiCd", "resBudgBusiCd","/fndtys/selBudgDeptBusiCd.do");
                     }
               	  
               	  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgBusiCd/object/selbudgBusiCd/object");
                     rowCount = dataArr.length; 
               	  
                     if(rowCount == 1 && ((Flag == "N" && getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/useYn") == "Y") || Flag == "Y")){ //데이터가 하나면 바로 뿌려줌 
                   	  eval(grid).setCellData(row, col, getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiCd"));
                   	  eval(grid).setCellData(row, col+2, getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiNm"));  
                     }else {   //데이터가 여러개인 경우 팝업띄움 
                   	  var rArr = openPopup("onClickBusiGridPopUpCallBack","/views/gm/fndtys/GM_YS_1041.xml"
                                 , { width      : 580
                                   , height     : 565
                                   , resizable  : false
                                   , scrollbars : false }
                   	  , {pBusiCd:eBusiCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag}) ;
              
                   	  	if (rArr != undefined && rArr != null) {
                   	  		 eval(grid).setCellData( row , col , rArr[0] );
              			         eval(grid).setCellData( row , col+2 , rArr[1] );
                          }
                     }
                 }
             }


             /*===============================================================
              * function    : onClickFndtEtcIncrPopUp
              * Description : 재단 기타소득자  팝업 호출
              * Parameter   :   
              * Return      : 기타소득자 정보를 Doc로 반환
              *               여러 자료를 사용 할 수 있으므로 doc로 return 처리 함
              *               return 받아 WebSquare.xml.getValue 를 이용하여 참조 필드의 값을 참조
              **===============================================================*/
             function onClickFndtEtcIncrPopUp(incrNo, incrNm, sumissionID){
             	//    if (event.type == "click") {
             		    openPopup("etcIncrCallBack", "/views/gm/fndthg/GM_HG_2112.xml"
             		             , { width      : 700
             		             , height     : 450
             		             , resizable  : false
             		             , scrollbars : false } 
             		              , {pIncrNoID : WebSquare.text.BASE64URLEncoder(incrNo.getID()) 
             		             ,  pIncrNmID : WebSquare.text.BASE64URLEncoder(incrNm.getID())
             		             ,  pIncrNo   : WebSquare.text.BASE64URLEncoder(incrNo.getValue()) } ) ;
                 //    }
             }


             /*===============================================================
              ** 기능 : 재단 예산회계의 계정코드 팝업 호출(그리드)
              ** 인수 : 
              ** 결과 : 
              **===============================================================*/
             function onClickFndtAcntGridPopUp(acntCd, acntNm, acctyYear, acctyCd, grid, rowNum, cdCol, nmCol){
             	var rArr = openPopup("/views/gm/fndthg/GM_HG_1072.xml"
             	                       , { width      : 700
             	                         , height     : 500
             	                         , resizable  : false
             	                         , scrollbars : false }
             	                       , {pAacctyYear:acctyYear, pAcctyCd:acctyCd}) ;
                 
             	    if (rArr != undefined && rArr != null) {
             	  	    eval(grid).setCellData( rowNum , cdCol , WebSquare.xml.getValue( rArr , "acntCd"  ) );
             	  	    eval(grid).setCellData( rowNum , nmCol , WebSquare.xml.getValue( rArr , "acntNm"  ) );
             	    }
             	return rArr;
             }      


             /*===============================================================
              * function    : onClickFndtAcctPopUp
              * Description : 재단 예산회계의 계좌정보 팝업 호출
              * Parameter   : 계좌번호 object, 계좌명 object
              * Return      : null
              **===============================================================*/
             function onClickFndtAcctPopUp(acno, acctNm){
                 var vAcno = WebSquare.text.BASE64URLEncoder(acno.getValue());
             		var rArr = openPopup("onClickAcctPopUpCallBack", "/views/gm/fndthg/GM_HG_1051.xml"
             		                   , { width      : 580
             		                     , height     : 530
             		                     , resizable  : false
             		                     , scrollbars : false }
             		                   , { pAcno:vAcno
             		                	 , pAcnoId:WebSquare.text.BASE64URLEncoder(acno.getID())
             		                	 , pAcctNmId:WebSquare.text.BASE64URLEncoder(acctNm.getID())
             		                     }) ;
             }


             /*===============================================================
              * function    : onClickFndtItmgCdPopup
              * Description : 재단 관리항목 팝업 호출
              * Parameter   : itmgCd(관리항목코드 object), itmgNm(관리항목명 object), mngCd(관리코드 값)
              * Return      : 
              **===============================================================*/
             function onClickFndtItmgCdPopup(itmgCd, itmgNm, mngCd, vAcctyCd, sumissionID) {
         	    if (mngCd == "") {

         	        showMsg("C_I066", ["관리항목 계정","관리항목"]);
         	        return;
         	     }
         	 	if(typeof setNavigator != 'function') {
         	 		openNewPopup("itmgCdCallBack", "/views/gm/fndthg/GM_HG_2113.xml"
         	 	               , { width      : 500
         	             , height     : 520
         	             , resizable  : false
         	             , scrollbars : false }
         	             , {pMngCd : WebSquare.text.BASE64URLEncoder(mngCd)
         	             ,  pItmgCd : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
         	             ,  pItmgCdID : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
         	             ,  pItmgNmID : WebSquare.text.BASE64URLEncoder(itmgNm.getID())
         	             ,  pAcctyCd : WebSquare.text.BASE64URLEncoder(vAcctyCd)}) ;
         	 		return;
         	 	}
         	     openPopup("itmgCdCallBack", "/views/gm/fndthg/GM_HG_2113.xml"
         	                , { width      : 500
         	                , height     : 520
         	                , resizable  : false
         	                , scrollbars : false }
         	                , {pMngCd : WebSquare.text.BASE64URLEncoder(mngCd)
         	                ,  pItmgCd : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
         	                ,  pItmgCdID : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
         	                ,  pItmgNmID : WebSquare.text.BASE64URLEncoder(itmgNm.getID())
                           ,  pAcctyCd : WebSquare.text.BASE64URLEncoder(vAcctyCd)}) ;
           }



             /*===============================================================
              * function    : onClickFndtItmgCdUserPopup
              * Description : 재단 관리항목 팝업 호출 (관리자용)
              * Parameter   : itmgCd(관리항목코드 object), itmgNm(관리항목명 object), mngCd(관리코드 값)
              * Return      : 
              **===============================================================*/
             function onClickFndtItmgCdUserPopup(acctyYear,acctyCd, acntCd, busiCd, deptCd, mngCd,  itmgCd, itmgNm, sumissionID) {
                 if (mngCd == "") {

                    showMsg("C_I066", ["관리항목 계정","관리항목"]);                    
                    return;
                 }

                 if (event.type=="click") {
   				if(typeof setNavigator != 'function') {
                    openNewPopup("itmgCdCallBack", "/views/gm/fndthg/GM_HG_2115.xml"
                            , { width      : 500
                            , height     : 520
                            , resizable  : false
                            , scrollbars : false }
                            , {
                         	  pAcctyYear :  WebSquare.text.BASE64URLEncoder(acctyYear)
                            ,  pAcctyCd   :  WebSquare.text.BASE64URLEncoder(acctyCd)
                            ,  pAcntCd    :  WebSquare.text.BASE64URLEncoder(acntCd)
                            ,  pBusiCd    :  WebSquare.text.BASE64URLEncoder(busiCd)
                            ,  pDeptCd    :  WebSquare.text.BASE64URLEncoder(deptCd)
                            ,  pMngCd     : WebSquare.text.BASE64URLEncoder(mngCd)
                            ,  pItmgCd    : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
                            ,  pItmgCdID  : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
                            ,  pItmgNmID  : WebSquare.text.BASE64URLEncoder(itmgNm.getID())   }) ;
   					return;
                 }
                openPopup("itmgCdCallBack", "/views/gm/fndthg/GM_HG_2115.xml"
                  , { width      : 500
                  , height     : 520
                  , resizable  : false
                  , scrollbars : false } 
                  , {
               	  pAcctyYear :  WebSquare.text.BASE64URLEncoder(acctyYear)
                  ,  pAcctyCd   :  WebSquare.text.BASE64URLEncoder(acctyCd)
                  ,  pAcntCd    :  WebSquare.text.BASE64URLEncoder(acntCd)
                  ,  pBusiCd    :  WebSquare.text.BASE64URLEncoder(busiCd)
                  ,  pDeptCd    :  WebSquare.text.BASE64URLEncoder(deptCd)               
                  ,  pMngCd     : WebSquare.text.BASE64URLEncoder(mngCd)
                  ,  pItmgCd    : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
                  ,  pItmgCdID  : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
                  ,  pItmgNmID  : WebSquare.text.BASE64URLEncoder(itmgNm.getID())   }) ;
                 } else {
                 	//setValue( "reqItmg/acctyYear" , acctyYear);
                     setValue( "reqItmg/acctyCd"   , acctyCd  );
                     setValue( "reqItmg/acntCd"    , acntCd   );
                     //setValue( "reqItmg/busiCd"    , busiCd   );
                     setValue( "reqItmg/deptCd"    , deptCd   );
                     setValue( "reqItmg/mngCd"     , mngCd    );
                     setValue( "reqItmg/itmgCd"    , itmgCd.getValue()   );

                     execSubmission(sumissionID, "reqItmg", "respItmg", "/fndthg/listCracc.do");

                     var retArr = WebSquare.ModelUtil.findInstanceNodes( "respItmg/object/craccList/object" );

                     if (retArr.length != 1)
                     	openPopup("itmgCdCallBack", "/views/gm/fndthg/GM_HG_2115.xml"
                                 , { width      : 500
                                 , height     : 520
                                 , resizable  : false
                                 , scrollbars : false }
                                 , {
                              	  pAcctyYear :  WebSquare.text.BASE64URLEncoder(acctyYear)
                                 ,  pAcctyCd   :  WebSquare.text.BASE64URLEncoder(acctyCd)
                                 ,  pAcntCd    :  WebSquare.text.BASE64URLEncoder(acntCd)
                                 ,  pBusiCd    :  WebSquare.text.BASE64URLEncoder(busiCd)
                                 ,  pDeptCd    :  WebSquare.text.BASE64URLEncoder(deptCd)
                                 ,  pMngCd     : WebSquare.text.BASE64URLEncoder(mngCd)
                                 ,  pItmgCd    : WebSquare.text.BASE64URLEncoder(itmgCd.getValue())
                                 ,  pItmgCdID  : WebSquare.text.BASE64URLEncoder(itmgCd.getID())
                                 ,  pItmgNmID  : WebSquare.text.BASE64URLEncoder(itmgNm.getID())   }) ;
                     else {
                         itmgCd.setValue(getValue("respItmg/object/craccList/object[1]/itmgCd"));
                         itmgNm.setValue(getValue("respItmg/object/craccList/object[1]/itmgNm"));

                         if (typeof setItmgCdInfo == 'function') {
                   		   setItmgCdInfo("");
                   	    }
                     }
                 }
             }


             /*============================================================================
              ** 기능  : 재단 사업자(거래처) 코드 팝업, 키 입력
              ** 인수  : bizno(사업자코드 object), mtltyNm(사업자명 object), submissionId(서브미션id)
              ** 리턴  : 사업자 코드, 사업자 명 해당 object에 set 및 사업자 정보 doc 로 리턴(setBiznoInfo(retDoc) 함수를 UI에 생성 후 코딩
             ============================================================================*/
             function onClickFndtBiznoPopUp(bizno, mtltyNm, submissionId) {
                 if(event.type == 'click'){
                    openPopup("biznoPopCallback", "/views/gm/fndthg/GM_HG_2114.xml",
                                         { width      : 700
                                         , height     : 550
                                         , resizable  : false
                                         , scrollbars : false } 
                                       , {pBizno:      WebSquare.text.BASE64URLEncoder(bizno.getValue())
                                       ,  pBiznoID :   WebSquare.text.BASE64URLEncoder(bizno.getID())
                                       ,  pMtltyNmID : WebSquare.text.BASE64URLEncoder(mtltyNm.getID()) }) ;  
                  } else {
                     setValue("reqVndr/vndrCd", "" );
                     setValue("reqVndr/bizno",  bizno.getValue() );
                     execSubmission(submissionId, "reqVndr", "respVndr", "/fndthg/listHgVndrBas.do");
                     
                     var dataArr = WebSquare.ModelUtil.findInstanceNodes( "respVndr/object/vndrBasList/object" );

                     if (dataArr.length != 1) {
                        openPopup("setBiznoInfo", "/views/gm/fndthg/GM_HG_2114.xml",
                                         { width      : 700
                                         , height     : 550
                                         , resizable  : false
                                         , scrollbars : false }
                                         , {pBizno:    WebSquare.text.BASE64URLEncoder(bizno.getValue())
                                         ,  pBiznoID :   WebSquare.text.BASE64URLEncoder(bizno.getID())
                                         ,  pMtltyNmID : WebSquare.text.BASE64URLEncoder(mtltyNm.getID()) } ) ;
                     } else {
                        bizno.setValue( getValue("respVndr/object/vndrBasList/object/bizno") );
                        mtltyNm.setValue( getValue("respVndr/object/vndrBasList/object/vndrNm") );
                        
                        var doc = WebSquare.ModelUtil.findInstanceNode( "respVndr/object/vndrBasList/object" );
                        try {setBiznoInfo(doc); }
                        catch(e) {}
                     }
                  }                                          
             }


             function acntCdFndtOpenPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, popGbn){
             	if (selectGbn == null) selectGbn = " ";
             	if (selectValue == null) selectValue = " ";
             	if (selectGbn1 == null) selectGbn1 = " ";
             	if (selectValue1 == null) selectValue1 = " ";
             	if (popGbn == "2") {
             	    openNewPopup("acntCdPopUpCallBack", "/views/gm/fndthg/GM_HG_1072.xml"
                         , { width      : 800
                           , height     : 530
                           , resizable  : false
                           , scrollbars : false } 
                           , {pAacctyYear:    WebSquare.text.BASE64URLEncoder(acctyYear)
                           ,  pAcctyCd:       WebSquare.text.BASE64URLEncoder(acctyCd)
                           ,  pSelectGbn :    WebSquare.text.BASE64URLEncoder(selectGbn)
                           ,  pSelectValue :  WebSquare.text.BASE64URLEncoder(selectValue)
                           ,  pSelectGbn1 :   WebSquare.text.BASE64URLEncoder(selectGbn1)
                           ,  pSelectValue1 : WebSquare.text.BASE64URLEncoder(selectValue1)
                           ,  pAcntCd :       WebSquare.text.BASE64URLEncoder(acntCd.getValue())
                           ,  pAcntCdID :     WebSquare.text.BASE64URLEncoder(acntCd.getID())
                           ,  pAcntNmID :     WebSquare.text.BASE64URLEncoder(acntNm.getID())     }) ;
             	} else {
             		openPopup("acntCdPopUpCallBack", "/views/gm/fndthg/GM_HG_1072.xml"
             	            , { width      : 800
             	              , height     : 530
             	              , resizable  : false
             	              , scrollbars : false } 
             	              , {pAacctyYear:    WebSquare.text.BASE64URLEncoder(acctyYear)
             	              ,  pAcctyCd:       WebSquare.text.BASE64URLEncoder(acctyCd)
             	              ,  pSelectGbn :    WebSquare.text.BASE64URLEncoder(selectGbn)
             	              ,  pSelectValue :  WebSquare.text.BASE64URLEncoder(selectValue)
             	              ,  pSelectGbn1 :   WebSquare.text.BASE64URLEncoder(selectGbn1)
             	              ,  pSelectValue1 : WebSquare.text.BASE64URLEncoder(selectValue1)
             	              ,  pAcntCd :       WebSquare.text.BASE64URLEncoder(acntCd.getValue())
             	              ,  pAcntCdID :     WebSquare.text.BASE64URLEncoder(acntCd.getID())
             	              ,  pAcntNmID :     WebSquare.text.BASE64URLEncoder(acntNm.getID())     }) ;
             	}
             }


             /*===============================================================
              * function    : onChangeFndtEtcIncr
              * Description : 재단 기타소득자 조회
              * Parameter   : subId(서브미션 id), etcIncrNo(기타소득자 입력 object)
              * Return      : 
              **===============================================================*/
             function onChangeFndtEtcIncr(subId, etcIncrNo, etcIncrNm) {
                 if (etcIncrNo.getValue() == "") return;
                 
                 setValue( "reqEtc/etcIncrNo" ,  etcIncrNo.getValue());
                 
                 execSubmission(subId, "reqEtc", "respEtc", "/fndthg/listBusiEtcIncrBass.do");
                 
                 var retArr = WebSquare.ModelUtil.findInstanceNodes( "respEtc/object/busiEtcIncrBassList/object" );

                 if (retArr.length != 1) 
                 	var retDoc = onClickFndtEtcIncrPopUp(etcIncrNo, etcIncrNm, subId);
                 else {    
                 	var retDoc = getInstanceNode("respEtc/object/busiEtcIncrBassList/object");
                 }
                 
                 return retDoc;
             }

             /*===============================================================
              * function    : searchFndtAcct
              * Description : 재단 예산회계의 계좌정보를 조회
              * Parameter   : 계좌번호 object, 계좌명 object, 서브미션
              * Return      : null
              **===============================================================*/
             function searchFndtAcct(acno, acctNm, subMissionId){
             	 var vAcno = acno.getValue();
             	     
             	 if(vAcno.length<2){
             		 showMsg("C_I054", "계좌번호/명을 두자리이상");
             	     return;
             	 }
             	     
             	 acno.blur();
             	     
             	 WebSquare.ModelUtil.setInstanceValue( "reqAcct/pAcno" , vAcno );
             	 execSubmission(subMissionId, "reqAcct", "resAcct","/fndthg/listAcct.do");
             	 
             	 var retArr = WebSquare.ModelUtil.findInstanceNodes( "resAcct/object/acctList/object" );
             	     
             	 if( retArr.length == 1){
             		 acno.setValue(WebSquare.xml.getValue( retArr[0] , "acno"));
             		 acctNm.setValue(WebSquare.xml.getValue( retArr[0] , "acctNm"));
             		 
             		 return retArr[0];
                 }
                 else{
                 	return onClickFndtAcctPopUp(acno, acctNm); 
                 }
             }


             /*===============================================================
              * function    : onChangeFndtItmgCdPopup
              * Description : 재단 관리항목 팝업 호출
              * Parameter   : itmgCd(관리항목코드 object), itmgNm(관리항목명 object), mngCd(관리코드 값), subId(서브미션 id)
              * Return      : 
              **===============================================================*/
             function onChangeFndtItmgCdPopup(itmgCd, itmgNm, mngCd, vAcctyCd, subId) {
                 if (mngCd == "") {

                    showMsg("C_I066", ["관리항목 계정","관리항목"]);    
                    return;
                 }

                 if (itmgCd.getValue() == "") return;

                 setValue( "reqItmg/mngCd" ,  mngCd);
                 setValue( "reqItmg/acctyCd" ,  vAcctyCd);
                 setValue( "reqItmg/itmgCd" , itmgCd.getValue());
                 setValue( "reqItmg/flag"  , "N");

                 execSubmission(subId, "reqItmg", "respItmg", "/fndthg/listItmgCd.do");

                 var retArr = WebSquare.ModelUtil.findInstanceNodes( "respItmg/object/itmgCdList/object" );

                 if (retArr.length != 1)
                 	onClickFndtItmgCdPopup(itmgCd, itmgNm, mngCd, vAcctyCd);
                 else {
                     itmgCd.setValue(getValue("respItmg/object/itmgCdList/object[1]/itmgCd"));
                     itmgNm.setValue(getValue("respItmg/object/itmgCdList/object[1]/itmgNm"));

                     if (typeof setItmgCdInfo == 'function') {
              		   setItmgCdInfo("");
              	   	  }
                 }
             }
             
             /*===============================================================
              * function    : onClickAcntCdPopUp
              * Description : 계정코드 팝업 호출
              * Parameter   : 계정코드/명 오브젝트
              *               회계년도/회곅구분코드 Param
              *               선택 구분 - "1" : 전표입력여부 (전표입력여부가 'Y'인 것만 선택 가능)
              *                       "2" : 계정분류코드 ( 코드가 10,20,30 인 것만 선택 가능)
              *                       "3" : 계정분류코드 ( 코드가 40,50,50 인 것만 선택 가능)
              *                       "4" : 계정레벨 ( 계정레벨이 selectValue 인 것만 선택 가능)
              *                       "5" : 계정례벨 ( 계정 레벨이 SelectValue 보다 하위 인것만 선택 가능 )
             						 "6" : 계정례벨 ( 계정 레벨이 SelectValue 보다 상위 인것만 선택 가능 )
              *                       "7" : 예산 계정여부 값에 따라   (selectValue : Y,N )  - 에산 계정일때만 사용
              *                       "8" : 관리코드 있는것만 조회
              *                       "9" : 계정분류코드 (10,20,30,60,80)
              *                       "10" : 해당 관리코드만 선택 가능                       
              *               선택 값 : 선택 구분이 "4", "5" 일 경우만 사용 ( 계층 레벨 값)  
              *               선택 구분1  ( 조건이 2개일 경우 )
              *               선택 값1   ( 조건이 2개일 경우 )
              *               subMissionId : keyUp 이벤트에서 호출시 사용할 sumission ID
              *               popGbn : 팝업 구분  (null, "1" : UI에서 팝업 호출, "2" : 팝업에서 호출)
              * Return      : 계정정보를 Doc로 반환
              *               기본적으로 parma의 acntCd, acntNm에 값을 넣고 계정코드와 명 이외의 값을 참조할 경우
              *               return 받아 WebSquare.xml.getValue 를 이용하여 참조 필드의 값을 참조
              *               화면에서 계정코드의 정보를 활용할 경우 setAcntCdInfo(retDoc) 함수를 만들어 retDoc안의 내용을 가지고 처리
              **===============================================================*/
             function onClickFndtAcntCdPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, subMissionId, popGbn){
             	if(event.type == 'click'){
             		acntCdFndtOpenPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, popGbn);
             	} else {
             		setValue("reqAcnt/acntCd", acntCd.getValue());
                     setValue("reqAcnt/acctyCd", acctyCd);
                     setValue("reqAcnt/acctyYear", acctyYear);
                     
                     execSubmission(subMissionId, "reqAcnt", "respAcnt", "/fndthg/listAcntBass.do");
                     
                     var dataArr = WebSquare.ModelUtil.findInstanceNodes( "respAcnt/object/acntList/object" );
                     
                     if (dataArr.length != 1) {
                   	  acntCdFndtOpenPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, popGbn); 
                     } else {
                     	 // 해당 조회 값에 따라 선택 유무 처리
                        var cnt = 1;  
                        if (selectGbn != "" || selectValue != "" || selectGbn1 != "" || selectValue1 != "")  {
                          if (selectGbn == "1" || selectGbn1 == "1") {                 // 전표 입력 가능 여부     	
                              if (getValue("respAcnt/object/acntList/object/slipInptYn") != "Y" ) cnt--;
                          } 
                          if (selectGbn == "2" || selectGbn1 == "2") {          // 계정분류코드 (10,20,30)   
                              if (getValue("respAcnt/object/acntList/object/acntClsCd") != "10" &&
                     		     getValue("respAcnt/object/acntList/object/acntClsCd") != "20" &&
                     		     getValue("respAcnt/object/acntList/object/acntClsCd") != "30" ) cnt--;
                          } 
                          if (selectGbn == "3" || selectGbn1 == "3") {          // 계정분류코드(40,50,60)
                     	     if (getValue("respAcnt/object/acntList/object/acntClsCd") != "40" &&
                        		     getValue("respAcnt/object/acntList/object/acntClsCd") != "50" &&
                        		     getValue("respAcnt/object/acntList/object/acntClsCd") != "60" ) cnt--;
                          } 
                          if (selectGbn == "4" || selectGbn1 == "4") {          // selectValue에 있는 레벨과 동일한거
                     	     if (selectGbn  == "4" && getValue("respAcnt/object/acntList/object/acntLevel") != selectValue ) cnt--;
                     	     if (selectGbn1 == "4" && getValue("respAcnt/object/acntList/object/acntLevel") != selectValue1 ) cnt--;
                          }
                          if (selectGbn == "5" || selectGbn1 == "5") {          // selectValue에 있는 레델의 이하 등급만 선택 가능
                     	     if (selectGbn  == "5" && getValue("respAcnt/object/acntList/object/acntLevel") < selectValue ) cnt--;
                     	     if (selectGbn1 == "5" && getValue("respAcnt/object/acntList/object/acntLevel") < selectValue1 ) cnt--;
                          }
                          if (selectGbn == "6" || selectGbn1 == "6") {          // selectValue에 있는 레델의 이하 등급만 선택 가능
                     	     if (selectGbn  == "6" && getValue("respAcnt/object/acntList/object/acntLevel") > selectValue ) cnt--;
                     	     if (selectGbn1 == "6" && getValue("respAcnt/object/acntList/object/acntLevel") > selectValue1 ) cnt--;
                          }
                          if (selectGbn == "7" || selectGbn1 == "7") {          // 예산 계정
                     	     if (selectGbn  == "7" && getValue("respAcnt/object/acntList/object/budgAcntYn") != selectValue ) cnt--;
                     	     if (selectGbn1 == "7" && getValue("respAcnt/object/acntList/object/budgAcntYn") != selectValue1 ) cnt--;
                          }
                          if (selectGbn == "8" || selectGbn1 == "8") {          // 관리코드 있는것만 조회
                       	     if (getValue("respAcnt/object/acntList/object/mngCd") == "" || getValue("respAcnt/object/acntList/object/mngCd") == null) cnt--;
                          }
                          if (selectGbn == "9" || selectGbn1 == "9") {
                     	     if (getValue("respAcnt/object/acntList/object/acntClsCd") != "10" &&
                                  getValue("respAcnt/object/acntList/object/acntClsCd") != "20" &&
                            	     getValue("respAcnt/object/acntList/object/acntClsCd") != "30" &&
                            	     getValue("respAcnt/object/acntList/object/acntClsCd") != "60" &&
                            	     getValue("respAcnt/object/acntList/object/acntClsCd") != "80"    ) cnt--;
                          }
                          if (selectGbn == "10" || selectGbn1 == "10") {
                     	     if (selectGbn  == "10" && getValue("respAcnt/object/acntList/object/mngCd") != selectValue ) cnt--;
                     	     if (selectGbn1 == "10" && getValue("respAcnt/object/acntList/object/mngCd") != selectValue1 ) cnt--;
                          }

                  //      if (selectGbn != "7" && selectGbn1 != "7")
                  //   	   if (getValue("respAcnt/object/acntList/object/slipInptYn") != "Y" ) cnt--;
                          if (getValue("respAcnt/object/acntList/object/acntUseYn") == "N") cnt--;
                        }                      
                        
                        
                        if (cnt == 1) {
                     	   acntCd.setValue(getValue("respAcnt/object/acntList/object/acntCd"));
                            acntNm.setValue(getValue("respAcnt/object/acntList/object/acntNm"));
                            var doc = WebSquare.ModelUtil.findInstanceNode( "respAcnt/object/acntList/object" );
                            
                            try {
                      	      setAcntCdInfo(doc);
                      	    }
                      	    catch(e){}
                        } else 
                       	 acntCdFndtOpenPopUp(acntCd, acntNm, acctyYear, acctyCd, selectGbn, selectValue, selectGbn1, selectValue1, popGbn); 
             	    }
             	}
             	 
             }
             
             
             //재단용  사용자 조회
             function gmFndtUserSearch(textObj, nameObj) {
           		gmSearchTypeFlag = "form";
           		gmTextObjID = textObj.getID();
           		gmNameObjID = nameObj.getID();
           		
           		nameObj.setValue("");
           		var value = textObj.getValue();
           		textObj.setValue("");
           		
           		WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
           		if(event.type != 'click') {
           			if(value.length < 1) {
           				nameObj.setValue("");
           				return;
           			} else if(value.length < 1) {
           				showMsg("C_I054", "사번/성명을 1자 이상");
           				return;
           			}
           		} 
           		getGmFndtUserInfo(event.type, value, arguments[2], arguments[3], arguments[4], arguments[5],arguments[6]);
           	}

             	
               //재단용  사용자 조회(그리드)
           	function gmFndtUserSearchGrid(grid , row , col, initCols) {
           		gmSearchTypeFlag = "grid";
           		gmSearchGridRow = row;
           		gmSearchGridCol = col;
           		gmSearchGridObjID = grid.getID();

           		grid.setCellData( row , col+2 , "" );
           		var value = grid.getCellData(row, col);
           		grid.setCellData( row , col , "" );
           		
           		WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
           		
           		if(initCols != undefined) {
           			for(var index in initCols) {
           				if(initCols[index] != "") {
           					grid.setCellData( row , initCols[index] , "" );	
           				}
           			}
           		}

           		if(event.type != "click"){
           			if(value.length < 1) {
           				return;
           			} else if(value.length < 1) {
           				showMsg("C_I054", "사번/성명을 1자 이상");
           				return;
           			}
           		} 
           		
           		getGmFndtUserInfo(event.type, value, arguments[4], arguments[5], arguments[6], arguments[7]);
           	}
           	
           	
          	/*============================================================================
           	** 기능  : 재단용 교직원 조회 팝업
           	** 인수  : value
           	** 리턴  : 
           	============================================================================*/
           	function getGmFndtUserInfo(type, value) {
           		var arrResult = new Array();
           		var clsfLCdValue = arguments[2];
           		var jobcCdValue = arguments[3];
           		var orgCd = arguments[4];
           		var roleCheck = arguments[5];
           		var bmGb = arguments[6];
           		
           		var encodeValue = "";
           		var encodeJobcCdValue = "";
           		var encodeClsfLCdValue = "";
           		var encodeOrgCd = "";
           		var encodeLoginOrgCd = "";
           		var encodeRoleCheck = "";
           		var encodeBmGb = "";
           		if(value != "") {
           			encodeValue = WebSquare.text.BASE64URLEncoder(value);
           		}
           		
           		if(orgCd != undefined) {
           			if(orgCd != "") {
           				encodeOrgCd = WebSquare.text.BASE64URLEncoder(orgCd);
           			} 
           			setValue("requestGmSearchUser/orgCd", orgCd);
           		}
           		
           		if(roleCheck != undefined) {
           			if(roleCheck != "") {
           				encodeRoleCheck = WebSquare.text.BASE64URLEncoder(roleCheck);
           			} 
           		}
           		
           		if(clsfLCdValue != undefined) {
           			if(clsfLCdValue != "") {
           				encodeClsfLCdValue = WebSquare.text.BASE64URLEncoder(clsfLCdValue);
           			} 
           			setValue("requestGmSearchUser/selectClsfLCd", clsfLCdValue);	
           		}

           		if(jobcCdValue != undefined) {
           			if(jobcCdValue != "") {
           				encodeJobcCdValue = WebSquare.text.BASE64URLEncoder(jobcCdValue);
           			} 
           			setValue("requestGmSearchUser/selectJobcCd", jobcCdValue);	
           		}
           		
           		if(bmGb != undefined) {
           			if(bmGb != "") {
           				encodeBmGb = WebSquare.text.BASE64URLEncoder(bmGb);
           			} 
           			setValue("requestGmSearchUser/bmGb", bmGb);	
           		}
           		
           		
           	    setValue("requestGmSearchUser/eno", value);
           	    
           		if(type == "click") {
           			if(typeof setNavigator != 'function') {
           				openNewPopup( "setGmFndtUserPopupValue", "/views/gm/fndthg/GM_HG_9001.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, roleCheck:encodeRoleCheck, pBmGb:encodeBmGb});
           				return;
           			}
           			openPopup( "setGmFndtUserPopupValue", "/views/gm/fndthg/GM_HG_9001.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, roleCheck:encodeRoleCheck, pBmGb:encodeBmGb});
           			return;
           		}
           		
           	    execSubmission("getCommonDataSubm", "requestGmSearchUser", "responseGmSearchUser", "/fndthg/listCorpUser.do");
           	    
           	    var dataArr = WebSquare.ModelUtil.findInstanceNodes("responseGmSearchUser/object/userList/object");
           	    var rowCount = dataArr.length;
           	    
           	    if(rowCount == 1) {
           	    	arrResult.push(getValue("responseGmSearchUser/object/userList/object/eno"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/stafNm"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/iidno"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/birth"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/sexDvcd"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/sexDvcdNm"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/clsfCd"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/clsfNm"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/deptCd"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/deptNm"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatCd"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatDt"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/hffcStatNm"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/nltyCd"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/nltyCdNm"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/salcCd"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/salcNm"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payFormCd"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payFormCdNm"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/rtirDt"));      
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/jobcCd"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/jobcCdNm"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payBankCd"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payBankCdNm"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payAcno"));
           	        arrResult.push(getValue("responseGmSearchUser/object/userList/object/payDepoNm"));
           	        
           	        WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUser" );
           	        
           	        setGmFndtUserPopupValue(arrResult);
           	    } else if(rowCount > 1) {
           	    	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUser" );
           	    	if(typeof setNavigator != 'function') {
           				openNewPopup( "setGmFndtUserPopupValue", "/views/gm/fndthg/GM_HG_9001.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, roleCheck:encodeRoleCheck, pBmGb:encodeBmGb});
           				return;
           			}
           	    	openPopup( "setGmFndtUserPopupValue", "/views/gm/fndthg/GM_HG_9001.xml", {width: 800, height:550}, {eno:encodeValue, jobcCd:encodeJobcCdValue, clsfLCd:encodeClsfLCdValue, orgCd:encodeOrgCd, roleCheck:encodeRoleCheck, pBmGb:encodeBmGb});
           	    } else if(rowCount == 0) {
           	    	showMsg("C_I041", "사번/성명으로 검색한 결과");
           	    }
           	}

           	/*============================================================================
           	** 기능  : 재단용 교직원 조회 팝업 후에 수행됨
           	** 인수  : arrResult
           	** 리턴  : 
           	============================================================================*/
           	function setGmFndtUserPopupValue(arrResult) {
           		if(arrResult == undefined) {
           			return;
           		}
           		
           		setValue("responseGmSearchUserInfo/eno",arrResult[0]);       
           	    setValue("responseGmSearchUserInfo/stafNm",arrResult[1]);    
           	    setValue("responseGmSearchUserInfo/iidno",arrResult[2]);     
           	    setValue("responseGmSearchUserInfo/birth",arrResult[3]);     
           	    setValue("responseGmSearchUserInfo/sexDvcd",arrResult[4]);     
           	    setValue("responseGmSearchUserInfo/sexDvcdNm",arrResult[5]);   
           	    setValue("responseGmSearchUserInfo/clsfCd",arrResult[6]);    
           	    setValue("responseGmSearchUserInfo/clsfNm",arrResult[7]);    
           	    setValue("responseGmSearchUserInfo/deptCd",arrResult[8]);    
           	    setValue("responseGmSearchUserInfo/deptNm",arrResult[9]);    
           	    setValue("responseGmSearchUserInfo/hffcStatCd",arrResult[10]);
           	    setValue("responseGmSearchUserInfo/hffcStatDt",arrResult[11]);
           	    setValue("responseGmSearchUserInfo/hffcStatNm",arrResult[12]);
           	    setValue("responseGmSearchUserInfo/nltyCd",arrResult[13]);
           	    setValue("responseGmSearchUserInfo/nltyCdNm",arrResult[14]);
           	    setValue("responseGmSearchUserInfo/salcCd",arrResult[15]); 
           	    setValue("responseGmSearchUserInfo/salcNm",arrResult[16]); 
           	    setValue("responseGmSearchUserInfo/payFormCd",arrResult[17]); 
           	    setValue("responseGmSearchUserInfo/payFormCdNm",arrResult[18]); 
           	    setValue("responseGmSearchUserInfo/rtirDt",arrResult[19]);
           	    setValue("responseGmSearchUserInfo/jobcCd",arrResult[20]);
           	    setValue("responseGmSearchUserInfo/jobcCdNm",arrResult[21]); 
           	    setValue("responseGmSearchUserInfo/payBankCd",arrResult[22]); 
           	    setValue("responseGmSearchUserInfo/payBankCdNm",arrResult[23]); 
           	    setValue("responseGmSearchUserInfo/payAcno",arrResult[24]); 
           	    setValue("responseGmSearchUserInfo/payDepoNm",arrResult[25]);

           	    if(gmSearchTypeFlag == "form") {
           	    	eval(gmTextObjID).setValue( arrResult[0] );
           	    	eval(gmNameObjID).setValue( arrResult[1] );
           	    	
           	    	//화면에서 부가정보를 사용할 경우에  gmUserSearchFormCallBack 함수를 만들어 놓고 사용한다
           	    	if (typeof gmUserSearchFormCallBack == 'function') {
           	    		gmUserSearchFormCallBack(arrResult);
           	    	}
           			return;
           		}
           		
           		eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
           		eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );
           		
           		//화면에서 부가정보를 사용할 경우에  gmUserSearchGridCallBack 함수를 만들어 놓고 사용한다
           		if (typeof gmUserSearchGridCallBack == 'function') {
           			gmUserSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
           		}
           	}
           	
               /*===============================================================
                * function    : gyeomJikDeptFndtSearch
                * Description : 회계 겸직 부서 팝업(법인)
                * Parameter   : 부서코드obj , 부서명obj, submission
                * Return      : null
                **===============================================================*/
               function gyeomJikDeptFndtSearch(reslDeptCd,reslDeptNm,reslEno, subMissionId){
               	var reslDeptCdID = WebSquare.text.BASE64URLEncoder(reslDeptCd.getID());
               	var reslDeptNmID  = WebSquare.text.BASE64URLEncoder(reslDeptNm.getID());
               	var pReslDeptCd = WebSquare.text.BASE64URLEncoder(reslDeptCd.getValue());
               	var eno = WebSquare.text.BASE64URLEncoder(reslEno.getValue());
               	if(event.type == 'click'){
               		if(typeof setNavigator != 'function') {
                   		var rArr = openNewPopup("gyeomJikDeptSearchCallBack","/views/gm/fndthg/GM_HG_2017.xml"
      		                   , { width      : 580
      		                     , height     : 530
      		                     , resizable  : false
      		                     , scrollbars : false }
      		                   , {pReslDeptCd:pReslDeptCd,reslDeptCdID:reslDeptCdID,reslDeptNmID:reslDeptNmID, pEno:eno}) ;
               			return;
               		}
               		var rArr = openPopup("gyeomJikDeptSearchCallBack","/views/gm/fndthg/GM_HG_2017.xml"
     		                   , { width      : 580
     		                     , height     : 530
     		                     , resizable  : false
     		                     , scrollbars : false }
     		                   , {pReslDeptCd:pReslDeptCd,reslDeptCdID:reslDeptCdID,reslDeptNmID:reslDeptNmID, pEno:eno}) ;
               		return;
               	}else{
               		  WebSquare.ModelUtil.setInstanceValue( "reqGeyomJikDept/reslDeptCd" , reslDeptCd.getValue());
               		  WebSquare.ModelUtil.setInstanceValue( "reqGeyomJikDept/reslEno" , reslEno.getValue());
               		  execSubmission(subMissionId, "reqGeyomJikDept", "resGeyomJikDept","/fndthg/listGeyomJikDept.do");
               		  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resGeyomJikDept/object/gyeomJikDeptList/object");
               	      rowCount = dataArr.length;
               	      if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
               		  	  var arrResult = new Array();
               		      arrResult.push(getValue("resGeyomJikDept/object/gyeomJikDeptList/object[1]/deptCd"));
               		      arrResult.push(getValue("resGeyomJikDept/object/gyeomJikDeptList/object[1]/deptNm"));
               		      gyeomJikDeptSearchCallBack(arrResult,reslDeptCd.getID(),reslDeptNm.getID());
               	      }else if(rowCount == 0){
               	    	    reslDeptCd.setValue("");
               	    	    reslDeptNm.setValue("");
               	        	showMsg("C_I041", "검색한 결과");
               	        	
               	      }else {   //데이터가 여러개인 경우 팝업띄움 
                     		if(typeof setNavigator != 'function') {
                           		var rArr = openNewPopup("gyeomJikDeptSearchCallBack","/views/gm/fndthg/GM_HG_2017.xml"
              		                   , { width      : 580
              		                     , height     : 530
              		                     , resizable  : false
              		                     , scrollbars : false }
              		                   , {pReslDeptCd:pReslDeptCd,reslDeptCdID:reslDeptCdID,reslDeptNmID:reslDeptNmID, pEno:eno}) ;
                       			return;
                       		}
                       		var rArr = openPopup("gyeomJikDeptSearchCallBack","/views/gm/fndthg/GM_HG_2017.xml"
             		                   , { width      : 580
             		                     , height     : 530
             		                     , resizable  : false
             		                     , scrollbars : false }
             		                   , {pReslDeptCd:pReslDeptCd,reslDeptCdID:reslDeptCdID,reslDeptNmID:reslDeptNmID, pEno:eno}) ;
                       		return;
               		  }
               	}
               }
               
               
  /*============================================================================
  ** 기능  : 학생등록금/장학금
  ** 인수  : grid,row,col,초기화컬럼,년도,학기,조직분류코드
  ** 리턴  : 결과배열, 노드생성
      "snoSchoPopupInfo/sno"      학번               
      "snoSchoPopupInfo/stduNm"   성명             
      "snoSchoPopupInfo/juminNo"  주민번호             
      "snoSchoPopupInfo/dpmjNm"   학과명           
      "snoSchoPopupInfo/majorNm"  전공           
      "snoSchoPopupInfo/sumTuition" 등록금             
      "snoSchoPopupInfo/sumScho"    장학금지급액              
      "snoSchoPopupInfo/exAmt"      차감액            
  ============================================================================*/
  function snoSchoSearchGrid(grid , row , col, initCols) {
  	gmSearchTypeFlag = "grid";
  	gmSearchGridRow = row;
  	gmSearchGridCol = col;
  	gmSearchGridObjID = grid.getID();

  	grid.setCellData( row , col+2 , "" );
  	var value = grid.getCellData(row, col);
  	grid.setCellData( row , col , "" );
  	
  	WebSquare.ModelUtil.removeChildNodes( "snoSchoPopupInfo" );
  	
  	if(initCols != undefined) {
  		for(var index in initCols) {
  			if(initCols[index] != "") {
  				grid.setCellData( row , initCols[index] , "" );	
  			}
  		}
  	}

  	if(event.type != "click"){
  		if(value.length < 1) {
  			return;
  		} else if(value.length < 2) {
  			showMsg("C_I054", "학번/성명을 2자 이상");
  			return;
  		}
  	} 
  	
  	getSnoSchoPopupInfo(event.type, value,arguments[4],arguments[5],arguments[6]);
  }

  /*============================================================================
  ** 기능  : 학생등록금/장학금조회 팝업
  ** 인수  : 학번/성명,년도,학기
  ** 파라미터 : arguments[2]-> 년도, arguments[3]->학기 arguments[4] -> 조직분류
  ** 리턴  : 
      "snoSchoPopupInfo/sno"      학번               
      "snoSchoPopupInfo/stduNm"   성명             
      "snoSchoPopupInfo/juminNo"  주민번호             
      "snoSchoPopupInfo/dpmjNm"   학과명           
      "snoSchoPopupInfo/majorNm"  전공           
      "snoSchoPopupInfo/sumTuition" 등록금             
      "snoSchoPopupInfo/sumScho"    장학금지급액              
      "snoSchoPopupInfo/exAmt"      차감액            
  ============================================================================*/
  function snoSchoPopupSearch(textObj, nameObj) {
      gmSearchTypeFlag = "form";
      gmTextObjID = textObj.getID();
      gmNameObjID = nameObj.getID();
      
      nameObj.setValue("");
      var searchSnoValue = textObj.getValue();
      textObj.setValue("");
      WebSquare.ModelUtil.removeChildNodes( "snoSchoPopupInfo" );
      if(event.type != 'click') {
          if(searchSnoValue.length < 1) {
              nameObj.setValue("");
              return;
          } else if(searchSnoValue.length < 2) {
              showMsg("C_I054", "학번/성명을 2자 이상");
              return;
          }
      } 
      getSnoSchoPopupInfo(event.type, searchSnoValue, arguments[2], arguments[3] ,arguments[4]);
  }
/*============================================================================
** 기능  : 학생등록금/장학금 조회 팝업
** 인수  : value
** 리턴  : 
============================================================================*/
function getSnoSchoPopupInfo(type, searchSnoValue) {
    var arrResult = new Array();
    var year  = arguments[2];
    var smrCd = arguments[3];
    var orgClsCd = arguments[4];
    var encodeSearchSnoValue = "";
    var encodeYear = "";
    var encodeSmrCd = "";
    var encodeOrgClsCd = "";
    if(searchSnoValue != undefined) {
	    if(searchSnoValue != "") {
	    	encodeSearchSnoValue = WebSquare.text.BASE64URLEncoder(searchSnoValue);
	    }
        setValue("reqSnoSchoPopupInfo/sno", searchSnoValue);
    }
    if(year != undefined) {
        if(year != "") {
            encodeYear = WebSquare.text.BASE64URLEncoder(year);
        } 
        setValue("reqSnoSchoPopupInfo/year", year);
    }

    if(smrCd != undefined) {
        if(smrCd != "") {
            encodeSmrCd = WebSquare.text.BASE64URLEncoder(smrCd);
        } 
        setValue("reqSnoSchoPopupInfo/smrCd", smrCd);
    }

    if(orgClsCd != undefined) {
        if(orgClsCd != "") {
            encodeOrgClsCd = WebSquare.text.BASE64URLEncoder(orgClsCd);
        } 
        setValue("reqSnoSchoPopupInfo/orgClsCd", orgClsCd);
    }
   
    if(type == "click") {
        openPopup( "setSnoSchoPopupValue", "/views/gm/co/GM_CO_2060_Popup.xml", {width: 950, height:650}, {sno:encodeSearchSnoValue,year:encodeYear,smrCd:encodeSmrCd,orgClsCd:encodeOrgClsCd});
        return;                                                                                                               
    }                                                                                                                         
        
    execSubmission("getCommonDataSubm", "reqSnoSchoPopupInfo", "snoSchoPopupInfo", "/gm/listDonaPaytStud.do");
    
    var dataArr = WebSquare.ModelUtil.findInstanceNodes("snoSchoPopupInfo/object/snoSchoList/object");
    var rowCount = dataArr.length;
    
    if(rowCount == 1) {
        arrResult.push(getValue("snoSchoPopupInfo/object/snoSchoList/object/sno"));       
        arrResult.push(getValue("snoSchoPopupInfo/object/snoSchoList/object/studNm"));       
        arrResult.push(getValue("snoSchoPopupInfo/object/snoSchoList/object/juminNo"));       
        arrResult.push(getValue("snoSchoPopupInfo/object/snoSchoList/object/dpmjNm"));     
        arrResult.push(getValue("snoSchoPopupInfo/object/snoSchoList/object/mjorNm"));    
        arrResult.push(getValue("snoSchoPopupInfo/object/snoSchoList/object/sumTuition"));      
        arrResult.push(getValue("snoSchoPopupInfo/object/snoSchoList/object/sumScho"));        
        arrResult.push(getValue("snoSchoPopupInfo/object/snoSchoList/object/sumPaytAmt"));        
        arrResult.push(getValue("snoSchoPopupInfo/object/snoSchoList/object/exAmt"));    
         
        WebSquare.ModelUtil.removeChildNodes( "snoSchoPopupInfo" );
        
        setSnoSchoPopupValue(arrResult);
    } else if(rowCount > 1) {
        WebSquare.ModelUtil.removeChildNodes( "snoSchoPopupInfo" );
        openPopup( "setSnoSchoPopupValue", "/views/gm/co/GM_CO_2060_Popup.xml", {width: 950, height:650}, {sno:encodeSearchSnoValue,year:encodeYear,smrCd:encodeSmrCd,orgClsCd:encodeOrgClsCd});
    } else if(rowCount == 0) {
        showMsg("C_I041", "학번/성명으로 검색한 결과");
    }
}

/*============================================================================
** 기능  : 학생등록금/장학금 조회 팝업 후에 수행됨
** 인수  : arrResult
** 리턴  : 
============================================================================*/
function setSnoSchoPopupValue(arrResult) {
    if(arrResult == undefined) {
        return;
    }
    
    setValue("snoSchoPopupInfo/sno"         ,arrResult[0]);       
    setValue("snoSchoPopupInfo/studNm"      ,arrResult[1]);     
    setValue("snoSchoPopupInfo/juminNo"     ,arrResult[2]);     
    setValue("snoSchoPopupInfo/dpmjNm"      ,arrResult[3]);    
    setValue("snoSchoPopupInfo/mjorNm"      ,arrResult[4]);     
    setValue("snoSchoPopupInfo/sumTuition"  ,arrResult[5]);     
    setValue("snoSchoPopupInfo/sumScho"     ,arrResult[6]);   
    setValue("snoSchoPopupInfo/sumPaytAmt"  ,arrResult[7]);
    setValue("snoSchoPopupInfo/exAmt"       ,arrResult[8]);  

    if(gmSearchTypeFlag == "form") {
        eval(gmTextObjID).setValue( arrResult[0] );
        eval(gmNameObjID).setValue( arrResult[1] );
        
        //화면에서 부가정보를 사용할 경우에  gmDrverSearchFormCallBack 함수를 만들어 놓고 사용한다
        if (typeof gmDrverSearchFormCallBack == 'function') {
            gmDrverSearchFormCallBack(arrResult);
        }
        return;
    }
    eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
    eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );

    if(eval(gmSearchGridObjID).getColumnIndex("juminNo")!= undefined)
    {
    	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "juminNo" , arrResult[2] );
    }

    if(eval(gmSearchGridObjID).getColumnIndex("dpmjNm")!= undefined)
    {
    	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "dpmjNm" , arrResult[3] );
    }
    
    if(eval(gmSearchGridObjID).getColumnIndex("mjorNm")!= undefined)
    {
    	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "mjorNm" , arrResult[4] );
    }

    if(eval(gmSearchGridObjID).getColumnIndex("sumTuition")!= undefined)
    {
    	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "sumTuition" , arrResult[5] );
    }

    if(eval(gmSearchGridObjID).getColumnIndex("sumScho")!= undefined)
    {
    	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "sumScho" , arrResult[6] );
    }
    
    if(eval(gmSearchGridObjID).getColumnIndex("sumPaytAmt")!= undefined)
    {
    	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "sumPaytAmt" , arrResult[7] );
    }

    if(eval(gmSearchGridObjID).getColumnIndex("exAmt")!= undefined)
    {
    	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "exAmt" , arrResult[8] );
    }
    
    //화면에서 부가정보를 사용할 경우에  gmSnoSchoSearchGridCallBack 함수를 만들어 놓고 사용한다
    if (typeof gmSnoSchoSearchGridCallBack == 'function') {
        gmSnoSchoSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
    }
}      

/*============================================================================
 ** 기능  : 장학기부금(지정기부금) 기부내역조회
 ** 인수  : grid,row,col,초기화컬럼,출연자명,기금용도,지정발전기금코드
 ** 리턴  : 결과배열, 노드생성
      "castDonaHstPopupInfo/castNo"      	  	약정번호               
      "castDonaHstPopupInfo/castNm"   			납부일련번호             
      "castDonaHstPopupInfo/contrNo"    		출연자번호             
      "castDonaHstPopupInfo/paymSeq"    		출연자명           
      "castDonaHstPopupInfo/castTypeCdnm"  		출연자유형명           
      "castDonaHstPopupInfo/fundUsgeCdnm" 		약정용도명             
      "castDonaHstPopupInfo/desiAdfnCdnm" 		지정발전기금코드(대학원,대학)                 
      "castDonaHstPopupInfo/desiFundOrgCdnm"	지정기금조직명            
      "castDonaHstPopupInfo/donaDt"      	  	기부일자            
      "castDonaHstPopupInfo/paymAmt"     	  	기부금액            
 ============================================================================*/
 function castDonaHstSearchGrid(grid , row , col, initCols) {
 	gmSearchTypeFlag = "grid";
 	gmSearchGridRow = row;
 	gmSearchGridCol = col;
 	gmSearchGridObjID = grid.getID();

 	grid.setCellData( row , col+2 , "" );
 	var value = grid.getCellData(row, col);
 	grid.setCellData( row , col , "" );
 	
 	WebSquare.ModelUtil.removeChildNodes( "castDonaHstPopupInfo" );
 	
 	if(initCols != undefined) {
 		for(var index in initCols) {
 			if(initCols[index] != "") {
 				grid.setCellData( row , initCols[index] , "" );	
 			}
 		}
 	}

 	if(event.type != "click"){
 		if(value.length < 1) {
 			return;
 		} else if(value.length < 2) {
 			showMsg("C_I054", "출연자번호/성명을 2자 이상");
 			return;
 		}
 	} 
 	
	getCastDonaHstPopupInfo(event.type, value,arguments[4],arguments[5]);
 }

 /*============================================================================
  ** 기능  : 장학기부금(지정기부금) 기부내역조회
  ** 인수  : 출연자명,기금용도,지정발전기금코드
  ** 리턴  : 결과배열, 노드생성
      "castDonaHstPopupInfo/castNo"      	  	약정번호               
      "castDonaHstPopupInfo/castNm"   			납부일련번호             
      "castDonaHstPopupInfo/contrNo"    		출연자번호             
      "castDonaHstPopupInfo/paymSeq"    		출연자명           
      "castDonaHstPopupInfo/castTypeCdnm"  		출연자유형명           
      "castDonaHstPopupInfo/fundUsgeCdnm" 		약정용도명             
      "castDonaHstPopupInfo/desiAdfnCdnm" 		지정발전기금코드(대학원,대학)                 
      "castDonaHstPopupInfo/desiFundOrgCdnm"	지정기금조직명            
      "castDonaHstPopupInfo/donaDt"      	  	기부일자            
      "castDonaHstPopupInfo/paymAmt"     	  	기부금액            
  ============================================================================*/
 function castDonaHstPopupSearch(textObj, nameObj) {
     gmSearchTypeFlag = "form";
     gmTextObjID = textObj.getID();
     gmNameObjID = nameObj.getID();
     
     nameObj.setValue("");
     var searchSnoValue = textObj.getValue();
     textObj.setValue("");
     WebSquare.ModelUtil.removeChildNodes( "castDonaHstPopupInfo" );
     if(event.type != 'click') {
         if(searchCastDonaHstValue.length < 1) {
             nameObj.setValue("");
             return;
         } else if(searchCastDonaHstValue.length < 2) {
             showMsg("C_I054", "출연자번호/성명을 2자 이상");
             return;
         }
     } 
     getCastDonaHstPopupInfo(event.type, searchCastDonaHstValue, arguments[2]);
 }
/*============================================================================
** 기능  : 지정기부금(장학금) 조회 팝업
** 인수  : value
** 리턴  : 
============================================================================*/
function getCastDonaHstPopupInfo(type, searchCastDonaHstValue) {
   var arrResult = new Array();
   var fundUsgeCd  = arguments[2];
   var desiAdfnCd = arguments[3];
   var encodeSearchCastDonaHstValue = "";
   var encodeFundUsgeCd = "";
   var encodeDesiAdfnCd = "";
   
   if(searchCastDonaHstValue != undefined) {
	    if(searchCastDonaHstValue != "") {
	    	encodeSearchCastDonaHstValue = WebSquare.text.BASE64URLEncoder(searchCastDonaHstValue);
	    }
       setValue("reqCastDonaHstPopupInfo/castNo", searchCastDonaHstValue);
   }
   if(fundUsgeCd != undefined) {
       if(fundUsgeCd != "") {
    	   encodeFundUsgeCd = WebSquare.text.BASE64URLEncoder(fundUsgeCd);
       } 
       setValue("reqCastDonaHstPopupInfo/fundUsgeCd", fundUsgeCd);
   }

   if(desiAdfnCd != undefined) {
       if(desiAdfnCd != "") {
    	   encodeDesiAdfnCd = WebSquare.text.BASE64URLEncoder(desiAdfnCd);
       } 
       setValue("reqCastDonaHstPopupInfo/desiAdfnCd", desiAdfnCd);
   }

   if(type == "click") {
       openPopup( "setCastDonaHstPopupValue", "/views/gm/co/GM_CO_2060_Popup2.xml", {width: 1030, height:650}, {castNo:encodeSearchCastDonaHstValue,fundUsgeCd:encodeFundUsgeCd,desiAdfnCd:encodeDesiAdfnCd});
       return;                                                                                                               
   }                                                                                                                         
       
   execSubmission("getCommonDataSubm", "reqCastDonaHstPopupInfo", "castDonaHstPopupInfo", "/gm/listCastDonaHst.do");
   
   var dataArr = WebSquare.ModelUtil.findInstanceNodes("castDonaHstPopupInfo/object/castDonaHstList/object");
   var rowCount = dataArr.length;
                                                                                                     
   if(rowCount == 1) {                                                                               
       arrResult.push(getValue("castDonaHstPopupInfo/object/castDonaHstList/object/castNo"));       
       arrResult.push(getValue("castDonaHstPopupInfo/object/castDonaHstList/object/castNm"));       
       arrResult.push(getValue("castDonaHstPopupInfo/object/castDonaHstList/object/contrNo"));       
       arrResult.push(getValue("castDonaHstPopupInfo/object/castDonaHstList/object/paymSeq"));     
       arrResult.push(getValue("castDonaHstPopupInfo/object/castDonaHstList/object/castTypeCdnm"));    
       arrResult.push(getValue("castDonaHstPopupInfo/object/castDonaHstList/object/fundUsgeCdnm"));      
       arrResult.push(getValue("castDonaHstPopupInfo/object/castDonaHstList/object/desiAdfnCdnm"));        
       arrResult.push(getValue("castDonaHstPopupInfo/object/castDonaHstList/object/desiFundOrgCdnm"));    
       arrResult.push(getValue("castDonaHstPopupInfo/object/castDonaHstList/object/rcmtrNm"));    
       arrResult.push(getValue("castDonaHstPopupInfo/object/castDonaHstList/object/donaDt"));    
       arrResult.push(getValue("castDonaHstPopupInfo/object/castDonaHstList/object/paymAmt"));    
                                                                                                     
       WebSquare.ModelUtil.removeChildNodes( "castDonaHstPopupInfo" );
       
       setCastDonaHstPopupValue(arrResult);
   } else if(rowCount > 1) {
       WebSquare.ModelUtil.removeChildNodes( "castDonaHstPopupInfo" );
       openPopup( "setCastDonaHstPopupValue", "/views/gm/co/GM_CO_2060_Popup2.xml", {width: 1030, height:650}, {castNo:encodeSearchCastDonaHstValue,fundUsgeCd:encodeFundUsgeCd,desiAdfnCd:encodeDesiAdfnCd});
   } else if(rowCount == 0) {
       showMsg("C_I041", "출연자번호/성명 으로 검색한 결과");
   }
}

/*============================================================================
** 기능  : 지정기부금(장학)  조회 팝업 후에 수행됨
** 인수  : arrResult
** 리턴  : 
============================================================================*/
function setCastDonaHstPopupValue(arrResult) {
   if(arrResult == undefined) {
       return;
   }
   
   setValue("castDonaHstPopupInfo/castNo"      	      ,arrResult[0]);       
   setValue("castDonaHstPopupInfo/castNm"   		  ,arrResult[1]);     
   setValue("castDonaHstPopupInfo/contrNo"    		  ,arrResult[2]);     
   setValue("castDonaHstPopupInfo/paymSeq"    		  ,arrResult[3]);    
   setValue("castDonaHstPopupInfo/castTypeCdnm"  	  ,arrResult[4]);     
   setValue("castDonaHstPopupInfo/fundUsgeCdnm" 	  ,arrResult[5]);     
   setValue("castDonaHstPopupInfo/desiAdfnCdnm" 	  ,arrResult[6]);   
   setValue("castDonaHstPopupInfo/desiFundOrgCdnm"    ,arrResult[7]);    
   setValue("castDonaHstPopupInfo/rcmtrNm"            ,arrResult[8]);    
   setValue("castDonaHstPopupInfo/donaDt"      	      ,arrResult[9]);    
   setValue("castDonaHstPopupInfo/paymAmt"     	      ,arrResult[10]);    

   
   
   if(gmSearchTypeFlag == "form") {
       eval(gmTextObjID).setValue( arrResult[0] );
       eval(gmNameObjID).setValue( arrResult[1] );
       
       //화면에서 부가정보를 사용할 경우에  gmDrverSearchFormCallBack 함수를 만들어 놓고 사용한다
       if (typeof gmDrverSearchFormCallBack == 'function') {
           gmDrverSearchFormCallBack(arrResult);
       }
       return;
   }
   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol , arrResult[0] );
   eval(gmSearchGridObjID).setCellData( gmSearchGridRow , gmSearchGridCol+2 , arrResult[1] );

   if(eval(gmSearchGridObjID).getColumnIndex("contrNo")!= undefined)
   {
   	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "contrNo" , arrResult[2] );
   }

   if(eval(gmSearchGridObjID).getColumnIndex("paymSeq")!= undefined)
   {
   	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "paymSeq" , arrResult[3] );
   }
   
   if(eval(gmSearchGridObjID).getColumnIndex("castTypeCdnm")!= undefined)
   {
   	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "castTypeCdnm" , arrResult[4] );
   }

   if(eval(gmSearchGridObjID).getColumnIndex("fundUsgeCdnm")!= undefined)
   {
   	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "fundUsgeCdnm" , arrResult[5] );
   }

   if(eval(gmSearchGridObjID).getColumnIndex("desiAdfnCdnm")!= undefined)
   {
   	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "desiAdfnCdnm" , arrResult[6] );
   }

   if(eval(gmSearchGridObjID).getColumnIndex("desiFundOrgCdnm")!= undefined)
   {
   	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "desiFundOrgCdnm" , arrResult[7] );
   }

   if(eval(gmSearchGridObjID).getColumnIndex("rcmtrNm")!= undefined)
   {
   	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "rcmtrNm" , arrResult[8] );
   }

   if(eval(gmSearchGridObjID).getColumnIndex("donaDt")!= undefined)
   {
   	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "donaDt" , arrResult[9] );
   }

   if(eval(gmSearchGridObjID).getColumnIndex("paymAmt")!= undefined)
   {
   	eval(gmSearchGridObjID).setCellData( gmSearchGridRow , "paymAmt" , arrResult[10] );
   }

   //화면에서 부가정보를 사용할 경우에  gmSnoSchoSearchGridCallBack 함수를 만들어 놓고 사용한다
   if (typeof gmCastDonaHstSearchGridCallBack == 'function') {
       gmCastDonaHstSearchGridCallBack(gmSearchGridRow, gmSearchGridCol, arrResult);
   }
}      


function setStafEnm(value, obj1, obj2){
    if (value != undefined && value != null && obj1 != undefined && obj1 != null && obj2 != undefined && obj2 != null) {
        var stafEnmArray = value.split(" ");
        eval(obj1).setValue(stafEnmArray[0]);
        
        if(stafEnmArray[2] != undefined){
           eval(obj2).setValue(stafEnmArray[1] + " " + stafEnmArray[2]);
        }else{
           eval(obj2).setValue(stafEnmArray[1]);
        }
    }
}

function setPfofSmry(value, obj1, obj2){
    if (value != undefined && value != null && obj1 != undefined && obj1 != null && obj2 != undefined && obj2 != null) {
        var pfofSmryArray = value.split(" ");
        eval(obj1).setValue(pfofSmryArray[0]);
        eval(obj2).setValue(pfofSmryArray[1]);
    }
}

function setFrstCharUpper(str){
    var frstChar = str.substring(0, 1);
    var modChar = str.substring(1);
    
    var isUpper = /^[A-Z]$/;
    if(!isUpper.test(frstChar)){
        return frstChar.toUpperCase() + "" + modChar;
        
    }else{
        return str;
        
    }
}

function triggerStafEnm(obj){
    if(obj != undefined && obj != null){
        var retVal = "";
        var arr = eval(obj).getValue().split(" ");
        
        for(var i=0; i<arr.length; i++){
            retVal += setFrstCharUpper(arr[i]) + " ";
        }
        eval(obj).setValue(retVal.trim());
    }
}
/*===============================================================
 ** 기능 : 예산회계의 예산코드 팝업 호출(컴포넌트)
 ** 인수 : 서브미션,  사업코드 오브젝트, 사업명 오브젝트, 부서코드 오브젝트, 부서명 오브젝트, (검색시(Y), 신청시(N)), popGbn(팝업구분:null,"1"-UI에서 팝업호출, "2"-팝업에서 호출)
 *** 결과 : 이호찬 신규 개발 
 **===============================================================*/
function onClickYsCdPopUp(subMissionId, ysCd, ysNm, budgDeptCd, budgDeptNm, Flag, popGbn){
	var ysCdID = WebSquare.text.BASE64URLEncoder(ysCd.getID());
	var ysNmID = WebSquare.text.BASE64URLEncoder(ysNm.getID());
	var eYsCd = WebSquare.text.BASE64URLEncoder(ysCd.getValue());
	var eFlag = WebSquare.text.BASE64URLEncoder(Flag);
	var eBudgDeptCd;
	var vBudgDeptCd;
	
    if(event.type != 'click') {
		if(ysCd.getValue().length < 1) {
			ysNm.setValue("");
			return;
		}
	 }
    
    if(budgDeptCd == ""){
  	     eBudgDeptCd = WebSquare.text.BASE64URLEncoder(budgDeptCd.getValue());
  	     vBudgDeptCd = budgDeptCd.getValue();
    }else{
  	      if(budgDeptCd.getValue().length == 7 && budgDeptCd.getValue() != ""){ //부서코드가 완전할때만 반영
  	    	  eBudgDeptCd = WebSquare.text.BASE64URLEncoder(budgDeptCd.getValue());
	    	  vBudgDeptCd = budgDeptCd.getValue();
	      }else{
	    	 eBudgDeptCd = "" ;
	    	 vBudgDeptCd = ""
	    	 budgDeptCd.setValue("");
	    	 budgDeptNm.setValue("");
	      }
    }
    
    if(event.type == 'click'){
    	if (popGbn == "2") {
    		openNewPopup("onClickYsCdPopUpCallBack", "/views/gm/ys/GM_YS_1042.xml"
                    , { width      : 580
                      , height     : 565
                      , resizable  : false
                      , scrollbars : false }
                    , {pYsCd:eYsCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, ysCdID:ysCdID, ysNmID:ysNmID}) ;
  	  } else {
	          var rArr = openPopup("onClickYsCdPopUpCallBack", "/views/gm/ys/GM_YS_1042.xml"
	                         , { width      : 580
	                           , height     : 565
	                           , resizable  : false
	                           , scrollbars : false }
	                         , {pYsCd:eYsCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, ysCdID:ysCdID, ysNmID:ysNmID}) ;
        }
	      
//	      if (rArr != undefined && rArr != null) {
//	     	 busiCd.setValue( rArr[0] );
//	     	 busiNm.setValue( rArr[1] );
//	      }
    }else{
    	
  	  WebSquare.ModelUtil.setInstanceValue( "reqBudgYs/ysCd" , ysCd.getValue() );
  	  WebSquare.ModelUtil.setInstanceValue( "reqBudgYs/deptCd" , budgDeptCd.getValue() );
  	  WebSquare.ModelUtil.setInstanceValue( "reqBudgYs/acctyCd" , getValue("respFrameAcctyBass/object/acctyBass/acctyCd") );
  	  WebSquare.ModelUtil.setInstanceValue( "reqBudgYs/acctyYear" , getValue("respFrameAcctyBass/object/acctyBass/acctyYear") );
  	  
      execSubmission(subMissionId, "reqBudgYs", "resBudgYsCd","/ys/selBudgDeptYsCd.do");
      
  	  
  	  var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgYsCd/object/resBudgYsCd/object");
        rowCount = dataArr.length;
        if(rowCount == 1 && ((Flag == "N" && getValue("resBudgYsCd/object/resBudgYsCd/object[1]/useYn") == "Y") || Flag == "Y")){ //데이터가 하나면 바로 뿌려줌 
      	 
      	 // busiCd.setValue(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiCd"));
      	 // busiNm.setValue(getValue("resBudgBusiCd/object/selbudgBusiCd/object[1]/busiNm"));  
      	  var arrResult = new Array();
            arrResult.push(getValue("resBudgYsCd/object/resBudgYsCd/object[1]/ysCd"));
            arrResult.push(getValue("resBudgYsCd/object/resBudgYsCd/object[1]/ysNm"));
      	  onClickBusiPopUpCallBack(arrResult,ysCd.getID(),ysNm.getID());
      	  
        }else if(rowCount == 0){
      	  ysCd.setValue("");
      	  ysNm.setValue("");
      	  showMsg("C_I041", "검색한 결과");
      	
        }else {   //데이터가 여러개인 경우 팝업띄움 
      	  if (popGbn == "2") {
      		  openNewPopup("onClickYsCdPopUpCallBack", "/views/gm/ys/GM_YS_1042.xml"
                        , { width      : 580
                          , height     : 565
                          , resizable  : false
                          , scrollbars : false }
                        , {pYsCd:eYsCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, ysCdID:ysCdID, ysNmID:ysNmID}) ;
      	  } else {
      	      var rArr = openPopup("onClickYsCdPopUpCallBack", "/views/gm/ys/GM_YS_1042.xml"
                        , { width      : 580
                        , height     : 565
                        , resizable  : false
                        , scrollbars : false }
                        , {pYsCd:eYsCd, pBudgDeptCd:eBudgDeptCd, pFlag:eFlag, ysCdID:ysCdID, ysNmID:ysNmID}) ;
      	  }
 
        }
    }
}    

/*===============================================================
* function    : onClickBusiPopUpCallBack
* Description : 예산코드 목록 팝업 후에 호출되는 콜백
* ☆ 화면에 onClickBusiPopUpCallBack(arrResult) 함수를 생성한 후에 처리
* Parameter   : arrResult(사업코드 정보 배열)
* Return      : 사업코드 정보 배열
**===============================================================*/
function onClickYsCdPopUpCallBack(arrResult, ysCdID, ysNmID) {
	if (arrResult != undefined && arrResult != null) {
		eval(ysCdID).setValue( arrResult[0] );              
		eval(ysNmID).setValue( arrResult[1] );              
  }
}

/*===============================================================
 ** 기능 : 결의서 예산선택(컴포넌트)
 ** 인수 : 
 *** 결과 : LYY 신규 개발 
 **===============================================================*/
function onClickYsAcntCdPopUp(subMissionId, ysCd, ysNm, budgAcntCd, budgAcntNm, ysReslNo, busiCdId, busiNmId, inpAcntCd, inpAcntNm, reslDeptCd, busiCd, txtHgYearNm, txtHgCd, ysMngYn){
	var ysCdID = WebSquare.text.BASE64URLEncoder(ysCd.getID());
	var ysNmID = WebSquare.text.BASE64URLEncoder(ysNm.getID());
	var budgAcntCdId = WebSquare.text.BASE64URLEncoder(budgAcntCd.getID());
	var budgAcntNmId = WebSquare.text.BASE64URLEncoder(budgAcntNm.getID());
	var ysReslNoID = WebSquare.text.BASE64URLEncoder(ysReslNo.getID());
	var pBusiCdId = WebSquare.text.BASE64URLEncoder(busiCdId.getID());
	var pBusiNmId = WebSquare.text.BASE64URLEncoder(busiNmId.getID());
	var eYsCd = WebSquare.text.BASE64URLEncoder(ysCd.getValue());
	
	var pAcntCd = WebSquare.text.BASE64URLEncoder(inpAcntCd);
	var pAcntNm = WebSquare.text.BASE64URLEncoder(inpAcntNm);
	var pBudgDeptCd = WebSquare.text.BASE64URLEncoder(reslDeptCd);
	var pBusiCd = WebSquare.text.BASE64URLEncoder(busiCd);
	var pTxtHgYearNm = WebSquare.text.BASE64URLEncoder(txtHgYearNm);
	var pTxtHgCd = WebSquare.text.BASE64URLEncoder(txtHgCd);
	
	var pYsMngYn = WebSquare.text.BASE64URLEncoder(ysMngYn);
	
	
	if(event.type != 'click') {
		if(ysCd.getValue().length < 1) {
			ysNm.setValue("");
			budgAcntCd.setValue("");
			budgAcntNm.setValue("");
			ysReslNo.setValue("");
			return;
		}
	}
    
	if(event.type == 'click'){
    	openNewPopup("onClickYsAcntCdPopUpCallBack", "/views/gm/ys/GM_YS_1043.xml"
                , { width      : 1080
                  , height     : 565
                  , resizable  : false
                  , scrollbars : false }
                , {pYsCd:eYsCd, ysCdID:ysCdID, ysNmID:ysNmID, budgAcntCdId:budgAcntCdId, budgAcntNmId:budgAcntNmId, ysReslNoID:ysReslNoID, busiCdId:pBusiCdId, busiNmId:pBusiNmId,
                pAcntCd:pAcntCd, pAcntNm:pAcntNm, pBudgDeptCd:pBudgDeptCd, pBusiCd:pBusiCd, pTxtHgYearNm:pTxtHgYearNm, pTxtHgCd:pTxtHgCd, pYsMngYn:pYsMngYn
                }) ;
    } else {
    	
    	
    	WebSquare.ModelUtil.setInstanceValue( "req/ysCd" , ysCd.getValue() );
    	WebSquare.ModelUtil.setInstanceValue( "req/budgApplDeptCd" , reslDeptCd );
    	WebSquare.ModelUtil.setInstanceValue( "req/acctyCd" , txtHgCd );
    	WebSquare.ModelUtil.setInstanceValue( "req/acctyYear" , txtHgYearNm );
    	  
        execSubmission(subMissionId, "req", "resBudgYsCd","/ys/BudgAcntYsCdList.do");
        
        var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgYsCd/object/resBudgAcntYsCd/object");
        rowCount = dataArr.length;
        
        //무조건 팝업오픈함
        openNewPopup("onClickYsAcntCdPopUpCallBack", "/views/gm/ys/GM_YS_1043.xml"
                , { width      : 1080
                  , height     : 565
                  , resizable  : false
                  , scrollbars : false }
                , {pYsCd:eYsCd, ysCdID:ysCdID, ysNmID:ysNmID, budgAcntCdId:budgAcntCdId, budgAcntNmId:budgAcntNmId, ysReslNoID:ysReslNoID, busiCdId:pBusiCdId, busiNmId:pBusiNmId,
                pAcntCd:pAcntCd, pAcntNm:pAcntNm, pBudgDeptCd:pBudgDeptCd, pBusiCd:pBusiCd, pTxtHgYearNm:pTxtHgYearNm, pTxtHgCd:pTxtHgCd, pYsMngYn:pYsMngYn
                }) ;
        /*
        if(rowCount == 1){ //데이터가 하나면 바로 뿌려줌 
        	var arrResult = new Array();
            arrResult.push(getValue("resBudgYsCd/object/resBudgAcntYsCd/object[1]/ysCd"));
            arrResult.push(getValue("resBudgYsCd/object/resBudgAcntYsCd/object[1]/ysNm"));
            arrResult.push(getValue("resBudgYsCd/object/resBudgAcntYsCd/object[1]/budgAcntCd"));
            arrResult.push(getValue("resBudgYsCd/object/resBudgAcntYsCd/object[1]/budgAcntNm"));
            arrResult.push(getValue("resBudgYsCd/object/resBudgAcntYsCd/object[1]/ysReslNo"));
            arrResult.push(getValue("resBudgYsCd/object/resBudgAcntYsCd/object[1]/busiCd"));
            arrResult.push(getValue("resBudgYsCd/object/resBudgAcntYsCd/object[1]/busiNm"));
            onClickYsAcntCdPopUpCallBack(arrResult,ysCd.getID(),ysNm.getID(),budgAcntCd.getID(),budgAcntNm.getID(),ysReslNo.getID(),busiCdId.getID(),busiNmId.getID());
        }else if(rowCount == 0){
        	ysCd.setValue("");
         	ysNm.setValue("");
         	budgAcntCd.setValue("");
         	budgAcntNm.setValue("");
         	ysReslNo.setValue("");
         	showMsg("C_I041", "검색한 결과");
        }else {   //데이터가 여러개인 경우 팝업띄움
        	openNewPopup("onClickYsAcntCdPopUpCallBack", "/views/gm/ys/GM_YS_1043.xml"
                    , { width      : 1080
                      , height     : 565
                      , resizable  : false
                      , scrollbars : false }
                    , {pYsCd:eYsCd, ysCdID:ysCdID, ysNmID:ysNmID, budgAcntCdId:budgAcntCdId, budgAcntNmId:budgAcntNmId, ysReslNoID:ysReslNoID, busiCdId:pBusiCdId, busiNmId:pBusiNmId,
                    pAcntCd:pAcntCd, pAcntNm:pAcntNm, pBudgDeptCd:pBudgDeptCd, pBusiCd:pBusiCd, pTxtHgYearNm:pTxtHgYearNm, pTxtHgCd:pTxtHgCd, pYsMngYn:pYsMngYn
                    }) ;
        }
        */
 
    }
}  

/*===============================================================
* function    : onClickYsAcntCdPopUpCallBack
* Description : 예산선택 팝업 후에 호출되는 콜백
* ☆ 화면에 onClickYsAcntCdPopUpCallBack(arrResult) 함수를 생성한 후에 처리
* Parameter   : arrResult(사업코드 정보 배열)
* Return      : 사업코드 정보 배열
**===============================================================*/
function onClickYsAcntCdPopUpCallBack(arrResult, ysCdID, ysNmID, budgAcntCdId, budgAcntNmId, ysReslNoID, busiCdId, busiNmId) {
	if (arrResult != undefined && arrResult != null) {
		eval(ysCdID).setValue( arrResult[0] );              
		eval(ysNmID).setValue( arrResult[1] );   
		eval(budgAcntCdId).setValue( arrResult[2] ); 
		eval(budgAcntNmId).setValue( arrResult[3] ); 
		eval(ysReslNoID).setValue( arrResult[4] ); 
		eval(busiCdId).setValue( arrResult[5] ); 
		eval(busiNmId).setValue( arrResult[6] ); 
	}
}


/*===============================================================
 ** 기능 : 예산부서가져오기
 ** 인수 : BudgDeptCd - 결의부서, acctyYear - 회계연도
 **===============================================================*/
function getBudgDeptDv(budgDeptCd, acctyCd, adminFlag,useYn){
	 WebSquare.ModelUtil.removeInstanceNode( "reqBudgDeptCdDv" );
	 setValue("reqBudgDeptCdDv/budgApplDeptCd",budgDeptCd);
	 setValue("reqBudgDeptCdDv/acctyCd",acctyCd);
	 setValue("reqBudgDeptCdDv/adminFlag",adminFlag);
	 setValue("reqBudgDeptCdDv/useYn",useYn);
	 
	 execSubmission("getCommonDataSubm", "reqBudgDeptCdDv", "resBudgDeptCdDv","/ys/listBudgDeptList.do");
}

/*===============================================================
 ** 기능 : 예산부서 single Combobox 생성
 ** 인수 : selectObj - 콤보박스objet
 **===============================================================*/
function setBudgDeptDv(selectObj){
	var nodePath = "resBudgDeptCdDv/object/listBudgDeptList/object";
	 
	var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
    eval(selectObj).removeAll(true);
    
    for(var i=1; i<=nodes.length; i++) {
    	var value = getValue(nodePath + "[" + i + "]/budgApplDeptCd");
    	var lable = getValue(nodePath + "[" + i + "]/budgApplDeptNm");
    	eval(selectObj).addItem(value,lable);
    }
    eval(selectObj).setSelectedIndex(0);
}

/*===============================================================
 ** 기능 : 프로그램권한요청 신청여부 확인
 ** 인수 : 
 **===============================================================*/
function fnPermReqChk() 
{
	if(reqYn.getValue() == "null" || reqYn.getValue() == "") {
		reqYn.setStyle( "border-color" , "#FF0000" );
		return false;
	}
	
	reqYn.setStyle( "border-color" , "" );
	
	if(reqYn.getValue() == "Y" && reqPostNm.getValue() == "") {
		reqPostSeq.setStyle( "border-color" , "#FF0000" );
		reqPostNm.setStyle( "border-color" , "#FF0000" );
        return false;
	}
	
	reqPostSeq.setStyle( "border-color" , "" );
	reqPostNm.setStyle( "border-color" , "" );
	
	return true;
}



/*===============================================================
 ** 기능 : 예산회계의 예산사업명 팝업 호출
 ** 인수 : 
 ** 결과 : 
 **===============================================================*/
function onClickBudgYsPopUp(subMissionId, ysCd, ysNm, deptCd, deptNm, acctyYear, useYn){
	 var ysCdID = WebSquare.text.BASE64URLEncoder(ysCd.getID());
	 var ysNmID = WebSquare.text.BASE64URLEncoder(ysNm.getID());
	 var eDeptCd = WebSquare.text.BASE64URLEncoder(deptCd);
	 var eDeptNm = WebSquare.text.BASE64URLEncoder(deptNm);
	 var eAcctyYear = WebSquare.text.BASE64URLEncoder(acctyYear);
	 var eUseYn = WebSquare.text.BASE64URLEncoder(useYn);
	 
	 if(event.type != 'click') {
		if(ysCd.getValue().length < 1) {
			ysNm.setValue("");
			return;
		}
	 } 
	 
    if(event.type == 'click'){
    	var rArr = openPopup("onClickBudgYsPopUpCallBack", "/views/gm/ys/GM_YS_3013.xml"
				, { width      : 715
			, height     : 500
			, resizable  : false
			, scrollbars : false }
		, {pDeptCd:eDeptCd, pDeptNm:eDeptNm,  pAcctyYear:eAcctyYear, pUseYn:eUseYn, ysCdID:ysCdID, ysNmID:ysNmID}) ;
    }else{
    	
        WebSquare.ModelUtil.setInstanceValue( "reqBudgYs/budgApplDeptCd" , deptCd);
        WebSquare.ModelUtil.setInstanceValue( "reqBudgYs/acctyYear" , acctyYear );
        WebSquare.ModelUtil.setInstanceValue( "reqBudgYs/useYn" , useYn );
        WebSquare.ModelUtil.setInstanceValue( "reqBudgYs/ysCd" , ysCd.getValue());
        
        
        
        execSubmission(subMissionId, "reqBudgYs", "resBudgYs","/ys/listBudgYsCdPop.do");
        
        var dataArr = WebSquare.ModelUtil.findInstanceNodes("resBudgYs/object/budgYsCdList/object");
        rowCount = dataArr.length;
        
        if(rowCount == 1) {
		   var arrResult = new Array();
		   arrResult.push(getValue("resBudgYs/object/budgYsCdList/object[1]/ysCd"));
		   arrResult.push(getValue("resBudgYs/object/budgYsCdList/object[1]/ysNm"));
		   onClickBudgYsPopUpCallBack(arrResult,ysCd.getID(),ysNm.getID());
        }else if(rowCount == 0){
        	ysCd.setValue("");
        	ysNm.setValue("");
        	showMsg("C_I041", "검색한 결과");
        }
        else{
    		var rArr = openPopup("onClickBudgYsPopUpCallBack", "/views/gm/ys/GM_YS_3013.xml"
    				, { width      : 715
    			, height     : 500
    			, resizable  : false
    			, scrollbars : false }
    		, {pDeptCd:eDeptCd, pDeptNm:eDeptNm,  pAcctyYear:eAcctyYear, pUseYn:eUseYn, ysCdID:ysCdID, ysNmID:ysNmID}) ;
        }   	
    }
    
}

/*===============================================================
 * function    : onClickBudgYsPopUpCallBack
 * Description : 예산회계 예산사업명 목록 팝업 후에 호출되는 콜백
 * Parameter   : arrResult( 예산회계 예산사업코드 정보 배열)
 * Return      :  예산회계 부서코드 정보 배열
 **===============================================================*/
function onClickBudgYsPopUpCallBack(arrResult, ysCdId, ysNmID) {
	if (arrResult != undefined && arrResult != null) {
		eval(ysCdId).setValue( arrResult[0] );              
		eval(ysNmID).setValue( arrResult[1] );              
    }
}