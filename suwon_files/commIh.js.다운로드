/**
 * @target
 */
     /*===============================================================
      ** 기능 : From ~ To 날짜 체크
      ** 인수 : stDtObj : 시작일
      *        edDtObj : 종료일
      *        gubun   : 1- 시작일 이벤트 2- 종료일 이벤트
      *        msg     : 메시지 parameter - 내용 올바른 {0}을(를) 입력하세요.
      ** 작성자 : 김제석
      **===============================================================*/
     function ihCheckFromTo(stDtObj,edDtObj,gubun,msg){
         var stDt = stDtObj.getValue() || '00000000';
         var edDt = edDtObj.getValue() || '99999999';
         
         if(stDt > edDt){
             if(gubun == "1"){
                 showMsg("C_I024",msg);
                 stDtObj.setValue("");
             }else{
                 showMsg("C_I024",msg);
                 edDtObj.setValue("");
             }                    
         }
     }
     
     /*===============================================================
      ** 기능 : 1건일경우 입시생정보 반환, 2건이상일경우 popup호출
      ** 인수 : searchObj,judgNmObj
      ** 결과 : exmtInfo
      ** 작성자 : 김제석
      **===============================================================*/
     function getIhEntrStdBas(searchObj,fname){
    	 if(searchObj.exmtNo.length<2){
             showMsg("C_I187","수험번호/성명");
             return;
         }
    	 
  	     WebSquare.ModelUtil.removeInstanceNode( "reqEntrStd" );
  	     
	     setValue("reqEntrStd/enexYear"     ,searchObj.enexYear);
	     setValue("reqEntrStd/rcritDvcd"    ,searchObj.rcritDvcd);
	     setValue("reqEntrStd/exmtNo"       ,searchObj.exmtNo);
	     setValue("reqEntrStd/rcritModelCd" ,searchObj.rcritModelCd);
	     setValue("reqEntrStd/aplcCd"       ,searchObj.aplcCd);
	     setValue("reqEntrStd/rcritUnitCd"  ,searchObj.rcritUnitCd);
	     
	     //성적장학생선발 (EX_IH_7012.xml)사용
	     setValue("reqEntrStd/enexLineCd"  ,searchObj.enexLineCd);
	     setValue("reqEntrStd/deptNm"      ,searchObj.deptNm);
  	     
  	     execSubmission("getCommonDataSubm", "reqEntrStd", "resEntrStd","/ihEntrStdBas/listIhEntrStdBas.do");
  	     
  	     var rowCount = getReqRowCount("getCommonDataSubm");
  	     if( rowCount == 1){
  		     // 1건일경우    		   
  		     return getObjData("getCommonDataSubm",fname);
  	     }else{
  		     // 여러건일경우 popup호출    		   
  		     return onIhEntrStdBasPopup(searchObj,fname);
  	     }
         
         return null;
     }      
     
     /*===============================================================
      ** 기능 : 1건일경우 입시생정보 반환, 2건이상일경우 popup호출
      ** 인수 : searchObj,judgNmObj
      ** 결과 : exmtInfo
      ** 작성자 : 김제석
      **===============================================================*/
     function getPrevIhEntrStdBas(searchObj,fname){
    	 if(searchObj.exmtNo.length<2){
             showMsg("C_I187","수험번호/성명");
             return;
         }
    	 
  	     WebSquare.ModelUtil.removeInstanceNode( "reqEntrStd" );
  	     
	     setValue("reqEntrStd/enexYear"     ,searchObj.enexYear);
	     setValue("reqEntrStd/rcritDvcd"    ,searchObj.rcritDvcd);
	     setValue("reqEntrStd/exmtNo"       ,searchObj.exmtNo);
	     setValue("reqEntrStd/rcritModelCd" ,searchObj.rcritModelCd);
	     setValue("reqEntrStd/aplcCd"       ,searchObj.aplcCd);
	     setValue("reqEntrStd/rcritUnitCd"  ,searchObj.rcritUnitCd);
	     setValue("reqEntrStd/passYn", 'Y');               
         
	     
	     //성적장학생선발 (EX_IH_7012.xml)사용
	     setValue("reqEntrStd/enexLineCd"  ,searchObj.enexLineCd);
	     setValue("reqEntrStd/deptNm"      ,searchObj.deptNm);
  	     
  	     execSubmission("getCommonDataSubm", "reqEntrStd", "resEntrStd","/ihEntrStdBas/listIhEntrStdBas.do");
  	     
  	     var rowCount = getReqRowCount("getCommonDataSubm");
  	     if( rowCount == 1){
  		     // 1건일경우    		   
  		     return getObjData("getCommonDataSubm",fname);
  	     }else{
  		     // 여러건일경우 popup호출    		   
  		     return onIhPrevEntrStdBasPopup(searchObj,fname);
  	     }
         
         return null;
     }
     
     function showIhMsg(msg){
    	 jAlert(msg, "Information");
     }
     
     /*===============================================================
      ** 기능 : 학생검색팝업 조회조건 object변환
      ** 인수 : enexYear,rcritDvcd,exmtNo,rcritModelCd,aplcCd,rcritUnitCd
      ** 결과 : searchObj
      ** 작성자 : 김제석
      **===============================================================*/
     function getIhEntrStdBasSearchObj(enexYear,rcritDvcd,exmtNo,rcritModelCd,aplcCd,rcritUnitCd){
    	 if(!rcritDvcd){
    		 //showMsg("C_I063","모집구분");
    		 //return;
    	 }
    	 var searchObj = new Object();
    	 
    	 searchObj.enexYear = enexYear;      
    	 searchObj.rcritDvcd = rcritDvcd || "";     
    	 searchObj.exmtNo = exmtNo;        
    	 searchObj.rcritModelCd = rcritModelCd || "";  
    	 searchObj.aplcCd = aplcCd || "";      
    	 searchObj.rcritUnitCd = rcritUnitCd || "";
    	 
    	 return searchObj;
     }
     
     
     /*===============================================================
      ** 기능 : 입시생 검색 팝업
      ** 인수 : searchObj,fname
      ** 결과 : exmtInfo
      ** 작성자 : 김제석
      **===============================================================*/
     function onIhEntrStdBasPopup(searchObj,fname){
     	openPopup(fname, "/views/usw/ex/ih/EX_IH_0000.xml"
                 , { width      : 978
                   , height     : 450
                   , resizable  : false
                   , scrollbars : false }
                 , { pEnexYear      : WebSquare.text.BASE64URLEncoder(searchObj.enexYear)   
                   , pRcritDvcd     : WebSquare.text.BASE64URLEncoder(searchObj.rcritDvcd)  
                   , pExmtNo        : WebSquare.text.BASE64URLEncoder(searchObj.exmtNo)     
                   , pRcritModelCd  : WebSquare.text.BASE64URLEncoder(searchObj.rcritModelCd) 
                   , pAplcDvcd      : WebSquare.text.BASE64URLEncoder(searchObj.aplcCd)   
                   , pRcritUnitCd   : WebSquare.text.BASE64URLEncoder(searchObj.rcritUnitCd)    }) ;
     }
     
     /*===============================================================
      ** 기능 : 교양대학 수험생 검색 팝업
      ** 인수 : searchObj,fname
      ** 결과 : exmtInfo
      ** 작성자 : 박해성
      **===============================================================*/
     function onIhPrevEntrStdBasPopup(searchObj,fname){
     	openPopup(fname, "/views/usw/ex/ih/EX_IH_0004.xml"
                 , { width      : 978
                   , height     : 450
                   , resizable  : false
                   , scrollbars : false }
                 , { pEnexYear      : WebSquare.text.BASE64URLEncoder(searchObj.enexYear)   
                   , pRcritDvcd     : WebSquare.text.BASE64URLEncoder(searchObj.rcritDvcd)  
                   , pExmtNo        : WebSquare.text.BASE64URLEncoder(searchObj.exmtNo)     
                   , pRcritModelCd  : WebSquare.text.BASE64URLEncoder(searchObj.rcritModelCd) 
                   , pAplcDvcd      : WebSquare.text.BASE64URLEncoder(searchObj.aplcCd)   
                   , pRcritUnitCd   : WebSquare.text.BASE64URLEncoder(searchObj.rcritUnitCd)    }) ;
     }
     
     /*===============================================================
      ** 기능 : data를 object에 담아 넘긴다.
      ** 인수 : submissionId,callback function name
      ** 결과 : obj
      **===============================================================*/
     function getObjData(subId,fname){
         var sub = WebSquare.ModelUtil.getSubmission( subId );
         var tagName = "";
         var doc = WebSquare.ModelUtil.findInstanceNode( sub.target );
         var dataArr = WebSquare.xml.getChildren(doc, "object");
         
         for (var i in dataArr) {
             if (dataArr[i]["type"] == "array") {
                tagName = dataArr[i]["@tagName"];
                break;
             }
         }
         
         var path = sub.target + "/object/" + tagName + "/object";
         
         var jsonStr = "";
         
         var doc2 = WebSquare.ModelUtil.findInstanceNode( sub.target + "/object/" + tagName );                   
         var dataArr2 = WebSquare.xml.getChildren(doc2, "object");
                               
         for(var i in dataArr2){
             var tTagNm = dataArr2[i]["@tagName"];
             var tValue = getValue(path + "/" + tTagNm);
             jsonStr += tTagNm + ":'"+ tValue +"',";
         }
         
         var temp = makeJson(jsonStr);
         var returnObj = eval(temp);
         eval(fname)(returnObj);
     }  
     
     /*===============================================================
      ** 기능 : 1건일경우 교과목 반환, 2건이상일경우 popup호출
      ** 인수 : searchObj,judgNmObj
      ** 결과 : exmtInfo
      ** 작성자 : 김제석
      **===============================================================*/
     function getIhHishSbjtCd(searchObj,fname){
         if(searchObj.hishSbjtCd.length<2){
             showMsg("C_I187","교과코드/명");
             return;
         }
  	     WebSquare.ModelUtil.removeInstanceNode( "reqHishSbjtCd" );
	     
	     var procParam = searchObj.subjcTerrDvcd + "^" + searchObj.hishSbjtCd;
	     
         setValue("reqHishSbjtCd/procParam", procParam);
  	     
  	     execSubmission("getCommonDataSubm", "reqHishSbjtCd", "resHishSbjtCd","/ihHishSbjtCd/listIhHishSbjtCd.do");
  	     
  	     var rowCount = getReqRowCount("getCommonDataSubm");
  	     if( rowCount == 1){
  		     // 1건일경우    		   
  		     return getObjData("getCommonDataSubm",fname);
  	     }else{
  		     // 여러건일경우 popup호출    		   
  		     return onIhHishSbjtCdPopup(searchObj,fname);
  	     }
           
           return null;
     }      
     
     /*===============================================================
      ** 기능 : 1건일경우 교과목 반환, 2건이상일경우 popup호출(검정고시)
      ** 인수 : searchObj,judgNmObj
      ** 결과 : exmtInfo
      ** 작성자 : 김제석
      **===============================================================*/
     function getIhHishSbjtCd2(searchObj,fname){
    	 if(searchObj.hishSbjtCd.length<2){
    		 showMsg("C_I187","교과코드/명");
    		 return;
    	 }
    	 WebSquare.ModelUtil.removeInstanceNode( "reqHishSbjtCd" );
    	 
    	 var procParam = searchObj.subjcTerrDvcd + "^" + searchObj.hishSbjtCd;
    	 
    	 setValue("reqHishSbjtCd/procParam", procParam);
    	 
    	 execSubmission("getCommonDataSubm", "reqHishSbjtCd", "resHishSbjtCd","/ihHishSbjtCd/listIhHishSbjtCd2.do");
    	 
    	 var rowCount = getReqRowCount("getCommonDataSubm");
    	 if( rowCount == 1){
    		 // 1건일경우    		   
    		 return getObjData("getCommonDataSubm",fname);
    	 }else{
    		 // 여러건일경우 popup호출    		   
    		 return onIhHishSbjtCdPopup2(searchObj,fname);
    	 }
    	 
    	 return null;
     }      
     
     /*===============================================================
      ** 기능 : 교과목 검색 팝업
      ** 인수 : searchObj,fname
      ** 결과 : exmtInfo
      ** 작성자 : 김제석
      **===============================================================*/
     function onIhHishSbjtCdPopup(searchObj,fname){
     	openPopup(fname, "/views/usw/ex/ih/EX_IH_0002.xml"
                 , { width      : 978
                   , height     : 450
                   , resizable  : false
                   , scrollbars : false }
                 , { pSubjcTerrDvcd  : WebSquare.text.BASE64URLEncoder(searchObj.subjcTerrDvcd)   
                   , pHishSbjtCd     : WebSquare.text.BASE64URLEncoder(searchObj.hishSbjtCd)    }) ;
     }
     
     
     /*===============================================================
      ** 기능 : 교과목 검색 팝업(검정고시)
      ** 인수 : searchObj,fname
      ** 결과 : exmtInfo
      ** 작성자 : 김제석
      **===============================================================*/
     function onIhHishSbjtCdPopup2(searchObj,fname){
    	 openPopup(fname, "/views/usw/ex/ih/EX_IH_0003.xml"
    			 , { width      : 978
    		 , height     : 450
    		 , resizable  : false
    		 , scrollbars : false }
    	 , { pSubjcTerrDvcd  : WebSquare.text.BASE64URLEncoder(searchObj.subjcTerrDvcd)   
    		 , pHishSbjtCd     : WebSquare.text.BASE64URLEncoder(searchObj.hishSbjtCd)    }) ;
     }
     
     /*===============================================================
      ** 기능 : 1건일경우 고등학교 반환, 2건이상일경우 popup호출
      ** 인수 : searchObj,judgNmObj
      ** 결과 : exmtInfo
      ** 작성자 : 김제석
      **===============================================================*/
     function getIhHishSculCd(searchObj,fname){
         if(searchObj.hishSculCd.length<2){
             showMsg("C_I187","고교코드/명");
             return;
         }
  	     WebSquare.ModelUtil.removeInstanceNode( "reqHishSculCd" );
	     
         var procParam = searchObj.zoneDvcd + "^" + searchObj.publPrivDvcd  + "^" + searchObj.humaIndusDvcd + "^" +searchObj.hishSculCd;
         
         setValue("reqHishSculCd/procParam", procParam);
         
  	     execSubmission("getCommonDataSubm", "reqHishSculCd", "resHishSculCd","/ihHishSculCd/listIhHishSculCd.do");
  	     
  	     var rowCount = getReqRowCount("getCommonDataSubm");
  	     if( rowCount == 1){
  		     // 1건일경우    		   
  		     return getObjData("getCommonDataSubm",fname);
  	     }else{
  		     // 여러건일경우 popup호출    		   
  		     return onIhHishSculCdPopup(searchObj,fname);
  	     }
           
           return null;
     }      
     
     /*===============================================================
      ** 기능 : 고등학교 검색 팝업
      ** 인수 : searchObj,fname
      ** 결과 : exmtInfo
      ** 작성자 : 김제석
      **===============================================================*/
     function onIhHishSculCdPopup(searchObj,fname){
     	openPopup(fname, "/views/usw/ex/ih/EX_IH_0001.xml"
                 , { width      : 978
                   , height     : 450
                   , resizable  : false
                   , scrollbars : false }
                 , { pZoneDvcd        : WebSquare.text.BASE64URLEncoder(searchObj.zoneDvcd)   
                   , pPublPrivDvcd    : WebSquare.text.BASE64URLEncoder(searchObj.publPrivDvcd)
                   , phumaIndusDvcd   : WebSquare.text.BASE64URLEncoder(searchObj.humaIndusDvcd)
                   , pHishSculCd      : WebSquare.text.BASE64URLEncoder(searchObj.hishSculCd)}) ;
     }
     
     /*===============================================================
      ** 기능 : 학부입시 모집구분
      ** 인수 : enexYear - 년도
      **===============================================================*/
     function getIhRcritDv(enexYear,bizDvcd){
    	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCmRcritDv" );
     	 setValue("reqIhCmRcritDv/enexYear",enexYear);
     	 setValue("reqIhCmRcritDv/bizDvcd",bizDvcd);
     	 
     	 execSubmission("getCommonDataSubm", "reqIhCmRcritDv", "reqRcritDv","/ihCm/listRcritDv.do");
     }
     
     /*===============================================================
      ** 기능 : 학부입시 모집구분 single Combobox 생성
      ** 인수 : selectObj - 콤보박스objet
      **===============================================================*/
     function setIhRcritDvCombo(selectObj){
    	 var nodePath = "reqRcritDv/object/listRcritDv/object";
    	 
    	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
	     eval(selectObj).removeAll(true);
	     
	     for(var i=1; i<=nodes.length; i++) {
	     	var value = getValue(nodePath + "[" + i + "]/rcritDvcd");
	     	var lable = getValue(nodePath + "[" + i + "]/rcritDvnm");
	     	eval(selectObj).addItem(value,lable);
	     }
	     eval(selectObj).setSelectedIndex(0);
     }
     
     /*===============================================================
      ** 기능 : 학부입시 모집구분 grid Combobox 생성
      ** 인수 : pahtNode - 복사결과 node
      **===============================================================*/
     function copyIhRcritDvXml(pahtNode){
    	 WebSquare.ModelUtil.removeInstanceNode(pahtNode);
    	 WebSquare.ModelUtil.copyNode("reqRcritDv/object/listRcritDv" , pahtNode);
     }

     /*===============================================================
      ** 기능 : 학부입시 모집구분 single Combobox 생성
      ** 인수 : selectObj - 콤보박스objet
      **===============================================================*/
     function setIhFrgnRcritDvCombo(selectObj){
    	 var nodePath = "reqRcritDv/object/listRcritDv/object";
    	 
    	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
	     eval(selectObj).removeAll(true);
	     
	     for(var i=1; i<=nodes.length; i++) {
	     	var value = getValue(nodePath + "[" + i + "]/rcritDvcd");
	     	var lable = getValue(nodePath + "[" + i + "]/rcritDvnm");
	     	if(value == '301' || value == '302' || value == '303' || value == '304' || value == '305' || value == '306'
	     	|| value == '611' || value == '612' || value == '613' || value == '614' || value == '615' || value == '616')
	     	eval(selectObj).addItem(value,lable);
	     }
	     eval(selectObj).setSelectedIndex(0);
     }
     
     /*===============================================================
      ** 기능 : 학부입시 모집전형
      ** 인수 : 
      **===============================================================*/
     function getIhRcritModel(){
    	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCm" );
     	 setValue("reqIhCm/enexYear","");
     	 
     	 execSubmission("getCommonDataSubm", "reqIhCm", "reqRcritModel","/ihCm/listRcritModel.do");
     }
     
     /*===============================================================
      ** 기능 : 학부입시 전형구분 single Combobox 생성
      ** 인수 : selectObj - 콤보박스objet
      **===============================================================*/
     function setIhRcritModelCombo(selectObj){
    	 var nodePath = "reqRcritModel/object/listRcritModel/object";
    	 
    	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
	     eval(selectObj).removeAll(true);
	     
	     for(var i=1; i<=nodes.length; i++) {
	     	var value = getValue(nodePath + "[" + i + "]/rcritModelCd");
	     	var lable = getValue(nodePath + "[" + i + "]/rcritModelNm");
	     	eval(selectObj).addItem(value,lable);
	     }
	     eval(selectObj).setSelectedIndex(0);
     }
     
     /*===============================================================
      ** 기능 : 학부입시 모집전형 grid Combobox 생성
      ** 인수 : pahtNode - 복사결과 node
      **===============================================================*/
     function copyIhRcritModelXml(pahtNode){
    	 WebSquare.ModelUtil.removeInstanceNode(pahtNode);
    	 WebSquare.ModelUtil.copyNode("reqRcritModel/object/listRcritModel" , pahtNode);
     }

     /*===============================================================
      ** 기능 : 학부입시 모집구분별모집전형
      ** 인수 : 
      **===============================================================*/
     function getIhRcritModelCd(enexYear,rcritDvcd){
    	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCm" );
     	 setValue("reqIhCm/enexYear",enexYear);
     	 setValue("reqIhCm/rcritDvcd",rcritDvcd);
     	 
     	 execSubmission("getCommonDataSubm", "reqIhCm", "reqRcritModelCd","/ihCm/listRcritModelCd.do");
     }
     
     /*===============================================================
      ** 기능 : 학부입시 모집구분별모집전형구분 single Combobox 생성
      ** 인수 : selectObj - 콤보박스objet
      **===============================================================*/
     function setIhRcritModelCdCombo(selectObj){
    	 var nodePath = "reqRcritModelCd/object/listRcritModel/object";
    	 
    	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
	     eval(selectObj).removeAll(true);
	     
	     for(var i=1; i<=nodes.length; i++) {
	     	var value = getValue(nodePath + "[" + i + "]/rcritModelCd");
	     	var lable = getValue(nodePath + "[" + i + "]/rcritModelNm");
	     	eval(selectObj).addItem(value,lable);
	     }
	     eval(selectObj).setSelectedIndex(0);
     }

     /*===============================================================
      ** 기능 : 학부입시 모집전형 grid Combobox 생성
      ** 인수 : pahtNode - 복사결과 node
      **===============================================================*/
     function copyIhRcritModelCdXml(pahtNode){
    	 WebSquare.ModelUtil.removeInstanceNode(pahtNode);
    	 WebSquare.ModelUtil.copyNode("reqRcritModelCd/object/listRcritModel" , pahtNode);
     }
     
     /*===============================================================
      ** 기능 : 학부입시 모집단위
      ** 인수 : 
      **===============================================================*/
     function getIhRcritUnit(enexYear,rcritDvcd){
    	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCmRcritUnit" );
     	 setValue("reqIhCmRcritUnit/enexYear",enexYear);
     	 setValue("reqIhCmRcritUnit/rcritDvcd",rcritDvcd);
     	 
     	 execSubmission("getCommonDataSubm", "reqIhCmRcritUnit", "reqRcritUnit","/ihCm/listRcritUnit.do");
     }
     
     /*===============================================================
      ** 기능 : 학부입시 모집단위 single Combobox 생성
      ** 인수 : selectObj - 콤보박스objet
      **===============================================================*/
     function setIhRcritUnitCombo(selectObj){
    	 var nodePath = "reqRcritUnit/object/listRcritUnit/object";
    	 
    	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
	     eval(selectObj).removeAll(true);
	     
	     for(var i=1; i<=nodes.length; i++) {
	     	var value = getValue(nodePath + "[" + i + "]/rcritUnitCd");
	     	var lable = getValue(nodePath + "[" + i + "]/rcritUnitNm");
	     	eval(selectObj).addItem(value,lable);
	     }
	     eval(selectObj).setSelectedIndex(0);
     }
     
     /*===============================================================
      ** 기능 : 학부입시 모집단위 grid Combobox 생성
      ** 인수 : pahtNode - 복사결과 node
      **===============================================================*/
     function copyIhRcritUnitXml(pahtNode){
    	 WebSquare.ModelUtil.removeInstanceNode(pahtNode);
    	 WebSquare.ModelUtil.copyNode("reqRcritUnit/object/listRcritUnit" , pahtNode);
     }
     
     /*===============================================================
      ** 기능 : 학부입시 학과코드
      ** 인수 : enexYear - 년도
      **===============================================================*/
     function getIhHishDpmj(){
    	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCmHishDpmj" );
    	 setValue("reqIhCmHishDpmj/enexYear","");
     	 execSubmission("getCommonDataSubm", "reqIhCmHishDpmj", "reqHishDpmj","/ihCm/listHishDpmj.do");
     }
     
     /*===============================================================
      ** 기능 : 학부입시 학과코드 single Combobox 생성
      ** 인수 : selectObj - 콤보박스objet
      **===============================================================*/
     function setIhHishDpmjCombo(selectObj){
    	 var nodePath = "reqHishDpmj/object/listHishDpmj/object";
    	 
    	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
	     eval(selectObj).removeAll(true);
	     
	     for(var i=1; i<=nodes.length; i++) {
	     	var value = getValue(nodePath + "[" + i + "]/hishDpmjCd");
	     	var lable = getValue(nodePath + "[" + i + "]/hishDpmjNm");
	     	eval(selectObj).addItem(value,lable);
	     }
	     eval(selectObj).setSelectedIndex(0);
     }
     
     /*===============================================================
      ** 기능 : 학부입시 학과코드 grid Combobox 생성
      ** 인수 : pahtNode - 복사결과 node
      **===============================================================*/
     function copyIhHishDpmjXml(pahtNode){
    	 WebSquare.ModelUtil.removeInstanceNode(pahtNode);
    	 WebSquare.ModelUtil.copyNode("reqHishDpmj/object/listHishDpmj" , pahtNode);
     }
     ////
     /*===============================================================
      ** 기능 : 학부입시 사정단위코드
      ** 인수 : enexYear - 년도
      **===============================================================*/
     function getIhEvalUnitMng(enexYear, rcritDvcd, rcritModelCd){
    	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCmEvalUnitMng" );
     	 setValue("reqIhCmEvalUnitMng/enexYear",enexYear);
     	 setValue("reqIhCmEvalUnitMng/rcritDvcd",rcritDvcd);
      	 setValue("reqIhCmEvalUnitMng/rcritModelCd",rcritModelCd);
     	 execSubmission("getCommonDataSubm", "reqIhCmEvalUnitMng", "reqEvalUnitMng","/ihCm/listEvalUnitMng.do");
     }
     
     /*===============================================================
      ** 기능 : 학부입시 사정단위코드 single Combobox 생성
      ** 인수 : selectObj - 콤보박스objet
      **===============================================================*/
     function setIhEvalUnitMngCombo(selectObj){
    	 var nodePath = "reqEvalUnitMng/object/listEvalUnitMng/object";
    	 
    	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
	     eval(selectObj).removeAll(true);
	     
	     for(var i=1; i<=nodes.length; i++) {
	     	var value = getValue(nodePath + "[" + i + "]/evalUnitCd");
	     	var lable = getValue(nodePath + "[" + i + "]/evalUnitNm");
	     	eval(selectObj).addItem(value,lable);
	     }
	     eval(selectObj).setSelectedIndex(0);
     }
     
     /*===============================================================
      ** 기능 : 학부입시 사정단위코드 grid Combobox 생성
      ** 인수 : pahtNode - 복사결과 node
      **===============================================================*/
     function copyIhEvalUnitMngXml(pahtNode){
    	 WebSquare.ModelUtil.removeInstanceNode(pahtNode);
    	 WebSquare.ModelUtil.copyNode("reqEvalUnitMng/object/listEvalUnitMng" , pahtNode);
     }
     
     /////
     
     /*===============================================================
      ** 기능 : 학부입시 석차등급
      ** 인수 : 
      **===============================================================*/
     function getIhOrdpGrdCd(enexYear,rcritDvcd){
    	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCmOrdpGrdCd" );
     	 setValue("reqIhCmOrdpGrdCd/enexYear",enexYear);
     	 setValue("reqIhCmOrdpGrdCd/rcritDvcd",rcritDvcd);
     	 
     	 execSubmission("getCommonDataSubm", "reqIhCmOrdpGrdCd", "reqOrdpGrdCd","/ihCm/listOrdpGrdCd.do");
     }
     
     /*===============================================================
      ** 기능 : 학부입시 석차등급 single Combobox 생성
      ** 인수 : selectObj - 콤보박스objet
      **===============================================================*/
     function setIhOrdpGrdCdCombo(selectObj){
    	 var nodePath = "reqOrdpGrdCd/object/listOrdpGrdCd/object";
    	 
    	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
	     eval(selectObj).removeAll(true);
	     
	     for(var i=1; i<=nodes.length; i++) {
	     	var value = getValue(nodePath + "[" + i + "]/ordpGrdCd");
	     	var lable = getValue(nodePath + "[" + i + "]/ordpGrdNm");
	     	eval(selectObj).addItem(value,lable);
	     }
	     eval(selectObj).setSelectedIndex(0);
     }
     
     /*===============================================================
      ** 기능 : 학부입시 석차등급 grid Combobox 생성
      ** 인수 : pahtNode - 복사결과 node
      **===============================================================*/
     function copyIhOrdpGrdCdXml(pahtNode){
    	 WebSquare.ModelUtil.removeInstanceNode(pahtNode);
    	 WebSquare.ModelUtil.copyNode("reqOrdpGrdCd/object/listOrdpGrdCd" , pahtNode);
     }
     
     /*===============================================================
      ** 기능 : 학부_입시 일정
      ** 인수 : enexYear,rcritDvcd,tpexSchdCd
      *  schdYn           Y or N
      *  sdtm            YYYY-MM-DD HH24:MI:SS
      *  edtm            YYYY-MM-DD HH24:MI:SS
      *  allDd            YYYY-MM-DD ~ YYYY-MM-DD
      *  allDt            YYYY-MM-DD HH24:MI:SS ~ YYYY-MM-DD HH24:MI:SS
      *  todayDt          YYYY-MM-DD ~ YYYY-MM-DD
      **===============================================================*/
      function getIhSchd(enexYear,rcritDvcd,tpexSchdCd){
           var obj = new Object();
          
           setValue( "reqIhSchdParam/enexYear"     , enexYear );
	       setValue( "reqIhSchdParam/rcritDvcd"    , rcritDvcd );
	       setValue( "reqIhSchdParam/tpexSchdCd"   , tpexSchdCd );
	       	       
	       execSubmission("getCommonDataSubm", "reqIhSchdParam", "resIhSchd","/ihCm/selectIdSchd.do");
	       
	       obj.schdYn   =  getValue("resIhSchd/object/exSchd/schdYn");
	       obj.enexSdtm =  getValue("resIhSchd/object/exSchd/sdtm");
	       obj.enexEdtm =  getValue("resIhSchd/object/exSchd/edtm");
	       obj.allDd    =  getValue("resIhSchd/object/exSchd/allDd");
	       obj.allDt    =  getValue("resIhSchd/object/exSchd/allDt");
	       obj.todayDt  =  getValue("resIhSchd/object/exSchd/todayDt");
	       
	       return obj;
      }
      
      /*============================================================================
       ** 기능  : submission 실행 후 처리
       ** 인수 : sm : 실행된 submission id
       ** 결과  : callBack(sub.action) 호출
       *        sub.action으로 해당 submission 구분
       ============================================================================*/
      function submissionIh(sub) {
          var sMsgcd = WebSquare.ModelUtil.getInstanceValue( sub.target + "/object/errorCode" );
          var result = WebSquare.ModelUtil.getInstanceValue( sub.target + "/object/result" );
          
          if (parseInt(sMsgcd) == -998) {
          	location.href = "/websquare/websquare.jsp?w2xPath=/views/loginRequired.xml";
          	return;
          } else if(parseInt(sMsgcd) == 10) {
          	showMsgString(WebSquare.ModelUtil.getInstanceValue( sub.target + "/object/errorMessage"));
          	return;
          }
          if (sMsgcd.trim() != "") {
        	if(sub.action.toLowerCase().indexOf("ihcp") >= 0){
        		WebSquare.core.closePopupWindow();
        	}
          	var sMsg = WebSquare.ModelUtil.getInstanceValue( sub.target + "/object/errorMessage" );
          	alert("요청하신 작업중 오류가 발생하였습니다. \n오류메시지 : " + sMsg);
              return;
          }
          var rowCount  = 0;
          var strCodeId = "";
          if (sub.action.toLowerCase().indexOf("list") >= 0) {
              var tagName = "";
              var doc = WebSquare.ModelUtil.findInstanceNode( sub.target );
              var dataArr = WebSquare.xml.getChildren(doc, "object");
              for (var i in dataArr) {
                  if (dataArr[i]["type"] == "array") {
                     tagName = dataArr[i]["@tagName"];
                     break;
                  }
              }
              var dataArr = WebSquare.ModelUtil.findInstanceNodes( sub.target + "/object/" + tagName + "/object" );
              rowCount = dataArr.length;
              strCodeId = "C_I001";
          } else if (sub.action.toLowerCase().indexOf("insert") >= 0) {
          	strCodeId = "C_I002";
          } else if (sub.action.toLowerCase().indexOf("update") >= 0) {
          	strCodeId = "C_I003";
          } else if (sub.action.toLowerCase().indexOf("save") >= 0)  {
          	strCodeId = "C_I004";
          } else if (sub.action.toLowerCase().indexOf("delete") >= 0) {
          	strCodeId = "C_I005";
          } else if (sub.action.toLowerCase().indexOf("apply") >= 0) {
          	strCodeId = "C_I017";
          } else if (sub.action.toLowerCase().indexOf("cancel") >= 0) {
          	strCodeId = "C_I043";
          } else if (sub.action.toLowerCase().indexOf("merge") >= 0 ||
      		   sub.action.toLowerCase().indexOf("multi") >= 0) {
          	strCodeId = "C_I032";
          } else if (sub.action.toLowerCase().indexOf("copy") >= 0) {
          	strCodeId = "C_I087";
          } else if (sub.action.toLowerCase().indexOf("send") >= 0) {
          	strCodeId = "C_I157";
          } else if (sub.action.toLowerCase().indexOf("send") >= 0) {
          	strCodeId = "C_I157";
          } else if (sub.action.toLowerCase().indexOf("ihmul") >= 0) {
          	strCodeId = "C_I195";
          } else if (sub.action.toLowerCase().indexOf("ihup") >= 0) {
          	strCodeId = "C_I196";
          } else if (sub.action.toLowerCase().indexOf("ihdel") >= 0) {
          	strCodeId = "C_I197";
          } else if (sub.action.toLowerCase().indexOf("ihin") >= 0) {
          	strCodeId = "C_I198";
          } else if (sub.action.toLowerCase().indexOf("ihbatch") >= 0) {
          	strCodeId = "C_I999";
          } else if (sub.action.toLowerCase().indexOf("ihcp") >= 0) {
          	strCodeId = "C_I999";
          }
          
          if(strCodeId != "C_I001") {        	  
        	  if(strCodeId == "C_I195" || strCodeId == "C_I196" || strCodeId == "C_I197" || strCodeId == "C_I198"){
        		  if(result)
        			  showMsg(strCodeId,result);
        	  }else if(strCodeId == "C_I999"){
        		  showIhMsg(result);  
        	  }else{
        		  showMsg(strCodeId);
        	  }
          }
          
          try{
          	statusMsg(strCodeId);
          }catch(e){
          	logger("popup");
          }

          try{
              callBack(sub.action, rowCount);
          }catch(e){
          	return;
          }
      }
      
      /**************************************************************************
       * function    : chkKeyDupl
       * Description : Grid + Single 중복data 체크
       * Parameter   : gridObj,colIndex,val
       * Return      : boolean
       **************************************************************************/
       function chkKeyDupl(gridObj,colIndex,val){
           for(var rowIndex = 0; rowIndex < gridObj.getRowCount(); rowIndex++){
               if(val == gridObj.getCellData( rowIndex , colIndex )){
                   gridObj.setFocusedCell(rowIndex, colIndex, false);
                   showMsg("C_I055");
                   return false;
               }
           }
           
           return true;
       }

       /*============================================================================
        ** 기능  : 필수입력 컬럼 
        ** 인수 :  grid : 그리드 id, arrCol : 필수입력 컬럼명 배열, singleData : 중복체크 할 싱글컬럼명
        ** 결과  : 오류 false, 정상 true
        ============================================================================*/
       function chkValidSingle(gridObj, arrCol, singleData){
           var rtn = true;
           var rslt;
           for(var i=0 ;i<gridObj.getRowCount(); i++) {
               rslt = "";  
               for(var j=0; j<arrCol.length; j++) {
                   rslt +=gridObj.getCellData(i, arrCol[j]);
                   
                   if(rslt == singleData){
	                   gridObj.setFocusedCell(i, j, false);
	                   showMsg("C_I055");
	                   return false;
                   }
               }
           }
           return true;
       }
       
       /*============================================================================
        ** 기능  :소숫점 자릿수 체크 후 셋팅
        ** 인수  :num -> value,intLength -> 정수 자릿수,floatLength -> 소숫점 자릿수
        ============================================================================*/
       function checkDigitNumber(num,intLength,floatLength, objNm){

           var ret = null;
           
           if(num.charAt(num.length-1) == "." && num.substr(0, num.length-1).indexOf(".") != -1){
        	   ret = num.substring(0,num.length-1);                          
           }
           if(num.indexOf(".") == 0){// 소숫점이 첫번째 있을 경우
        	   ret = "";
           }else if(num.indexOf(".") == -1){// 소숫점 없을경우   
               if(num.length > intLength){         
            	   ret = num.substring(0,num.length-1);                          
               }
           }else{// 소수점이 있을경우
        	   if(num.indexOf(".") > intLength){
        		   showMsg("C_I024",objNm); 
        		   ret = "";
        	   }else if((num.length - num.indexOf(".")) - 1 > floatLength){  //                      
        		   ret = num.substring(0,num.length-1);                          
               }
           }
           return ret;
       }
       
       /*===============================================================
        ** 기능 : 학부입시 입시년도
        ** 인수 : enexYearObj - 콤보박스objet
        **===============================================================*/
       function getIhEnexYear(enexYearObj){
      	 WebSquare.ModelUtil.removeInstanceNode( "reqIhEnexYear" );
       	 setValue("reqIhEnexYear/enexYear","");
       	 
       	 execSubmission("getCommonDataSubm", "reqIhEnexYear", "reqEnexYear","/ihCm/listEnexYear.do");
       	 
       	 setIhEnexYear(enexYearObj);
       }
       
       /*===============================================================
        ** 기능 : 실기종목코드
        ** 인수 : enexYearObj - 콤보박스objet
        **===============================================================*/
       function getIhMajor(majorObj, pEnexYear, pRcritDvcd, pEvalUnitCd){
      	 WebSquare.ModelUtil.removeInstanceNode( "reqIhMajor" );
       	 setValue("reqIhMajor/enexYear",pEnexYear);
       	 setValue("reqIhMajor/rcritDvcd",pRcritDvcd);
       	 setValue("reqIhMajor/evalUnitCd",pEvalUnitCd);
       	 
       	 execSubmission("getCommonDataSubm", "reqIhMajor", "reqMajor","/ihCm/listMajor.do");
       	 
       	 setIhMajor(majorObj);
       }
       
       /*===============================================================
        ** 기능 : 학부입시 입시년도
        ** 인수 : selectObj - 콤보박스objet
        **===============================================================*/
       function setIhEnexYear(selectObj){
      	 var nodePath = "reqEnexYear/object/listEnexYear/object";
      	 
      	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
  	     eval(selectObj).removeAll(true);
  	     
  	     for(var i=1; i<=nodes.length; i++) {
  	     	var value = getValue(nodePath + "[" + i + "]/enexYear");
  	     	eval(selectObj).addItem(value,value);
  	     }
  	     eval(selectObj).setSelectedIndex(0);
       }
       
       
       /*===============================================================
        ** 기능 : 실기종목코드
        ** 인수 : selectObj - 콤보박스objet
        **===============================================================*/
       function setIhMajor(selectObj){
      	 var nodePath = "reqMajor/object/listMajor/object";
      	 
      	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
  	     eval(selectObj).removeAll(true);
  	     
  	     for(var i=1; i<=nodes.length; i++) {
  	     	var value = getValue(nodePath + "[" + i + "]/majorCd");
  	     	var lable = getValue(nodePath + "[" + i + "]/majorNm");
  	     	eval(selectObj).addItem(value,lable);
  	     }
  	     eval(selectObj).setSelectedIndex(0);
       }
       
       /*===============================================================
        ** 기능 : 학부입시 입시년도
        ** 인수 : pahtNode - 복사결과 node
        **===============================================================*/
       function copyIhEnexYearXml(pahtNode){
      	 WebSquare.ModelUtil.removeInstanceNode(pahtNode);
      	 WebSquare.ModelUtil.copyNode("reqEnexYear/object/listEnexYear" , pahtNode);
       }
       
       /*===============================================================
        ** 기능 : 학부_입시 날짜
        ** 인수 : 
        *  firstDay           20120701
        *  today              sysdate
        *  lastDay            20130731
        **===============================================================*/
        function getIhDays(){
             var obj = new Object();
            
             setValue( "reqIhDay/enexYear"     , "" );
  	       	       
  	         execSubmission("getCommonDataSubm", "reqIhDay", "resIhDay","/ihCm/selectIhDay.do");
  	         
  	         obj.firstDay   =  getValue("resIhDay/object/selectIhDay/firstDay");
  	         obj.today      =  getValue("resIhDay/object/selectIhDay/today");
  	         obj.lastDay    =  getValue("resIhDay/object/selectIhDay/lastDay");
  	         
  	         return obj;
        }

        /*===============================================================
         ** 기능 : 학부입시 면접/실기 사정단위코드
         ** 인수 : enexYear - 년도
         **===============================================================*/
        function getIhEvalUnitCd(enexYear, rcritDvcd, rcritModelCd, wrkGbn){
       	 	WebSquare.ModelUtil.removeInstanceNode( "reqIhCmEvalUnitCd" );
        	setValue("reqIhCmEvalUnitCd/enexYear",enexYear);
        	setValue("reqIhCmEvalUnitCd/rcritDvcd",rcritDvcd);
        	setValue("reqIhCmEvalUnitCd/rcritModelCd",rcritModelCd);
        	if (wrkGbn == "I") { //면접
        		setValue("reqIhCmEvalUnitCd/ivExamEnfcYn","Y");
        	} else if (wrkGbn == "A") { //적성
        		setValue("reqIhCmEvalUnitCd/aptiExamEnfcYn","Y");
        	} else if (wrkGbn == "P") { //실시
        		setValue("reqIhCmEvalUnitCd/pracExamEnfcYn","Y");
        	}
        	
        	execSubmission("getCommonDataSubm", "reqIhCmEvalUnitCd", "reqEvalUnitCd","/ihCm/listEvalUnitCd.do");
        }
        
        /*===============================================================
         ** 기능 : 학부입시 면접/실기 사정단위코드 single Combobox 생성
         ** 인수 : selectObj - 콤보박스objet
         **===============================================================*/
        function setIhEvalUnitCdCombo(selectObj){
       	 var nodePath = "reqEvalUnitCd/object/listEvalUnitCd/object";
       	 
       	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
   	     eval(selectObj).removeAll(true);
   	     
   	     for(var i=1; i<=nodes.length; i++) {
   	     	var value = getValue(nodePath + "[" + i + "]/evalUnitCd");
   	     	var lable = getValue(nodePath + "[" + i + "]/evalUnitNm");
   	     	eval(selectObj).addItem(value,lable);
   	     }
   	     eval(selectObj).setSelectedIndex(0);
        }

        /*============================================================================
         ** 기능  : 현재진행여부가 Y인 모집구분코드를 조회 
         ** 결과  : 현재진행여부가 Y인 모집구분코드
         ============================================================================*/    
        function getCurrentRcritDvcd(enexYear,bizDvcd){
            WebSquare.ModelUtil.setInstanceValue( "reqCurrentRcritDvcdParam/enexYear", enexYear );
            WebSquare.ModelUtil.setInstanceValue( "reqCurrentRcritDvcdParam/bizDvcd", bizDvcd );
            execSubmission("getCommonDataSubm", "reqCurrentRcritDvcdParam", "resCurrentRcritDvcd","/ihCm/selectCurrentRcritDvcd.do");
            return WebSquare.ModelUtil.getInstanceValue("resCurrentRcritDvcd/object/ihRcritDvcd/rcritDvcd");
        }
        
        /*===============================================================
         ** 기능 : 학생부점수반영코드 모집단위
         ** 인수 : 
         **===============================================================*/
        function getIhSturcdPontRt(enexYear,rcritDvcd){
       	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCmSturcdPontRt" );
        	 setValue("reqIhCmSturcdPontRt/enexYear",enexYear);
        	 setValue("reqIhCmSturcdPontRt/rcritDvcd",rcritDvcd);
        	 setValue("reqIhCmSturcdPontRt/gubun",'1');
        	 
        	 execSubmission("getCommonDataSubm", "reqIhCmSturcdPontRt", "reqSturcdPontRt","/ihCm/listSturcdPontRt.do");
        }
        
        /*===============================================================
         ** 기능 : 학생부점수반영코드 single Combobox 생성
         ** 인수 : selectObj - 콤보박스objet
         **===============================================================*/
        function setIhSturcdPontRtCombo(selectObj){
       	 var nodePath = "reqSturcdPontRt/object/listSturcdPontRt/object";
       	 
       	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
   	     eval(selectObj).removeAll(true);
   	     
   	     for(var i=1; i<=nodes.length; i++) {
   	     	var value = getValue(nodePath + "[" + i + "]/sturcdPontRtCd");
   	     	var lable = getValue(nodePath + "[" + i + "]/sturcdPontRtNm");
   	     	eval(selectObj).addItem(value,lable);
   	     }
   	     eval(selectObj).setSelectedIndex(0);
        }
        
        /*===============================================================
         ** 기능 : 검정고시점수반영코드 모집단위
         ** 인수 : 
         **===============================================================*/
        function getIhQlfexmPontReflCd(enexYear,rcritDvcd){
       	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCmQlfexmPontReflCd" );
        	 setValue("reqIhCmQlfexmPontReflCd/enexYear",enexYear);
        	 setValue("reqIhCmQlfexmPontReflCd/rcritDvcd",rcritDvcd);
        	 setValue("reqIhCmQlfexmPontReflCd/gubun",'2');
        	 
        	 execSubmission("getCommonDataSubm", "reqIhCmQlfexmPontReflCd", "reqQlfexmPontReflCd","/ihCm/listSturcdPontRt.do");
        }
        
        /*===============================================================
         ** 기능 : 검정고시점수반영코드 single Combobox 생성
         ** 인수 : selectObj - 콤보박스objet
         **===============================================================*/
        function setIhQlfexmPontReflCdCombo(selectObj){
       	 var nodePath = "reqQlfexmPontReflCd/object/listSturcdPontRt/object";
       	 
       	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
   	     eval(selectObj).removeAll(true);
   	     
   	     for(var i=1; i<=nodes.length; i++) {
   	     	var value = getValue(nodePath + "[" + i + "]/sturcdPontRtCd");
   	     	var lable = getValue(nodePath + "[" + i + "]/sturcdPontRtNm");
   	     	eval(selectObj).addItem(value,lable);
   	     }
   	     eval(selectObj).setSelectedIndex(0);
        }

        /*===============================================================
         ** 기능 : 전적대학성적환산점수반영코드 모집단위
         ** 인수 : 
         **===============================================================*/
        function getIhBefUnivPontRt(enexYear,rcritDvcd){
       	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCmBefUnivPontRt" );
        	 setValue("reqIhCmBefUnivPontRt/enexYear",enexYear);
        	 setValue("reqIhCmBefUnivPontRt/rcritDvcd",rcritDvcd);
        	 setValue("reqIhCmBefUnivPontRt/gubun",'5');
        	 
        	 execSubmission("getCommonDataSubm", "reqIhCmBefUnivPontRt", "reqBefUnivPontRt","/ihCm/listBefUnivPontRt.do");
        }

        /*===============================================================
         ** 기능 : 전적대학성적환산점수반영코드 single Combobox 생성
         ** 인수 : selectObj - 콤보박스objet
         **===============================================================*/
        function setIhBefUnivPontRtCombo(selectObj){
       	 var nodePath = "reqBefUnivPontRt/object/listBefUnivPontRt/object";
       	 
       	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
   	     eval(selectObj).removeAll(true);
   	     
   	     for(var i=1; i<=nodes.length; i++) {
   	     	var value = getValue(nodePath + "[" + i + "]/sturcdPontRtCd");
   	     	var lable = getValue(nodePath + "[" + i + "]/sturcdPontRtNm");
   	     	eval(selectObj).addItem(value,lable);
   	     }
   	     eval(selectObj).setSelectedIndex(0);
        }
        
        /*===============================================================
         ** 기능 : 일정별 년도 모집구분
         ** 인수 : searchObj
         ** 결과 : 
         ** 작성자 : 김제석
         **===============================================================*/
        function getIhTpexSchdCd(tpexSchdCd){
            
     	     WebSquare.ModelUtil.removeInstanceNode( "reqTpexSchdCd" );
   	     
             setValue("reqTpexSchdCd/tpexSchdCd", tpexSchdCd);
     	     
     	     execSubmission("getCommonDataSubm", "reqTpexSchdCd", "resTpexSchdCd","/ihCm/selectTpexSchdCd.do");
     	     
		     var obj = new Object();
		     obj.enexYear   =  getValue("resTpexSchdCd/object/tpexSchdCd/enexYear");
		     obj.rcritDvcd  =  getValue("resTpexSchdCd/object/tpexSchdCd/rcritDvcd");
		     obj.schdCn     =  getValue("resTpexSchdCd/object/tpexSchdCd/schdCn");
		     
		     return obj;
        }

        /*===============================================================
         ** 기능 : 일정별 년도 모집구분
         ** 인수 : searchObj(년도, 모집구분, 전형일정코드)
         ** 결과 : 
         ** 작성자 : 김제석
         **===============================================================*/
        function getIhTpexSchdCdAll(enexYear, rcritDvcd, tpexSchdCd){
            
     	     WebSquare.ModelUtil.removeInstanceNode( "reqTpexSchdCd" );
   	     
             setValue("reqTpexSchdCd/enexYear",   enexYear);
             setValue("reqTpexSchdCd/rcritDvcd",  rcritDvcd);
             setValue("reqTpexSchdCd/tpexSchdCd", tpexSchdCd);
             
     	     execSubmission("getCommonDataSubm", "reqTpexSchdCd", "resTpexSchdCd","/ihCm/selectTpexSchdCd2.do");
     	     
		     var obj = new Object();
		     obj.enexYear   =  getValue("resTpexSchdCd/object/tpexSchdCd/enexYear");
		     obj.rcritDvcd  =  getValue("resTpexSchdCd/object/tpexSchdCd/rcritDvcd");
		     obj.schdCn     =  getValue("resTpexSchdCd/object/tpexSchdCd/schdCn");
		     obj.chkYn      =  getValue("resTpexSchdCd/object/tpexSchdCd/chkYn");
		     
		     return obj;
        }
        
        /*===============================================================
         ** 기능 : 수험생 조회
         ** 인수 : searchObj
         ** 결과 : 
         ** 작성자 : 김제석
         **===============================================================*/
        function checkIhEntrStdBas(enexYear,rcritDvcd,studNm,iidno){
            
     	     WebSquare.ModelUtil.removeInstanceNode( "reqEntrStdbas" );
   	     
            setValue("reqEntrStdbas/enexYear", enexYear);
            setValue("reqEntrStdbas/rcritDvcd", rcritDvcd);
            setValue("reqEntrStdbas/studNm", studNm);
            setValue("reqEntrStdbas/iidno", iidno);             
     	     
     	     execSubmission("getCommonDataSubm", "reqEntrStdbas", "resEntrStdbas","/ihCm/selectcheckIhEntrStdBas.do");
     	     
     	    	var obj = new Object();
     	    	obj.enexYear  =  getValue("resEntrStdbas/object/entrStdbas/enexYear");
               obj.rcritDvcd  =  getValue("resEntrStdbas/object/entrStdbas/rcritDvcd");
               obj.iidno      =  getValue("resEntrStdbas/object/entrStdbas/iidno");
               obj.studNm     =  getValue("resEntrStdbas/object/entrStdbas/studNm");
               obj.exmtNo     =  getValue("resEntrStdbas/object/entrStdbas/exmtNo");
               
               return obj;
        }

        /*===============================================================
         ** 기능 : 고교학교코드 조회권한
         ** 인수 : searchObj
         ** 결과 : 
         ** 작성자 : 김용운
         **===============================================================*/
        function checkIhHishSculCd(studNm,iidno){
            
     	    WebSquare.ModelUtil.removeInstanceNode( "reqHishSculCd" );
   	     
            setValue("reqHishSculCd/studNm", studNm);
            setValue("reqHishSculCd/iidno", iidno);             
     	     
     	    execSubmission("getCommonDataSubm", "reqHishSculCd", "resHishSculCd","/ihCm/selectcheckIhHishSculCd.do");
     	     
     	    var obj = new Object();
 	    	obj.hishSculCd  =  getValue("resHishSculCd/object/hishSculCd/hishSculCd");
            obj.hishSculNm  =  getValue("resHishSculCd/object/hishSculCd/hishSculNm");
               
            return obj;
        }
        
        /*===============================================================
         ** 기능 : 전형일정 발표기간체크
         ** 인수 : searchObj
         ** 결과 : 
         ** 작성자 : 김용운
         **===============================================================*/
        function tpexSchdCdDateChk(enexYear, rcritDvcd, tpexSchdCd, exmtNo, iidno){
            var rtn = true;
            setValue("reqInit/enexYear"  , enexYear);
            setValue("reqInit/rcritDvcd" , rcritDvcd);
            setValue("reqInit/tpexSchdCd", tpexSchdCd); //전형일정코드
            setValue("reqInit/exmtNo"    , exmtNo);
            setValue("reqInit/iidno"     , iidno);
            execSubmission("sub1", "reqInit", "respInitList","/ihCm/selectIhPassDtChk.do");
            var chkYn = WebSquare.ModelUtil.getInstanceValue("respInitList/object/ihSchd/chkYn");
            return chkYn;
        }
        
        /*===============================================================
         ** 기능 : 납부할 등록차수
         ** 인수 : searchObj
         ** 결과 : 
         ** 작성자 : 김용운
         **===============================================================*/
        function getIhRegSeqCd(enexYear, rcritDvcd, exmtNo){
            setValue("reqInit/enexYear"  , enexYear);
            setValue("reqInit/rcritDvcd" , rcritDvcd);
            setValue("reqInit/exmtNo"    , exmtNo);
            execSubmission("sub1", "reqInit", "respInitList","/ihCm/selectIhReqSeqCd.do");
            var vReqSeqCd = WebSquare.ModelUtil.getInstanceValue("respInitList/object/ihSeq/regSeqCd");
            return vReqSeqCd;
        }
        
        /*===============================================================
         ** 기능 : 가상계좌 생성여부
         ** 인수 : searchObj
         ** 결과 : 
         ** 작성자 : 김용운
         **===============================================================*/
        function getIhVacntNoYn(enexYear, rcritDvcd, exmtNo, regSeqCd){
            setValue("reqInit/enexYear"  , enexYear);
            setValue("reqInit/rcritDvcd" , rcritDvcd);
            setValue("reqInit/exmtNo"    , exmtNo);
            setValue("reqInit/regSeqCd"  , regSeqCd);
            execSubmission("sub1", "reqInit", "respInitList","/ihCm/selectIhVacntNoYn.do");
            var vVacntNoYn = WebSquare.ModelUtil.getInstanceValue("respInitList/object/ihVacnt/vacntNoYn");
            return vVacntNoYn;
        }

        /*===============================================================
         ** 기능 : 합격차수 모집구분
         ** 인수 : 
         **===============================================================*/
        function getIhPassSeqCd(val){
       	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCmRcritDv" );
        	 setValue("reqIhCmPassSeqCd/passSeq","PASS_SEQ");
        	 setValue("reqIhCmPassSeqCd/cmcdVal", val);
        	 //setValue("reqIhCmPassSeqCd/cmcdVal","01");
        	 
        	 //listRcritDv
        	 execSubmission("getCommonDataSubm", "reqIhCmPassSeqCd", "reqPassSeqCd","/ihCm/listPassSeqCd.do");
        }
        
        /*===============================================================
         ** 기능 : 합격차수 single Combobox 생성
         ** 인수 : selectObj - 콤보박스objet
         **===============================================================*/
        function getIhPassSeqCdCombo(selectObj){
	       	 var nodePath = "reqPassSeqCd/object/listPassSeqCd/object";
	       	 
	       	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
	   	     eval(selectObj).removeAll(true);
   	     
	   	     /* 
	   	     // (기존) 최대값 set
	   	     for(var i=1; i<=nodes.length; i++) {
	   	     	var value = getValue(nodePath + "[" + i + "]/rcritDvcd");
	   	     	var lable = getValue(nodePath + "[" + i + "]/rcritDvnm");
	   	     	eval(selectObj).addItem(value,lable);
	   	     }
	   	     */
	   	     
	   	     // (수정) 최대값 이하(1 ~ max)
	   	     var maxSeq = getValue(nodePath + "[1]/rcritDvcd");
	   	     
	   	     for(var i=1 ; i <= maxSeq ; i++) {
	   	    	
	   	    	//20191213  김기태 요청  LYY
	   	    	//합격차수 셀렉트박스에 1차는 최초, 2차는 추가1차, 3차는 추가2차 ...... 이런식으로 표시되게 수정
	 	     	var tmpI;
	 	     	tmpI = i - 1;
	   	    	if(i==1) {
	 	     		eval(selectObj).addItem(i,"최초");
	 	     	} else {
	 	     		eval(selectObj).addItem(i,"추가"+ tmpI + "차");
	 	     	}
		     }
	   	     eval(selectObj).setSelectedIndex(maxSeq);
        }

        /*===============================================================
         ** 기능 : 학부입시 작업학과
         ** 인수 : enexYear - 년도
         **===============================================================*/
        function getIhTransDpmjCd(enexYear){
            WebSquare.ModelUtil.removeInstanceNode( "reqIhCmTransDpmjCd" );
            setValue("reqIhCmTransDpmjCd/enexYear",enexYear);
            
            execSubmission("getCommonDataSubm", "reqIhCmTransDpmjCd", "resTransDpmjCd","/ihCm/listTransDpmjCd.do");
        }

        /*===============================================================
         ** 기능 : 학부입시 작업학과 single Combobox 생성
         ** 인수 : selectObj - 콤보박스objet
         **===============================================================*/
        function setIhTransDpmjCdCombo(selectObj){
            var nodePath = "resTransDpmjCd/object/listTransDpmjCd/object";
            
            var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
            eval(selectObj).removeAll(true);
            
            for(var i=1; i<=nodes.length; i++) {
               var value = getValue(nodePath + "[" + i + "]/fcltDpmjCd");
               var lable = getValue(nodePath + "[" + i + "]/fcltDpmjNm");
               eval(selectObj).addItem(value,lable);
            }
            eval(selectObj).setSelectedIndex(0);
        }

        /*===============================================================
         ** 기능 : 학과별 작업시작학번 뒷3자리
         ** 인수 : 
         **===============================================================*/
         function getIhDpmjLastSno(trsfYear, dpmjCd){
             var obj = new Object();
        	 
             setValue( "reqIhDay/trsfYear" , trsfYear );
             setValue( "reqIhDay/dpmjCd"   , dpmjCd );
              
   	        execSubmission("getCommonDataSubm", "reqIhDay", "resIhDay","/ihCm/selectIhDpmjLastSno.do");
   	         
   	        obj.lastSno  =  getValue("resIhDay/object/selectIhDpmjLastSno/lastSno");
   	        obj.cutSno   =  getValue("resIhDay/object/selectIhDpmjLastSno/cutSno");
   	         
   	        return obj;
        }
         
         /*===============================================================
          ** 기능 : 학부입시 모집구분별모집전형
          ** 인수 : 
          **===============================================================*/
         function getIhPrfnDpmjCd(enexYear,rcritDvcd){
        	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCm" );
         	 setValue("reqIhCm/enexYear",enexYear);
         	 setValue("reqIhCm/rcritDvcd",rcritDvcd);
         	 
         	 execSubmission("getCommonDataSubm", "reqIhCm", "reqPrfnDpmjCd","/ihCm/listPrfnDpmjCd.do");
         }
         
         /*===============================================================
          ** 기능 : 학부입시 모집구분별모집전형구분 single Combobox 생성
          ** 인수 : selectObj - 콤보박스objet
          **===============================================================*/
         function setIhPrfnDpmjCdCombo(selectObj){
        	 var nodePath = "reqPrfnDpmjCd/object/listPrfnDpmj/object";
        	 
        	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
    	     eval(selectObj).removeAll(true);
    	     
    	     for(var i=1; i<=nodes.length; i++) {
    	     	var value = getValue(nodePath + "[" + i + "]/prfnDpmj");
    	     	var lable = getValue(nodePath + "[" + i + "]/prfnDpmj");
    	     	eval(selectObj).addItem(value,lable);
    	     }
    	     eval(selectObj).setSelectedIndex(0);
         }
         
         /*===============================================================
          ** 기능 : 부여차수SET(모집전형, 사정단위 선택시 해당부여차수 RETURUN)
          ** 인수 : 
          **===============================================================*/
         function getIhVestSeqCd(enexYear,rcritDvcd,rcritModelCd,evalUnitCd){
             WebSquare.ModelUtil.removeInstanceNode( "reqIhCm" );
             setValue("reqIhCm/enexYear",enexYear);
             setValue("reqIhCm/rcritDvcd",rcritDvcd);
             setValue("reqIhCm/rcritModelCd",rcritModelCd);
             setValue("reqIhCm/evalUnitCd"  ,evalUnitCd);
         	 
         	 execSubmission("getCommonDataSubm", "reqIhCm", "reqVestSeqCd","/ihCm/listVestSeqCd.do");
         }
         
         /*===============================================================
          ** 기능 : 부여차수 single Combobox 생성
          ** 인수 : selectObj - 콤보박스objet
          **===============================================================*/
         function setIhVestSeqCdCombo(selectObj){
        	 var nodePath = "reqVestSeqCd/object/listVestSeq/object";
        	 
        	 var nodes = WebSquare.ModelUtil.findInstanceNodes(nodePath);
    	     eval(selectObj).removeAll(true);
    	     
    	     for(var i=1; i<=nodes.length; i++) {
    	     	var value = getValue(nodePath + "[" + i + "]/vestSeqCd");
    	     	var lable = getValue(nodePath + "[" + i + "]/vestSeqNm");
    	     	eval(selectObj).addItem(value,lable);
    	     }
    	     eval(selectObj).setSelectedIndex(0);
         }
         
         /*===============================================================
          ** 기능 : 학부입시 최종답안산출 마감코드
          ** 인수 : 
          **===============================================================*/
         function getIhClosCd(bizDvcd){
        	 WebSquare.ModelUtil.removeInstanceNode( "reqIhCm" );
         	 setValue("reqIhCm/bizDvcd",bizDvcd);
         	 
         	 execSubmission("getCommonDataSubm", "reqIhCm", "reqRcritModel","/ihCm/listIhClosCd.do");
         }