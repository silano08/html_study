/**
 * @target
 */


    /*===============================================================
    ** 기능 : 학생을 검색하여 한 명이면 조회, 그 외는 팝업을 호출한다.
    ** 인수 : 학번 오브젝트, 성명 오브젝트, 서브미션, 기본정보조회 boolean
    ** 결과 : 학번, 성명 오브젝트에 값 할당, 학생검색 팝업 호출, 기본정보조회
    **===============================================================*/
    function searchStudent(schSno, schStudNm, subMissionId, isBaseInfoSearch, birthDt){
        var msg = "학번/성명을 두 자리 이상 입력하세요!";
        var searchSno = schSno.getValue();
        var isSearch = false;
        
        if(searchSno.length<2){
            showMsg("C_I046");
            return;
        }
        
        schSno.blur();
        
        setValue("reqStudentNo/unifUid", getUserInfoValue("unifUid"));
        setValue("reqStudentNo/userTypeCd", getUserInfoValue("userTypeCd"));
        setValue("reqStudentNo/orgCd", getUserInfoValue("orgCd"));
        WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/sno" , searchSno );
        execSubmission(subMissionId, "reqStudentNo", "res/searchStudent","/scrgBas/searchStudent.do");
        
        var sNo  = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/sno" );
        var sNm  = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/studNm" );
        var sCnt = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/studentCnt" );
          
        if( sCnt == 1){
            schSno.setValue(sNo);
            schStudNm.setValue(sNm);
            if(isBaseInfoSearch){
                getStudentBaseInfo(sNo, subMissionId); //학생기본정보 조회
            }
            isSearch = true;
            
        }else{
            isSearch = onClickStudentPopUp(schSno, schStudNm, subMissionId, isBaseInfoSearch, birthDt); //학생검색 팝업호출
        }
        
        return isSearch;
    }

    
    function searchStudent2(schSno, schStudNm, subMissionId, isBaseInfoSearch, birthDt){
        var msg = "학번/성명을 두 자리 이상 입력하세요!";
        var searchSno = schSno;
        var isSearch = false;
        if(searchSno.length<2){
            showMsg("C_I046");
            return;
        }
        
        setValue("reqStudentNo/unifUid", getUserInfoValue("unifUid"));
        setValue("reqStudentNo/userTypeCd", getUserInfoValue("userTypeCd"));
        setValue("reqStudentNo/orgCd", getUserInfoValue("orgCd"));
        WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/sno" , searchSno );
        execSubmission(subMissionId, "reqStudentNo", "res/searchStudent","/scrgBas/searchStudent.do");
        var sNo  = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/sno" );
        var sNm  = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/studNm" );
        var sCnt = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/studentCnt" );
        if( sCnt == 1){
            schStudNm.setValue(sNm);
            if(isBaseInfoSearch){
            	getStudentBaseInfo(sNo, subMissionId); //학생기본정보 조회
            }
            isSearch = true;
            
        }else{
            isSearch = onClickStudentPopUp(schSno, schStudNm, subMissionId, isBaseInfoSearch, birthDt); //학생검색 팝업호출
        }
        
        return isSearch;
    }
    
    
    /*학과  or 대학원모두 찾기*/
    function searchStudentAll(schSno, schStudNm, subMissionId, isBaseInfoSearch, birthDt){
        var msg = "학번/성명을 두 자리 이상 입력하세요!";
        var searchSno = schSno.getValue();
        var isSearch = false;
        
        if(searchSno.length<2){
            showMsg("C_I046");
            return;
        }
        
        schSno.blur();
        
        setValue("reqStudentNo/unifUid", getUserInfoValue("unifUid"));
        setValue("reqStudentNo/userTypeCd", getUserInfoValue("userTypeCd"));
        setValue("reqStudentNo/orgCd", getUserInfoValue("orgCd"));
        WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/sno" , searchSno );
        execSubmission(subMissionId, "reqStudentNo", "res/searchStudent","/scrgBas/searchStudentAll.do");
        
        var sNo  = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/sno" );
        var sNm  = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/studNm" );
        var sCnt = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/studentCnt" );
          
        if( sCnt == 1){
            schSno.setValue(sNo);
            schStudNm.setValue(sNm);
            if(isBaseInfoSearch){
                getStudentBaseInfo(sNo, subMissionId); //학생기본정보 조회 - 학번으로 찾아서 그대로 사용
            }
            isSearch = true;
            
        }else{
            isSearch = onClickStudentPopUpAll(schSno, schStudNm, subMissionId, isBaseInfoSearch, birthDt); //학생검색 팝업호출
        }
        
        return isSearch;
    }   

    /*===============================================================
     ** 기능 : 학생검색 팝업 호출
     ** 인수 : 학번 오브젝트, 성명 오브젝트, 서브미션, 기본정보조회 boolean
     ** 결과 : 학번, 성명 오브젝트에 값 할당, 기본정보조회
     **===============================================================*/
    function onClickStudentPopUp(sNo, studNm, subMissionId, isBaseInfoSearch, birthDt){
        var isSearch = false;
        var eSno = WebSquare.text.BASE64URLEncoder(sNo.getValue());
        var eSnoId = WebSquare.text.BASE64URLEncoder(sNo.getID());
        var eStudNmId = WebSquare.text.BASE64URLEncoder(studNm.getID());
        var eSubMissionId = WebSquare.text.BASE64URLEncoder(subMissionId);
        var eBirthDt = WebSquare.text.BASE64URLEncoder(setEmptyValue(birthDt));
        openPopup("setStudPopupValue", "/views/usw/sa/hj/SA_HJ_1140.xml"
                , { width      : 1020
                  , height     : 450
                  , resizable  : false
                  , scrollbars : false }
                , { pSno              : eSno
                  , pSnoId            : eSnoId
                  , pStudNmId         : eStudNmId
                  , pSubMissionId     : eSubMissionId
                  , pIsBaseInfoSearch : isBaseInfoSearch
                  , pBirthDt          : eBirthDt}) ;
         
        /*
        if (rArr != undefined && rArr != null) {
           sNo.setValue( rArr[0] );
           studNm.setValue( rArr[1] );
           isSearch = true;
           
           if(isBaseInfoSearch) {
               getStudentBaseInfo(rArr[0], subMissionId); //학생기본정보 조회
           }
        }
        
        return isSearch;
        */                                           
    }
    
    /*===============================================================
     ** 기능 : 학생검색 팝업 호출 (학과 대학원 모두 찾기 팝업)
     ** 인수 : 학번 오브젝트, 성명 오브젝트, 서브미션, 기본정보조회 boolean
     ** 결과 : 학번, 성명 오브젝트에 값 할당, 기본정보조회
     **===============================================================*/
    function onClickStudentPopUpAll(sNo, studNm, subMissionId, isBaseInfoSearch, birthDt){
        var isSearch = false;
        var eSno = WebSquare.text.BASE64URLEncoder(sNo.getValue());
        var eSnoId = WebSquare.text.BASE64URLEncoder(sNo.getID());
        var eStudNmId = WebSquare.text.BASE64URLEncoder(studNm.getID());
        var eSubMissionId = WebSquare.text.BASE64URLEncoder(subMissionId);
        var eBirthDt = WebSquare.text.BASE64URLEncoder(setEmptyValue(birthDt));
        openPopup("setStudPopupValue", "/views/usw/sa/hj/SA_HJ_1141.xml"
                , { width      : 1020
                  , height     : 450
                  , resizable  : false
                  , scrollbars : false }
                , { pSno              : eSno
                  , pSnoId            : eSnoId
                  , pStudNmId         : eStudNmId
                  , pSubMissionId     : eSubMissionId
                  , pIsBaseInfoSearch : isBaseInfoSearch
                  , pBirthDt          : eBirthDt}) ;
                                                   
    }    
    
    
    function setStudPopupValue(rtn){
        if (rtn != undefined || rtn != null || rtn != "") {
            
            eval(rtn[2]).setValue( rtn[0] );
            eval(rtn[3]).setValue( rtn[1] );
            isSearch = true;
            if(rtn[5]) {
                getStudentBaseInfo(rtn[0], rtn[4]); //학생기본정보 조회
                selectStudInfo("R");
            }
            
        }
    }
    
    
    
    
    /*===============================================================
     ** 기능 : 기본정보조회
     ** 인수 : 학번 , 서브미션id
     ** 결과 : wfrmae 학생기본정보 조회
     **===============================================================*/
    function getStudentBaseInfo(sNo, subMissionId){
        WebSquare.ModelUtil.setInstanceValue( "wfReq/sno" , sNo );
        execSubmission(subMissionId,"wfReq","res/studBasInfo","/scrgBas/selectScrgBas.do");
        var grde = getValue("res/studBasInfo/object/studentInfo/studGrde");
        var tprom_grde = getValue("res/studBasInfo/object/studentInfo/tpromGrde");

        if(grde < tprom_grde){
        	var tObj = typeof wfStudGrde;
            if(!(tObj == "undefined" || tObj == undefined)){
                wfStudGrde.setValue(grde + "->" +tprom_grde);
            }
        }else{
        	var tObj = typeof wfStudGrde;
            if(!(tObj == "undefined" || tObj == undefined)){
                wfStudGrde.setValue(grde);
            }
        }
        
        var tScrgStatNm = getValue("res/studBasInfo/object/studentInfo/scrgStatNm");
        var tSxchSculNm = getValue("res/studBasInfo/object/studentInfo/exchSculNm");
        
        var tWfScrgStatNm = typeof wfScrgStatNm;
        if(!(tWfScrgStatNm == "undefined" || tWfScrgStatNm == undefined)){
        	wfScrgStatNm.setValue(tScrgStatNm + tSxchSculNm);
        }
        //setStudImg(getValue("res/studBasInfo/object/studentInfo/photoFileId"));
    }
    
    

     
    /*============================================================================
     ** 기능  : 신규상태 행의 체크박스 체크 시 해당 행 삭제
     ** 인수 : 행번호, 그리드id, 그리드 내 체크박스 컬럼 id
     ** 결과  : 
     ============================================================================*/
    
    function deleteNewRow(rowIndex, gridId, checkBoxId){
    	
    	if(gridId.getHeaderValue(checkBoxId) == 1){
    		if(gridId.getRowStatus( rowIndex ) == "C"){
    			gridId.setCellData( rowIndex, checkBoxId, 0 );
        		return;
    		}
    	}
        
        if(gridId.getCellData( rowIndex , checkBoxId ) == "1"){
            if(gridId.getRowStatus( rowIndex ) == "C"){
                var msg = eval("C_Q002");
                jConfirm(msg, 'Question', function(r) {
                    if (r) {
                        gridId.removeRow(rowIndex);
                    }else{
                        gridId.setCellData( rowIndex , checkBoxId , 0 );
                    }
                }
                );
            }
        }
     } 
    
    /*============================================================================
     ** 기능  : MsterGrid에서 자식레코드가 있는 컬럼의 삭제체크박스를 눌렀을 경우
     *          삭제할지 안할지 선택하게 한다.
     ** 인수  : 행번호, 그리드Object, 그리드 내 체크박스 컬럼 id, sub 그리드 object
     ** 결과  : 
     ============================================================================*/
    function deleteNewRowCheck(rowIndex, gridObj, checkBoxId, subGridObj){
    	
        if(gridObj.getCellData( rowIndex , checkBoxId ) == "1"){
            if(gridObj.getRowStatus( rowIndex ) == "C"){
                var msg = eval("C_Q002");
                jConfirm(msg, 'Question', function(r) {
                    if (r) {
                    	gridObj.removeRow(rowIndex);
                    }else{
                    	gridObj.setCellData( rowIndex , checkBoxId , 0 );
                    }
                }
                );
            }else if(subGridObj.getRowCount() != 0){            	
            	var msg = eval("C_Q007");
            	
            	jConfirm(msg, 'Question', function(r) {
                    	if (!r){
                    		gridObj.setCellData( rowIndex , checkBoxId , 0);
                    	}
                	}
            	);
            }
        }
     }
    
     /*============================================================================
     ** 기능  : 장학코드 selectbox 생성
     ** 인수 : 서브미션id, selectbox ID, 조직그룹코드, 사용여부, 신청가능여부
     ** 결과  : 
     ============================================================================*/       
      function getSchoCdSelectbox(submissionId, selectboxId, orgGroupCd, useYn, schoApplPsblYn, srialEflnYn){
    	      	
        WebSquare.ModelUtil.removeChildNodes( "reqSchoCd" );
        
        WebSquare.ModelUtil.setInstanceValue( "reqSchoCd/orgGroupCd" , orgGroupCd );
        WebSquare.ModelUtil.setInstanceValue( "reqSchoCd/useYn" , useYn );
        WebSquare.ModelUtil.setInstanceValue( "reqSchoCd/schoApplPsblYn" , schoApplPsblYn );
        WebSquare.ModelUtil.setInstanceValue( "reqSchoCd/srialEflnYn" , srialEflnYn );
        
        execSubmission(submissionId, "reqSchoCd", "resSchoCd", "/eflnBas/listEflnBasSelectbox.do");
        
        if(selectboxId != ""){
        	eval(selectboxId).setNodeSet( "resSchoCd/object/schoCdList/object", "schoNm", "schoCd");
        }
    }
    


    
    /*============================================================================
     ** 기능  : 그리드의 상태값을 셋팅한다.
     ** 인수  : gridObject
     ** 결과  : 
     ============================================================================*/
     function setGridRowStatus(gridObj){
        for(var gridIndex = 0; gridIndex < gridObj.getRowCount(); gridIndex++){
            gridObj.setCellData( gridIndex   , "status", gridObj.getRowStatus(gridIndex) );
        }               
     }
     
     /*============================================================================
      ** 기능  : 베이스노드의 데이터를 베이스노드의 ID와 그룹내의 같은 ID를 가지는 오브젝트에 값을 할당한다. 
      ** 인수  : groupId, baseNode
      ** 결과  : 
      ============================================================================*/     
      function setObjectValue(object, baseNode){
        var childArr = object.getChildren();
        for(var index in childArr ){
        	var obj = childArr[index];
        	var pluginType = obj.getPluginName().toLowerCase();
        	if (pluginType == "group") {
        	    setObjectValue(obj, baseNode);
        	}else if( pluginType == "input"
	               || pluginType == "inputcalendar"
	               || pluginType == "textarea"
	               || pluginType == "selectbox") {
                var value =  WebSquare.ModelUtil.getInstanceValue(baseNode + obj.getID());
                obj.setValue(value);
            }
	    }
	}
      
      /*============================================================================
       ** 기능  : 입력된 년도가 19xx ~ 20xx인지 체크한다.
       *          1900~2099년도 true
       *          null false
       ** 인수  : val (YYYY)
       ** 결과  : boolean
       ============================================================================*/
      function checkYear(val){
          var yearRegExp = /19|20[0-9]{2}$/;
          
          return yearRegExp.test(val);
        }  
        function checkYear2(obj,msg){
          var tMsg = msg || "년도";
          if ( !checkYear( obj.getValue() ) ){
              obj.setValue("");
              showMsg("C_I024",tMsg,obj);
              return false;
          }
          return true;
       }	
        
        
	    /*============================================================================
	     ** 기능  : 입력된 값이 정상적인 생년월일인지 체크한다.
	     ** 인수  : val (YYMMDD)
	     ** 결과  : boolean
	     ============================================================================*/
		function checkBirth( arg ){
		    if( arg.length != 6 ){
		    	showMsg("C_I210");
		    	return false;
			}
		    
		    var json = [{"val" : parseInt(arg.substring(0, 2)), "from" : 0, "to" : 99},
						{"val" : parseInt(arg.substring(2, 4)), "from" : 1, "to" : 12},
						{"val" : parseInt(arg.substring(4)),    "from" : 1, "to" : 31}];
		                
		    for(var i = 0; i < json.length; i++)
	        if( !(json[i].val >= json[i].from && json[i].val <= json[i].to) ){
	    		showMsg("C_I211");
	    		return false;
	        }
		    
		    return true;
		}
      
      /*===============================================================
       ** 기능 : 년도/학기별 학사일정
       ** 인수 : year,smrCd,orgGroupCd,acalCd-학사일정코드
       *  schdYn           Y or N
       *  acalSdtm         YYYY-MM-DD HH24:MI:SS
       *  acalEdtm         YYYY-MM-DD HH24:MI:SS
       *  allDd            YYYY-MM-DD ~ YYYY-MM-DD
       *  allDt            YYYY-MM-DD HH24:MI:SS ~ YYYY-MM-DD HH24:MI:SS
       **===============================================================*/
       function getSchd(year,smrCd,orgGroupCd,acalCd){
           var obj = new Object();
           
           WebSquare.ModelUtil.setInstanceValue( "reqSchdParam/year"         , year );
	       WebSquare.ModelUtil.setInstanceValue( "reqSchdParam/smrCd"        , smrCd );
	       WebSquare.ModelUtil.setInstanceValue( "reqSchdParam/orgGroupCd"   , orgGroupCd );
	       WebSquare.ModelUtil.setInstanceValue( "reqSchdParam/acalCd"       , acalCd );
	       
	       execSubmission("getCommonDataSubm", "reqSchdParam", "resSchd","/saCm/selectSaSchd.do");
	       
	       obj.schdYn   =  WebSquare.ModelUtil.getInstanceValue("resSchd/object/schd/schdYn");
	       obj.acalSdtm =  WebSquare.ModelUtil.getInstanceValue("resSchd/object/schd/acalSdtm");
	       obj.acalEdtm =  WebSquare.ModelUtil.getInstanceValue("resSchd/object/schd/acalEdtm");
	       obj.allDd    =  WebSquare.ModelUtil.getInstanceValue("resSchd/object/schd/allDd");
	       obj.allDt    =  WebSquare.ModelUtil.getInstanceValue("resSchd/object/schd/allDt");
	       obj.todayDt    =  WebSquare.ModelUtil.getInstanceValue("resSchd/object/schd/todayDt");
	       
	       return obj;
       }
       
      /*============================================================================
       ** 기능  : single 화면 컴포넌트 disabled
       ** 인수  : objId
       ** 결과  : 
       ============================================================================*/
      function setSingleDisabled(objId){
    	  var arr = objId.split(",");
    	  
    	  for(var i=0;i<arr.length;i++){
    		  eval(arr[i]).setDisabled(true);
    		  eval(arr[i]).setReadOnly(true);
    		  eval(arr[i]).setStyle( "background-color" , "#eeeeee" );
    	  }
      }
      
      /*============================================================================
       ** 기능  : single 화면 컴포넌트 enables
       ** 인수  : objId
       ** 결과  : 
       ============================================================================*/      
      function setSingleEnabled(objId){
    	  var arr = objId.split(",");
    	  
    	  for(var i=0;i<arr.length;i++){
    		  eval(arr[i]).setDisabled(false);
    		  eval(arr[i]).setReadOnly(false);
    		  eval(arr[i]).setStyle( "background-color" , "" );
    	  }
      }
      
       
       
       /*============================================================================
        ** 기능  : 그리드내에서 여러 컬럼과 비교하여 해당 입력 값과 일치 하는 행번호를 찾는다. 
        *        그리드 입력행 처리 시 gridNewRow() 함수로 처리한 그리드에서 적용 ( 필수 입력값 체크 위해)
        ** 인수 :  object : 그리드 id,
        *        strKey : 그리드의 값과 비교 할 값 
        *        key필드 1, key필드2.... : 그리드내에서 비교할 컬럼 리스트  
        ** 결과  : 찾은 행의 번호를 배열로 Return
        ============================================================================*/
       function getMatchedRowIndex() {
           var matchIdxArr = new Array();
           var object   = eval(arguments[0]);
           var strKey   = arguments[1];       // 비교 대상 변수
           
           for (var i=0;i<object.getRowCount();i++) { 
                // 그리드내에 동일한 자료가 있는지 체크 한다. getMatched  함수는 한개의 필드에 대해서만 비교하기 때문에 일일이 비교 하여 처리
                var strData = "";
                var tStrData = "";

                for (var argIdx=2;argIdx<arguments.length;argIdx++) {   
                    tStrData += object.getCellData( i , arguments[argIdx] ) + "|";
                }
                
                var size = tStrData.length-1;
                tStrData = tStrData.substring(0, size );
                
                if (strKey == tStrData) {
                   return i;
                }
           }
           return -1;
       }
       

       
       
       /*===============================================================
       ** 기능 : getSmrCd
       **===============================================================*/
       function getSmrCd(smrCd){
    	   var rValue = 0;
    	   
    	   if(smrCd == "15" || smrCd == "25" ){
    		   rValue = parseInt(smrCd) + 5 ; 
    	   }else
    		   rValue = smrCd;
    	   
           return rValue.toString();
           
       }
       
       /*===============================================================
        ** 기능 : 학생을 검색하여 한 명이면 조회, 그 외는 팝업을 호출한다.
        ** 인수 : 학번 오브젝트, 성명 오브젝트, 서브미션, 기본정보조회 boolean
        ** 결과 : 학번, 성명 오브젝트에 값 할당, 학생검색 팝업 호출, 기본정보조회
        **===============================================================*/
        function searchStudentObj(searchObj, subMissionId){
            var searchSno = searchObj.sno; 
            var isSearch = false;
            
            if(searchSno.length<2){
                showMsg("C_I046");
                return;
            }
            
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/univCd" ,      setEmptyValue(searchObj.univCd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/dpmjCd" ,      setEmptyValue(searchObj.dpmjCd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/mjorCd" ,      setEmptyValue(searchObj.mjorCd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/studDvcd" ,    setEmptyValue(searchObj.studDvcd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/scrgStatCd" ,  setEmptyValue(searchObj.scrgStatCd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/deptCd" ,      setEmptyValue(searchObj.deptCd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/tpromGrde" ,   setEmptyValue(searchObj.tpromGrde) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/sno" ,         setEmptyValue(searchObj.sno) );
            
            setValue("reqStudentNo/unifUid", getUserInfoValue("unifUid"));
            setValue("reqStudentNo/userTypeCd", getUserInfoValue("userTypeCd"));
            setValue("reqStudentNo/orgCd", getUserInfoValue("orgCd"));
            
            if(searchObj.sno == ""){
            	logger("검색할 학번이 없습니다.");
            	return;
            }
            
            execSubmission(subMissionId, "reqStudentNo", "res/searchStudent","/scrgBas/searchStudent.do");
            
            var sNo  = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/sno" );
            var sCnt = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/studentCnt" );
            
            if( sCnt == 1){
            	
                getStudentBaseInfo(sNo, subMissionId); //학생기본정보 조회
                isSearch = true;
                setGridStudPopup();
                
            }else{
                isSearch = onClickStudentPopUpObj(searchObj, subMissionId); //학생검색 팝업호출
            }
            
            return isSearch;
        }     
        
        /*===============================================================
         ** 기능 : 학생검색 팝업 호출
         ** 인수 : 학번 오브젝트, 성명 오브젝트, 서브미션, 기본정보조회 boolean
         ** 결과 : 학번, 성명 오브젝트에 값 할당, 기본정보조회
         **===============================================================*/
        function onClickStudentPopUpObj(searchObj, subMissionId){
        	/*
        	if(searchObj.sno == ""){
            	logger("검색할 학번이 없습니다.");
            	return;
            }
            */
        	
            var isSearch = false;
            var eUnivCd     = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.univCd) );    
            var eDpmjCd     = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.dpmjCd) );    
            var eMjorCd     = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.mjorCd) );    
            var eStudDvcd   = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.studDvcd) );  
            var eScrgStatCd = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.scrgStatCd) );
            var eDeptCd     = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.deptCd) );    
            var eTpromGrde  = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.tpromGrde) ); 
            var eSno        = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.sno) );
            
            var eSubMissionId = WebSquare.text.BASE64URLEncoder(subMissionId);
            
            /*
            searchObj.univCd        = "";
            searchObj.dpmjCd        = "";
            searchObj.mjorCd = "";
            searchObj.studDvcd = "";
            searchObj.scrgStatCd = "";
            searchObj.deptCd = schOrgCd.getValue();
            searchObj.tpromGrde = schSchoGrde.getValue();
            searchObj.sno = value;
            */
            
            openPopup("setStudGridPopupValue", "/views/usw/sa/hj/SA_HJ_1140.xml"
                    , { width      : 1020
                      , height     : 450
                      , resizable  : false
                      , scrollbars : false }
                    , { pSno              : eSno
                      , pSubMissionId     : eSubMissionId
                      , pUnivCd     : eUnivCd    
                	  , pDpmjCd     : eDpmjCd    
             	      , pMjorCd     : eMjorCd    
             	      , pStudDvcd   : eStudDvcd
             	      , pScrgStatCd : eScrgStatCd
             	      , pDeptCd     : eDeptCd
             	      , pTpromGrde  : eTpromGrde }) ;
            
            
            /*
            if (rArr != undefined && rArr != null) {
               isSearch = true;
               getStudentBaseInfo(rArr[0], subMissionId); //학생기본정보 조회
            }
            
            return isSearch;
            */                                           
        }
        
        function setStudGridPopupValue(rtn){
        	
            if (rtn != undefined || rtn != null || rtn != "") {
                getStudentBaseInfo(rtn[0], rtn[4]); //학생기본정보 조회
                setGridStudPopup();
                return true;
            }
        } 
        
        /*===============================================================
         ** 기능 : 학생을 검색하여 한 명이면 조회, 그 외는 팝업을 호출한다.
         ** 인수 : 학번 오브젝트, 성명 오브젝트, 서브미션, 기본정보조회 boolean
         ** 결과 : 학번, 성명 오브젝트에 값 할당, 학생검색 팝업 호출, 기본정보조회
         **===============================================================*/
         function searchStudentGaObj(searchObj, subMissionId){
             var searchSno = searchObj.sno; 
             
             if(searchSno.length<2){
                 showMsg("C_I046");
                 return;
             }
             
             WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/orgGroupCd",   setEmptyValue(searchObj.orgGroupCd) );
             WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/dpmjCd" ,      setEmptyValue(searchObj.dpmjCd) );
             WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/mjorCd" ,      setEmptyValue(searchObj.mjorCd) );
             WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/studDvcd" ,    setEmptyValue(searchObj.studDvcd) );
             WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/scrgStatCd" ,  setEmptyValue(searchObj.scrgStatCd) );
             WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/deptCd" ,      setEmptyValue(searchObj.deptCd) );
             WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/tpromGrde" ,   setEmptyValue(searchObj.tpromGrde) );
             WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/sno" ,         setEmptyValue(searchObj.sno) );
             
             if(searchObj.sno == ""){
             	logger("검색할 학번이 없습니다.");
             	return;
             }
             
             execSubmission(subMissionId, "reqStudentNo", "res/searchStudent","/gaScrgBas/searchStudent.do");
             
             var sNo  = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/sno" );
             var sCnt = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/studentCnt" );
             
             if( sCnt == 1){
             	 
                 getStudentBaseInfoGa(sNo, subMissionId); //학생기본정보 조회
                 isSearch = true;
                 setGridStudPopup();
                 
             }else{
                 onClickStudentPopUpGaObj(searchObj, subMissionId); //학생검색 팝업호출
             }
             
         }  
         
        /*===============================================================
         ** 기능 : 학생검색 팝업 호출
         ** 인수 : 학번 오브젝트, 성명 오브젝트, 서브미션, 기본정보조회 boolean
         ** 결과 : 학번, 성명 오브젝트에 값 할당, 기본정보조회
         **===============================================================*/
        function onClickStudentPopUpGaObj(searchObj, subMissionId){
        	
            var isSearch = false;
            var eOrgGroupCd = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.orgGroupCd) );    
            var eDpmjCd     = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.dpmjCd) );    
            var eMjorCd     = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.mjorCd) );    
            var eDgreCorsCd = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.dgreCorsCd) ); 
            var eStudDvcd   = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.studDvcd) );  
            var eScrgStatCd = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.scrgStatCd) );
            var eDeptCd     = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.deptCd) );    
            var eTpromGrde  = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.tpromGrde) ); 
            var eSno        = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.sno) );
            
            var eSubMissionId = WebSquare.text.BASE64URLEncoder(subMissionId);
            
            
            openPopup("setStudGridPopupGaValue", "/views/usw/ga/hj/GA_HJ_1130.xml"
                    , { width      : 1020
                      , height     : 450
                      , resizable  : false
                      , scrollbars : false }
                    , { pOrgGroupCd   : eOrgGroupCd    
                 	  , pDpmjCd       : eDpmjCd    
                 	  , pMjorCd       : eMjorCd    
                 	  , pStudDvcd     : eStudDvcd
                 	  , pScrgStatCd   : eScrgStatCd
                 	  , pDeptCd       : eDeptCd
                 	  , pTpromGrde    : eTpromGrde 
                 	  , pSno          : eSno
                 	  , pSubMissionId : eSubMissionId}) ;                                        
        }

        function setStudGridPopupGaValue(rtn){
            if (rtn != undefined || rtn != null || rtn != "") {
                getStudentBaseInfoGa(rtn[0], rtn[2]); //학생기본정보 조회
                setGridStudPopup();
                return true;
            }
        }
        
       /*===============================================================
        ** 기능 : 대학원_조직콤보
        ** 인수 : orgClsCd,orgGroupCd,useYn
        ** 결과 :  대학원>>대학원>>대학원
        * NodeSet : resOrgCd/object/gaOrgCdList/object
        * Label   : deptNm
        * Value   : orgCd
        *<resOrgCd>
        *     <object type="object">
        *       <gaOrgCdList type="array">
        *         <object type="object">
        *           <deptNm>대학원</deptNm>
        *           <orgCd>3000001</orgCd>
        *         </object>
        *         <object type="object">
        *           <deptNm>대학원>>대학원</deptNm>
        *           <orgCd>3000002</orgCd>
        *         </object>
        *         <object type="object">
        *           <deptNm>대학원>>국어국문학과</deptNm>
        *           <orgCd>3000003</orgCd>
        *         </object>
        *       </gaOrgCdList>
        *     </object>
        * </resOrgCd>
        **===============================================================*/
       function getGaOrgCd(orgClsCd,orgGroupCd,useYn){
    	   WebSquare.ModelUtil.removeInstanceNode( "resOrgCd" );
    	   
    	   WebSquare.ModelUtil.setInstanceValue( "reqOrgCdParam/orgClsCd"     , orgClsCd );
	       WebSquare.ModelUtil.setInstanceValue( "reqOrgCdParam/orgGroupCd"   , orgGroupCd );
	       WebSquare.ModelUtil.setInstanceValue( "reqOrgCdParam/useYn"        , useYn );
    	   
    	   execSubmission("getCommonDataSubm", "reqOrgCdParam", "resOrgCd","/saCm/listGaOrgCd.do");
       }
       
       /*===============================================================
        ** 기능 : 대학원_조직콤보
        ** 인수 : orgClsCd,orgGroupCd,useYn,lvl
        ** 결과 :  
        * NodeSet : resSingleOrgCd/object/gaSingleOrgCdList/object
        * Label   : deptNm
        * Value   : orgCd
        *<resSingleOrgCd>
        *     <object type="object">
        *       <gaSingleOrgCdList type="array">
        *         <object type="object">
        *           <useYn>Y</useYn>
        *           <orgClsCd>30</orgClsCd>
        *           <deptNm>대학원</deptNm>
        *           <lvl type="number">1</lvl>
        *           <dpmjDvcd>30</dpmjDvcd>
        *           <orgGroupCd>301</orgGroupCd>
        *           <orgCd>301</orgCd>
        *         </object>
        *         <object type="object">
        *           <useYn>Y</useYn>
        *           <orgClsCd>30</orgClsCd>
        *           <deptNm>행정대학원</deptNm>
        *           <lvl type="number">1</lvl>
        *           <dpmjDvcd>30</dpmjDvcd>
        *           <orgGroupCd>302</orgGroupCd>
        *           <orgCd>302</orgCd>
        *         </object>
        *       </gaSingleOrgCdList>
        *     </object>
        * </resSingleOrgCd>
        **===============================================================*/
       function getGaSingleOrgCd(orgClsCd,orgGroupCd,useYn,lvl){
    	   WebSquare.ModelUtil.removeInstanceNode( "resSingleOrgCd" );
    	   
    	   WebSquare.ModelUtil.setInstanceValue( "reqSingleOrgCdParam/orgClsCd"     , orgClsCd );
	       WebSquare.ModelUtil.setInstanceValue( "reqSingleOrgCdParam/orgGroupCd"   , orgGroupCd );
	       WebSquare.ModelUtil.setInstanceValue( "reqSingleOrgCdParam/useYn"        , useYn );
	       WebSquare.ModelUtil.setInstanceValue( "reqSingleOrgCdParam/lvl"          , lvl );
    	   
    	   execSubmission("getCommonDataSubm", "reqSingleOrgCdParam", "resSingleOrgCd","/saCm/listGaSingleOrgCd.do");
       }
       
       function setEmptyValue(val){
           if(val == undefined || val == null || val == "all"){
        	   return "";
           }else
        	   return val;
        	   
       }
       
       
       
       
       /*===============================================================
        ** 기능 : 학생을 검색하여 한 명이면 조회, 그 외는 팝업을 호출한다.
        ** 인수 : 학번 오브젝트, 성명 오브젝트, 서브미션, 기본정보조회 boolean
        ** 결과 : 학번, 성명 오브젝트에 값 할당, 학생검색 팝업 호출, 기본정보조회
        **===============================================================*/
        function searchStudentGa(searchObj, subMissionId){
            var searchSno = searchObj.sno; 
            var isSearch = false;
            
            if(searchSno.length<2){
                showMsg("C_I046");
                return;
            }
            
            if(searchObj.sno == ""){
            	logger("검색할 학번이 없습니다.");
            	return;
            }
            
            
            
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/orgGroupCd",   setEmptyValue(searchObj.orgGroupCd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/dpmjCd" ,      setEmptyValue(searchObj.dpmjCd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/mjorCd" ,      setEmptyValue(searchObj.mjorCd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/dgreCorsCd",   setEmptyValue(searchObj.dgreCorsCd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/studDvcd" ,    setEmptyValue(searchObj.studDvcd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/scrgStatCd" ,  setEmptyValue(searchObj.scrgStatCd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/deptCd" ,      setEmptyValue(searchObj.deptCd) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/tpromGrde" ,   setEmptyValue(searchObj.tpromGrde) );
            WebSquare.ModelUtil.setInstanceValue( "reqStudentNo/sno" ,         setEmptyValue(searchObj.sno) );
            
            
            
            execSubmission(subMissionId, "reqStudentNo", "res/searchStudent","/gaScrgBas/searchStudent.do");
            
            var sNo  = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/sno" );
            var sCnt = WebSquare.ModelUtil.getInstanceValue( "res/searchStudent/object/searchStudent/studentCnt" );
            if( sCnt == 1){
                getStudentBaseInfoGa(sNo, subMissionId); //학생기본정보 조회
                isSearch = true;
                
            }else{
                isSearch = onClickStudentPopUpGa(searchObj, subMissionId); //학생검색 팝업호출
            }
            
            return isSearch;
        }     
        
        /*===============================================================
         ** 기능 : 학생검색 팝업 호출
         ** 인수 : 학번 오브젝트, 성명 오브젝트, 서브미션, 기본정보조회 boolean
         ** 결과 : 학번, 성명 오브젝트에 값 할당, 기본정보조회
         **===============================================================*/
        function onClickStudentPopUpGa(searchObj, subMissionId){
        	
            var isSearch = false;
            var eOrgGroupCd = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.orgGroupCd) );    
            var eDpmjCd     = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.dpmjCd) );    
            var eMjorCd     = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.mjorCd) );    
            var eDgreCorsCd = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.dgreCorsCd) ); 
            var eStudDvcd   = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.studDvcd) );  
            var eScrgStatCd = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.scrgStatCd) );
            var eDeptCd     = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.deptCd) );    
            var eTpromGrde  = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.tpromGrde) ); 
            var eSno        = WebSquare.text.BASE64URLEncoder(setEmptyValue(searchObj.sno) );
            
            var eSubMissionId = WebSquare.text.BASE64URLEncoder(subMissionId);
            
            
            openPopup("setStudPopupGaValue", "/views/usw/ga/hj/GA_HJ_1130.xml"
                    , { width      : 1020
                      , height     : 450
                      , resizable  : false
                      , scrollbars : false }
                    , { pOrgGroupCd   : eOrgGroupCd    
                 	  , pDpmjCd       : eDpmjCd    
                 	  , pMjorCd       : eMjorCd    
                 	  , pStudDvcd     : eStudDvcd
                 	  , pScrgStatCd   : eScrgStatCd
                 	  , pDeptCd       : eDeptCd
                 	  , pTpromGrde    : eTpromGrde 
                 	  , pSno          : eSno
                 	  , pSubMissionId : eSubMissionId}) ;
            
            /*
            if (rArr != undefined && rArr != null) {
               isSearch = true;
               getStudentBaseInfoGa(rArr[0], subMissionId); //학생기본정보 조회
            }
            
            return isSearch;
            */                                           
        }
        
        function setStudPopupGaValue(rtn){
            if (rtn != undefined || rtn != null || rtn != "") {
            	getStudentBaseInfoGa(rtn[0], rtn[2]); //학생기본정보 조회
                selectStudInfo("R");
                
            }
        }
       
       /*===============================================================
        ** 기능 : 기본정보조회
        ** 인수 : 학번 , 서브미션id
        ** 결과 : wfrmae 학생기본정보 조회
        **===============================================================*/
       function getStudentBaseInfoGa(sNo, subMissionId){
    	   
           WebSquare.ModelUtil.setInstanceValue( "wfReq/sno" , sNo );
           WebSquare.ModelUtil.removeInstanceNode( "res/studBasInfo" );
           execSubmission(subMissionId,"wfReq","res/studBasInfo","/gaScrgBas/selectScrgBas.do");
           
           var grde = getValue("res/studBasInfo/object/studentInfo/studGrde");
           var tprom_grde = getValue("res/studBasInfo/object/studentInfo/tpromGrde");
           var facSmrCnt = getValue("res/studBasInfo/object/studentInfo/facSmrCnt");
           
           var tObj = typeof wfStudGrde;
           if(!(tObj == "undefined" || tObj == undefined)){
        	   if(grde < tprom_grde){
                   wfStudGrde.setValue(facSmrCnt + "/" + grde + "->" +tprom_grde);
               }else{
            	   wfStudGrde.setValue(facSmrCnt + "/" + grde);
               }
           }
           
           
           var tObj2 = typeof wfDgreCorsNm;
           if(!(tObj2 == "undefined" || tObj2 == undefined)){
        	      
        	   var tCorsNm = getValue("res/studBasInfo/object/studentInfo/corsNm");
               var tDgreCorsNm = getValue("res/studBasInfo/object/studentInfo/dgreCorsNm");
                
        	   if(tCorsNm != ""){
        		   wfDgreCorsNm.setValue(tDgreCorsNm + "(" + tCorsNm + ")");
               }else{
            	   wfDgreCorsNm.setValue(tDgreCorsNm);
               }
           }
           
           
           var tObj3 = typeof wfScrgStatNm;
           if(!(tObj3 == "undefined" || tObj2 == undefined)){
        	      
               var tScrgStatNm = getValue("res/studBasInfo/object/studentInfo/scrgStatNm");
               var tRschStud = getValue("res/studBasInfo/object/studentInfo/rschStud");
                
        	   if(tRschStud != ""){
        		   wfScrgStatNm.setValue(tScrgStatNm + "(" + tRschStud + ")");
               }else{
            	   wfScrgStatNm.setValue(tScrgStatNm);
               }
           }
           
           
           //setStudImg(getValue("res/studBasInfo/object/studentInfo/photoFileId"));
       }
       
       /*===============================================================
        ** 기능 : 로그인한 사람의 이름을 가져온다.
        ** 인수 : 
        ** 결과 : userNm
        **===============================================================*/
       function getSessionUserNm(){
           return getValue("commonData/object/session/userNm");
       }
       
       /*===============================================================
        ** 기능 : 조회된 data의 갯수를 반환한다.
        ** 인수 : submissionId
        ** 결과 : rowCount
        **===============================================================*/
        function getReqRowCount(subId){
    	   var sub = WebSquare.ModelUtil.getSubmission( subId );
    	   var tagName = "";
           var doc = WebSquare.ModelUtil.findInstanceNode( sub.target );
           var dataArr = WebSquare.xml.getChildren(doc, "object");
           
           for (var i in dataArr) {
               if (dataArr[i]["type"] == "array") {
                  tagName = dataArr[i]["@tagName"];
                  break;
               }
           }
           
           var dataArr = WebSquare.ModelUtil.findInstanceNodes( sub.target + "/object/" + tagName + "/object" );
           
           var rowCount = dataArr.length;
           
           return rowCount;
       }
       
       /*===============================================================
        ** 기능 : 학생검색 팝업 호출
        ** 인수 : 학번 오브젝트, 성명 오브젝트, 서브미션, 기본정보조회 boolean
        ** 결과 : 학번, 성명 오브젝트에 값 할당, 기본정보조회
        **===============================================================*/
       function onGaThesJudgPopup(eno,fname){           
           openPopup(fname
            , "/views/usw/ga/ju/GA_JU_4040.xml"
            , { width      : 1010
            ,   height     : 430
            ,   resizable  : false
            ,   scrollbars : false }
            , {  eno       : eno}) ;                                           
       } 
       
       /*===============================================================
        ** 기능 : 1건일경우 thesJudgInfo 반환, 2건이상일경우 popup호출
        ** 인수 : enoObj,judgNmObj
        ** 결과 : thesJudgInfo
        **===============================================================*/
       function gaThesJudgPopup(eno,fname){
    	   WebSquare.ModelUtil.removeInstanceNode( "reqThesJudg" );
    	   
    	   WebSquare.ModelUtil.setInstanceValue( "reqThesJudg/eno", eno );
    	   
    	   execSubmission("getCommonDataSubm", "reqThesJudg", "resThesJudg","/gaThesJudg/listGaThesJudg.do");
    	   var rowCount = getReqRowCount("getCommonDataSubm");
    	   if( rowCount == 1){
    		   // 1건일경우    		   
    		   return getThesJudgInfo("getCommonDataSubm",fname);;
    	   }else{
    		   // 여러건일경우 popup호출    		   
    		   return onGaThesJudgPopup(eno,fname);
    	   }
           
           return null;
       }
       
       /*===============================================================
        ** 기능 : 논문심사위원 1명의 정보를 반환한다.
        ** 인수 : submissionId
        ** 결과 : objThesJudgInfo
        **===============================================================*/
        function getThesJudgInfo(subId,fname){
            var sub = WebSquare.ModelUtil.getSubmission( subId );
            var tagName = "";
            var doc = WebSquare.ModelUtil.findInstanceNode( sub.target );
            var dataArr = WebSquare.xml.getChildren(doc, "object");
            
            for (var i in dataArr) {
                if (dataArr[i]["type"] == "array") {
                   tagName = dataArr[i]["@tagName"];
                   break;
                }
            }
            
            var path = sub.target + "/object/" + tagName + "/object";
            
            var jsonStr = "";
            
            var doc2 = WebSquare.ModelUtil.findInstanceNode( sub.target + "/object/" + tagName );                   
            var dataArr2 = WebSquare.xml.getChildren(doc2, "object");
                                  
            for(var i in dataArr2){
                var tTagNm = dataArr2[i]["@tagName"];
                var tValue = getValue(path + "/" + tTagNm);
                //alert(i + " : " + tTagNm + " : " + tValue);
                jsonStr += tTagNm + ":'"+ tValue +"',";
            }
            
            var temp = makeJson(jsonStr);
            var returnObj = eval(temp);
            eval(fname)(returnObj);
        }  
       
       /*===============================================================
        ** 기능 : string을 json 형태로 변환
        ** 인수 : jsonStr
        ** 결과 : json
        **===============================================================*/
       function makeJson(jsonStr){
           var tSubstr = jsonStr.substring(0,eval(jsonStr.length-1));
           return "({" + tSubstr + "})";
       }
       
       /*===============================================================
        ** 기능 : string을 json 형태로 변환
        ** 인수 : val
        ** 결과 : value
        **===============================================================*/
       function getGmSearchUserInfo(val){
           return getValue("responseGmSearchUserInfo/" + val);
       }
       
       /*===============================================================
        ** 기능 : 전임교원인지 체크
        ** 인수 : enoObj,nmObj,deptObj,clsfObj
        ** 결과 : boolean
        **===============================================================*/
       function checkClsfCd(enoObj,nmObj,deptObj,clsfObj){
          var clsfCd = getGmSearchUserInfo("clsfCd");
          
          if(eval(clsfCd) < 1111 || eval(clsfCd) > 1114){
              showMsg("C_I079");
              enoObj.setValue("");
              nmObj.setValue("");
              deptObj.setValue("");
              clsfObj.setValue("");
              return false;
          }else{
              return true;
          }
       }
       
       /*===============================================================
        ** 기능 : 업적평가여부에 따른 disable
        ** 인수 : pfevReflYnObj,pfevYearObj,pfevTimeCdObj
        ** 결과 : null
        **===============================================================*/
       function gmChgPfevReflYn(pfevReflYnObj,pfevYearObj,pfevTimeCdObj){
           
           if(pfevReflYnObj.getValue() == 'Y') {
              pfevYearObj.setDisabled( false );
              pfevTimeCdObj.setDisabled( false );
              pfevYearObj.changeClass( "se_input", "se_input_E" );
              pfevTimeCdObj.changeClass( "se_combo","se_combo_E" );
          } else {
              pfevYearObj.setDisabled( true );
              pfevTimeCdObj.setDisabled( true );
              pfevTimeCdObj.setValue('');  
              pfevYearObj.setValue('');  
              pfevYearObj.changeClass( "se_input_E" ,"se_input" );
              pfevTimeCdObj.changeClass( "se_combo_E" , "se_combo" );
          }
       }
       
    /**
     * 교과목검색
     * 조회조건에 따른 교과목 수를 검색 및 반환한다.
     */
    function searchSubjtBas(orgClsCd, subjtCd, subId){
        WebSquare.ModelUtil.removeInstanceNode( "reqSearchSubjt" );
        WebSquare.ModelUtil.removeInstanceNode( "resSearchSubjt" );
        
        setValue("reqSearchSubjt/orgClsCd", orgClsCd ) ;
        setValue("reqSearchSubjt/subjtCd", subjtCd ) ;
        
        var subMissionId = subId;
        execSubmission(subMissionId,"reqSearchSubjt" ,"resSearchSubjt", "/subjtBas/selectSubjtInfo.do"); 
        
        var rSubjtInfo = new Object();        
        rSubjtInfo.orgClsCd = getValue("resSearchSubjt/object/subjtInfo/orgClsCd");
        rSubjtInfo.subjtCd = getValue("resSearchSubjt/object/subjtInfo/subjtCd");
        rSubjtInfo.subjtNm = getValue("resSearchSubjt/object/subjtInfo/subjtNm");
        rSubjtInfo.subjtCnt = getValue("resSearchSubjt/object/subjtInfo/subjtCnt");
        rSubjtInfo.point = getValue("resSearchSubjt/object/subjtInfo/point");
        
        return rSubjtInfo;
        
    }    
    
    /**
     * 교과목팝업
     * openSubjtPopUpAll : 학부,대학원 전체 교과목팝업
     * openSubjtPopUpGa  : 대학원교과목팝업
     * openSubjtPopUpSa  : 학부교과목팝업
     * @param subjtCdObj(교과목코드), subjtNmObj(교과목명),
     *      , evt(이벤트 구분), subId(프로그램의 submission ID)
     *      , callBackFn(콜백함수 없으면 기본콜백함수 실행)
     */
    //교과목팝업전역변수
    var saSubjtSearchSubjtCdID      = "";
    var saSubjtSearchSubjtNmID      = "";
    function openSubjtPopUpAll(subjtCdObj, subjtNmObj, evt, subId, callBackFn ){
        openSubjtPopUp(subjtCdObj, subjtNmObj, evt, subId, "all", callBackFn );
    }
    function openSubjtPopUpGa(subjtCdObj, subjtNmObj, evt, subId, callBackFn ){
        openSubjtPopUp(subjtCdObj, subjtNmObj, evt, subId, "ga", callBackFn );
    }
    function openSubjtPopUpGa2(subjtCdObj, subjtNmObj, evt, subId, callBackFn ){
        openSubjtPopUp(subjtCdObj, subjtNmObj, evt, subId, "ga2", callBackFn );
    }
    function openSubjtPopUpSa(subjtCdObj, subjtNmObj, evt, subId, callBackFn ){
        openSubjtPopUp(subjtCdObj, subjtNmObj, evt, subId, "sa", callBackFn );
    }
    function openSubjtPopUpSa2(subjtCdObj, subjtNmObj, evt, subId, callBackFn ){
        openSubjtPopUp(subjtCdObj, subjtNmObj, evt, subId, "sa2", callBackFn );
    }
    
    function openSubjtPopUp(subjtCdObj, subjtNmObj, evt, subId, gb, callBackFn ){
        //데이터 설정
        saSubjtSearchSubjtCdID = subjtCdObj.getID();
        saSubjtSearchSubjtNmID = subjtNmObj.getID();
        var callBackFn = callBackFn || "subjtPopUpCallBack";
        var subjtCd = subjtCdObj.getValue();
        
        var orgClsCd    = "";	//학부/대학구분
        var url         = "";	//팝업url
        var tWidth       = "";	//팝업가로폭
        if (gb == "sa"){
            orgClsCd = '20';
            url = "/views/usw/sa/su/SA_SU_2050.xml";
            tWidth = "800";
            
        }else if(gb == "sa2"){
            orgClsCd = '20';
            url = "/views/usw/sa/su/SA_SU_2051.xml";
            tWidth = "960";
            
        }else if(gb == "ga"){
            orgClsCd = '30';
            url = "/views/usw/sa/su/SA_SU_2050.xml";
            tWidth = "800";
            
        }else if(gb == "ga2"){
            orgClsCd = '30';
            url = "/views/usw/sa/su/SA_SU_2051.xml";
            tWidth = "800";
            
        }else if(gb == "all"){
            orgClsCd = '';
            url = "/views/usw/sa/su/SA_SU_2060.xml";
            tWidth = "800";
        }
        
        //초기화
        subjtCdObj.setValue("");        //교과목코드
        subjtNmObj.setValue("");        //교과목명
        
        //교과목코드 존재시 처리(1건이 아닐경우, Click이벤트일경우 팝업호출)
        if ( evt == "edit" ){
            //교과목코드가 없는경우 종료
            if (subjtCd == ""){
                return;
            }
            var rSubjtInfo = searchSubjtBas(orgClsCd, subjtCd, subId);
            if (rSubjtInfo.subjtCnt == "1"){
                eval(callBackFn)(rSubjtInfo);
                return ;
            }
        }
        
        //팝업호출
        var eOrgClsCd = WebSquare.text.BASE64URLEncoder(orgClsCd);
        var eSubjtCd = WebSquare.text.BASE64URLEncoder(subjtCd);
        openPopup(callBackFn
                , url
                , { width      : tWidth,
                    height     : 450
                  }
                , {pOrgClsCd:eOrgClsCd,pSubjtCd:eSubjtCd}) ;
    }
    
    /**
     * 교과목팝업 콜백함수
     * @param obj : 교과목정보
     */
    function subjtPopUpCallBack(obj){
        
        if(obj == undefined) {
            return;
        }
        eval(saSubjtSearchSubjtCdID).setValue( obj.subjtCd  );
        eval(saSubjtSearchSubjtNmID).setValue( obj.subjtNm  );
    }
    
    /**
     * 교과목그리드팝업
     * openSubjtGridPopUpAll : 학부,대학원 전체 교과목팝업
     * openSubjtGridPopUpGa  : 대학원교과목팝업
     * openSubjtGridPopUpSa  : 학부교과목팝업
     * @param grid(그리드 object), row(이벤트실행된 row), col(이벤트 실행된col)
     *      , evt(이벤트 구분), subId(프로그램의 submission ID)
     *      , callBackFn(콜백함수 없으면 기본콜백함수 실행)
     */
    //그리드교과목팝업 전역변수
    var saSubjtSearchGridObjID    = "";
    var saSubjtSearchGridRow      = "";
    var saSubjtSearchGridCol      = "";
    
    function openSubjtGridPopUpAll(grid, row, col, evt, subId, callBackFn ){
        openSubjtGridPopUp(grid, row, col, evt, subId, "all", callBackFn );
    }
    function openSubjtGridPopUpGa(grid, row, col ,evt, subId, callBackFn ){
        openSubjtGridPopUp(grid, row, col, evt, subId, "ga", callBackFn );
    }
    function openSubjtGridPopUpSa(grid, row, col ,evt, subId, callBackFn ){
        openSubjtGridPopUp(grid, row, col, evt, subId, "sa", callBackFn );
    }
    function openSubjtGridPopUpSa2(grid, row, col ,evt, subId, callBackFn ){
        openSubjtGridPopUp(grid, row, col, evt, subId, "sa2", callBackFn );
    }
    function openSubjtGridPopUp(grid, row, col, evt, subId, gb, callBackFn ){
        
        //데이터설정
        saSubjtSearchGridObjID = grid.getID();
        saSubjtSearchGridRow = row;
        if (evt == "click"){    //호출이벤트에 따라 subjtCd 인덱스 설정
            saSubjtSearchGridCol = col-1;
        }else if(evt == "edit"){
            saSubjtSearchGridCol = col;
        }
        
        var subjtCd = grid.getCellData(saSubjtSearchGridRow, saSubjtSearchGridCol); //교과목코드
        var orgClsCd    = '';
        var url         = '';
        var tWidth      = '';
        
        if (gb == "sa"){
            orgClsCd = '20';
            url = "/views/usw/sa/su/SA_SU_2050.xml";
            tWidth = "800";
            
        }else if(gb == "sa2"){
            orgClsCd = '20';
            url = "/views/usw/sa/su/SA_SU_2051.xml";
            tWidth = "960";
            
        }else if(gb == "ga"){
            orgClsCd = '30';
            url = "/views/usw/sa/su/SA_SU_2050.xml";
            tWidth = "800";
            
        }else if(gb == "all"){
            orgClsCd = '';
            url = "/views/usw/sa/su/SA_SU_2060.xml";
            tWidth = "800";
        }
        
        var callBackFn = callBackFn || "subjtGridPopUpCallBack";
        
        //초기화
        grid.setCellData( saSubjtSearchGridRow , saSubjtSearchGridCol , "" );        //교과목코드
        grid.setCellData( saSubjtSearchGridRow , saSubjtSearchGridCol+2 , "" );        //교과목명
        
        //교과목코드 존재시 처리(1건이 아닐경우, Click이벤트일경우 팝업호출)
        if ( evt == "edit" ){
            if (subjtCd == ""){     //교과목코드가 없는경우 종료
                return;
            }
            var rSubjtInfo = searchSubjtBas(orgClsCd, subjtCd, subId);
            if (rSubjtInfo.subjtCnt == "1"){
                rSubjtInfo.gridId = saSubjtSearchGridObjID;
                rSubjtInfo.row = saSubjtSearchGridRow;
                rSubjtInfo.col = saSubjtSearchGridCol;
                eval(callBackFn)(rSubjtInfo);
                return ;
            }
        }
        
        //팝업호출
        var eOrgClsCd = WebSquare.text.BASE64URLEncoder(orgClsCd);
        var eSubjtCd = WebSquare.text.BASE64URLEncoder(subjtCd);
        
        openPopup(callBackFn
                , url
                , { width      : tWidth, 
                    height     : 450
                  }
                , {pOrgClsCd:eOrgClsCd, pSubjtCd:eSubjtCd, pGridObjId:saSubjtSearchGridObjID ,pRow:saSubjtSearchGridRow, pCol:saSubjtSearchGridCol }) ;
        
        
    }
    
    /**
     * 그리드교과목팝업 콜백함수
     * @param obj : 교과목정보
     */
    function subjtGridPopUpCallBack(obj){
        
        if(obj == undefined) {
            return;
        }
        eval(saSubjtSearchGridObjID).setCellData( saSubjtSearchGridRow , saSubjtSearchGridCol , obj.subjtCd );
        eval(saSubjtSearchGridObjID).setCellData( saSubjtSearchGridRow , saSubjtSearchGridCol+2 , obj.subjtNm );
    }
    

    /**
     * 개설강좌검색
     * 조회조건에 따른 개설강좌 수를 검색 및 반환한다.
     */
    function searchEstbLect(year, smrCd, progOrgClsCd, subjtCd, subMissionId){
        WebSquare.ModelUtil.removeInstanceNode( "reqSearchEstbLect" );
        WebSquare.ModelUtil.removeInstanceNode( "resSearchEstbLect" );
        setValue("reqSearchEstbLect/subjtEstbYear", year ) ;
        setValue("reqSearchEstbLect/subjtEstbSmrCd", smrCd ) ;
        setValue("reqSearchEstbLect/progOrgClsCd", progOrgClsCd ) ;
        setValue("reqSearchEstbLect/subjtCd", subjtCd ) ;
        //setValue("reqSearchEstbLect/diclNo", diclNo ) ;
        
        execSubmission(subMissionId,"reqSearchEstbLect" ,"resSearchEstbLect", "/estbLectDtai/selectEstbLectInfo.do"); 
        
        var rInfo = new Object();
        rInfo.subjtEstbYear = getValue("resSearchEstbLect/object/estbLectDtai/subjtEstbYear");
        rInfo.subjtEstbSmrCd = getValue("resSearchEstbLect/object/estbLectDtai/subjtEstbSmrCd");
        rInfo.orgClsCd = getValue("resSearchEstbLect/object/estbLectDtai/orgClsCd");
        rInfo.subjtCd = getValue("resSearchEstbLect/object/estbLectDtai/subjtCd");
        rInfo.diclNo = getValue("resSearchEstbLect/object/estbLectDtai/diclNo");
        rInfo.subjtNm = getValue("resSearchEstbLect/object/estbLectDtai/subjtNm");
        rInfo.estbLectCnt = getValue("resSearchEstbLect/object/estbLectDtai/estbLectCnt");
        return rInfo;
        
    }
    
    /**
     * 개설강좌팝업
     * openEstbLectPopUpGa : 대학원
     * openEstbLectPopUpSa : 학부
     * openEstbLectPopUpGa2 : 대학원(년도학기 변경가능)
     * openEstbLectPopUpSa2 : 학부(년도학기 변경가능)
     * @param year 년도, smrCd 학기, schSubjtCd1 교과목번호, evt 이벤트("click", "edit")
     *      , subId 서브미션ID, callBackFn 콜백함수
     */
    //교과목팝업전역변수
    var saEstbLectSearchSubjtCdID   = "";
    var saEstbLectSearchDiclNoID    = "";
    var saEstbLectSearchSubjtNmID   = "";
    
    function openEstbLectPopUpGa(year, smrCd, subjtCdObj, diclNoObj, subjtNmObj, evt, subId, callBackFn){
        openEstbLectPopUp(year, smrCd, subjtCdObj, diclNoObj, subjtNmObj, evt, subId, "ga", false ,callBackFn);
    }
    function openEstbLectPopUpGa2(year, smrCd, subjtCdObj, diclNoObj, subjtNmObj, evt, subId, callBackFn){
        openEstbLectPopUp(year, smrCd, subjtCdObj, diclNoObj, subjtNmObj, evt, subId, "ga", true ,callBackFn);
    }
    function openEstbLectPopUpSa(year, smrCd, subjtCdObj, diclNoObj, subjtNmObj, evt, subId, callBackFn){
        openEstbLectPopUp(year, smrCd, subjtCdObj, diclNoObj, subjtNmObj, evt, subId, "sa", false, callBackFn);
    }
    function openEstbLectPopUpSa2(year, smrCd, subjtCdObj, diclNoObj, subjtNmObj, evt, subId, callBackFn){
        openEstbLectPopUp(year, smrCd, subjtCdObj, diclNoObj, subjtNmObj, evt, subId, "sa", true, callBackFn);
    }
    function openEstbLectPopUp(year, smrCd, subjtCdObj, diclNoObj, subjtNmObj, evt, subId, gb, change,callBackFn){
        
        //데이터 설정
        saEstbLectSearchSubjtCdID   = subjtCdObj.getID();
        saEstbLectSearchDiclNoID    = diclNoObj.getID();
        saEstbLectSearchSubjtNmID   = subjtNmObj.getID();
        var callBackFn = callBackFn || "estbLectPopUpCallBack";
        var subjtCd = subjtCdObj.getValue();
        var diclNo  = diclNoObj.getValue();
        
        //var orgClsCd    = "";
        var progOrgClsCd    = "";
        var url         = "";
        if (gb == "sa"){
            progOrgClsCd = '20';
        }else if(gb == "ga"){
            progOrgClsCd = '30';
        }
        
        //초기화
        subjtCdObj.setValue("");
        diclNoObj.setValue("");
        subjtNmObj.setValue("");
        
        //교과목코드 존재시 처리(1건이 아닐경우, Click이벤트일경우 팝업호출)
        if ( evt == "edit" ){
            var rInfo = searchEstbLect(year, smrCd, progOrgClsCd, subjtCd, subId);
            if (rInfo.estbLectCnt == "1"){
                eval(callBackFn)(rInfo);
                return;
            }
        }
        
        var eProgOrgClsCd = WebSquare.text.BASE64URLEncoder(progOrgClsCd);
        var eSubjtEstbYear = WebSquare.text.BASE64URLEncoder(year);
        var eSubjtEstbSmrCd = WebSquare.text.BASE64URLEncoder(smrCd);
        //var eOrgClsCd = WebSquare.text.BASE64URLEncoder(orgClsCd);
        var eSubjtCd = WebSquare.text.BASE64URLEncoder(subjtCd);
        var eDiclNo = WebSquare.text.BASE64URLEncoder(diclNo);
        //var eChange = WebSquare.text.BASE64URLEncoder(change);
        
        var rObj = openPopup(callBackFn
                , "/views/usw/sa/su/SA_SU_4080.xml"
                , { width      : 1024
                   ,height     : 500 }
                , { pProgOrgClsCd:eProgOrgClsCd,pSubjtEstbYear:eSubjtEstbYear,pSubjtEstbSmrCd:eSubjtEstbSmrCd
                   ,pSubjtCd:eSubjtCd,pDiclNo:eDiclNo,pChange:change}) ;
    }
    
    function openEstbLectGridPopUp(year, smrCd, subjtCd, diclNo, evt, subId, gb, change,callBackFn){
        

        //var callBackFn = callBackFn || "estbLectGridPopUpCallBack";
        
        //var orgClsCd    = "";
        var progOrgClsCd    = "";
        var url         = "";
        if (gb == "sa"){
            progOrgClsCd = '20';
        }else if(gb == "ga"){
            progOrgClsCd = '30';
        }
        
        //교과목코드 존재시 처리(1건이 아닐경우, Click이벤트일경우 팝업호출)
        if ( evt == "edit" ){
            var rInfo = searchEstbLect(year, smrCd, progOrgClsCd, subjtCd, subId);
            if (rInfo.estbLectCnt == "1"){
                eval(callBackFn)(rInfo);
                return;
            }
        }
        
        var eProgOrgClsCd = WebSquare.text.BASE64URLEncoder(progOrgClsCd);
        var eSubjtEstbYear = WebSquare.text.BASE64URLEncoder(year);
        var eSubjtEstbSmrCd = WebSquare.text.BASE64URLEncoder(smrCd);
        //var eOrgClsCd = WebSquare.text.BASE64URLEncoder(orgClsCd);
        var eSubjtCd = WebSquare.text.BASE64URLEncoder(subjtCd);
        var eDiclNo = WebSquare.text.BASE64URLEncoder(diclNo);
        //var eChange = WebSquare.text.BASE64URLEncoder(change);
        
        var rObj = openPopup(callBackFn
                , "/views/usw/sa/su/SA_SU_4080.xml"
                , { width      : 1024
                   ,height     : 500 }
                , { pProgOrgClsCd:eProgOrgClsCd,pSubjtEstbYear:eSubjtEstbYear,pSubjtEstbSmrCd:eSubjtEstbSmrCd
                   ,pSubjtCd:eSubjtCd,pDiclNo:eDiclNo,pChange:change}) ;
    }

    /**
     * 개설강좌팝업 콜백함수
     * @param obj : 개설강좌정보
     */
    function estbLectPopUpCallBack(obj){
        
        if(obj == undefined) {
            return;
        }
        eval(saEstbLectSearchSubjtCdID).setValue( obj.subjtCd );
        eval(saEstbLectSearchDiclNoID).setValue( obj.diclNo );
        eval(saEstbLectSearchSubjtNmID).setValue( obj.subjtNm );
    }
    
    /**
     * 강의실검색
     * 조회조건에 따른 강의실 수를 검색 및 반환한다.}
     */
    function searchLtrm(ltrmCd, subMissionId){
        WebSquare.ModelUtil.removeInstanceNode( "reqSearchLtrm" );
        WebSquare.ModelUtil.removeInstanceNode( "resSearchLtrm" );
        setValue("reqSearchLtrm/ltrmCd", ltrmCd ) ;
        
        execSubmission(subMissionId,"reqSearchLtrm" ,"resSearchLtrm", "/ltrm/selectLtrmInfo.do");    
            
        var rInfo = new Object();
        rInfo.ltrmCd = getValue("resSearchLtrm/object/ltrm/ltrmCd");
        rInfo.ltrmNm = getValue("resSearchLtrm/object/ltrm/ltrmNm");
        rInfo.fullLtrmNm = getValue("resSearchLtrm/object/ltrm/fullLtrmNm");
        rInfo.ltrmCnt = getValue("resSearchLtrm/object/ltrm/ltrmCnt");
        return rInfo;
        
    }
    
    /**
     * 강의실검색
     * 강의실코드가 단건일경우 조회
     */
    function searchLtrmSu(ltrmCd, subMissionId){
        WebSquare.ModelUtil.removeInstanceNode( "reqSearchLtrm2" );
        WebSquare.ModelUtil.removeInstanceNode( "reqSearchLtrm2" );
        setValue("reqSearchLtrm2/ltrmCd", ltrmCd ) ;
        
        execSubmission(subMissionId,"reqSearchLtrm2" ,"resSearchLtrm2", "/ltrm/selectLtrmInfo.do");    
        
        var rInfo = new Object();
        rInfo.ltrmCd = getValue("resSearchLtrm2/object/ltrm/ltrmCd");
        rInfo.ltrmNm = getValue("resSearchLtrm2/object/ltrm/ltrmNm");
        rInfo.fullLtrmNm = getValue("resSearchLtrm2/object/ltrm/fullLtrmNm");
        rInfo.ltrmCnt = getValue("resSearchLtrm2/object/ltrm/ltrmCnt");
        return rInfo;
        
    }
    
    /**
     * 강의실팝업
     * @param info
     * @param check
     * @param subId
     * @returns
     */
    //강의실팝업전역변수
    var saLtrmSearchLtrmCdID      = "";
    var saLtrmSearchLtrmNmID      = "";
    
    /**
     * 강의실팝업
     * @param ltrmCdObj 강의실코드, ltrmNmObj 강의실명, evt 이벤트("edit","Click")
     *        subId 서브미션ID, callBackFn 콜백함수
     */
    function openLtrmPopUp(ltrmCdObj, ltrmNmObj, evt , subId, callBackFn ){
        //데이터설정
        saLtrmSearchLtrmCdID = ltrmCdObj.getID();
        saLtrmSearchLtrmNmID = ltrmNmObj.getID();
        var ltrmCd = ltrmCdObj.getValue();
        var ltrmNm = ltrmNmObj.getValue();
        var callBackFn = callBackFn || "ltrmPopUpCallBack";
        var buldCd = arguments[5];
        //초기화
        ltrmCdObj.setValue("");        //강의실코드
        ltrmNmObj.setValue("");        //강의실명
        
        var pLtrm = ltrmCd;
        var eParam2;
        
        if(buldCd != undefined) {
        	if(buldCd != "") {
        		eParam2 = WebSquare.text.BASE64URLEncoder(buldCd);
			}else{
				eParam2 = WebSquare.text.BASE64URLEncoder("");
			}
		}else{
			eParam2 = WebSquare.text.BASE64URLEncoder("");
		}
        
        
        //강의실 존재시 처리(1건이 아닐경우, Click이벤트일경우 팝업호출)
        if ( evt == "edit" ){
            var rInfo = searchLtrm(pLtrm, subId);
            if (rInfo.ltrmCnt == "1"){
                eval(callBackFn)(rInfo);
                return;
            }
        }
        
        //팝업호출
        var eParam = WebSquare.text.BASE64URLEncoder(pLtrm);
        //var eParam2 = WebSquare.text.BASE64URLEncoder(buldCd);
        openPopup(callBackFn
                 , "/views/usw/sa/su/SA_SU_4090.xml"
                 , { width      : 980
                     , height     : 430 }
                   , {  pLtrmNm:eParam 
                	  , pBuldCd:eParam2}) ;
    }
    
    /**
     * 강의실팝업 콜백함수
     * @param obj : 강의실정보
     */
    function ltrmPopUpCallBack(obj){
        
        if(obj == undefined) {
            return;
        }
        eval(saLtrmSearchLtrmCdID).setValue( obj.ltrmCd  );
        eval(saLtrmSearchLtrmNmID).setValue( obj.ltrmNm  );
    }
    
    /**
     * 강의실그리드팝업
     * openSubjtGridPopUpAll : 학부,대학원 전체 교과목팝업
     * openSubjtGridPopUpGa  : 대학원교과목팝업
     * openSubjtGridPopUpSa  : 학부교과목팝업
     * @param grid(그리드 object), row(이벤트실행된 row), col(이벤트 실행된col)
     *      , evt(이벤트 구분), subId(프로그램의 submission ID)
     *      , callBackFn(콜백함수 없으면 기본콜백함수 실행)
     */
    //그리드교과목팝업 전역변수
    var saLtrmSearchGridObjID    = "";
    var saLtrmSearchGridRow      = "";
    var saLtrmSearchGridCol      = "";
    function openLtrmGridPopUp(grid, row, col, evt, subId, callBackFn ){
        
        //데이터설정
        saLtrmSearchGridObjID = grid.getID();
        saLtrmSearchGridRow = row;
        if (evt == "click"){    //호출이벤트에 따라 subjtCd 인덱스 설정
            saLtrmSearchGridCol = col-1;
        }else if(evt == "edit"){
            saLtrmSearchGridCol = col;
        }
        
        var ltrmCd = grid.getCellData(saLtrmSearchGridRow, saLtrmSearchGridCol); //교과목코드
        var callBackFn = callBackFn || "ltrmGridPopUpCallBack";
        
        //초기화
        grid.setCellData( saLtrmSearchGridRow , saLtrmSearchGridCol , "" );        //교과목코드
        grid.setCellData( saLtrmSearchGridRow , saLtrmSearchGridCol+2 , "" );        //교과목명
        
        //교과목코드 존재시 처리(1건이 아닐경우, Click이벤트일경우 팝업호출)
        if ( evt == "edit" ){
            if (ltrmCd == ""){     //교과목코드가 없는경우 종료
                return;
            }
            var rInfo = searchLtrm(ltrmCd, subId);
            if (rInfo.ltrmCnt == "1"){
                eval(callBackFn)(rInfo);
                return;
            }
        }
        //
        //팝업호출
        var eLtrmCd = WebSquare.text.BASE64URLEncoder(ltrmCd);
        openPopup(callBackFn
                 , "/views/usw/sa/su/SA_SU_4090.xml"
                 , { width      : 980
                     , height     : 430 }
                   , {  pLtrmNm:eLtrmCd }) ;
    }
    
    /**
     * 그리드교과목팝업 콜백함수
     * @param obj : 강의실정보
     */
    function ltrmGridPopUpCallBack(obj){
        
        if(obj == undefined) {
            return;
        }
        eval(saLtrmSearchGridObjID).setCellData( saLtrmSearchGridRow , saLtrmSearchGridCol     , obj.ltrmCd );
        eval(saLtrmSearchGridObjID).setCellData( saLtrmSearchGridRow , saLtrmSearchGridCol+2   , obj.ltrmNm );
    }
    
    /**
     * grid의 특정 컬럼 필터링
     * @param obj : gridObj, 컬럼명or컬럼인덱스,필터링값,exactMatch (true : 전체일치, false: 부분일치)
     */
    function setGridFilter(gridObj,colIdx,textVal,exactMatch, searchObj){
        var rowIndex = gridObj.getMatchedIndex(colIdx, textVal,  exactMatch || false, 0, gridObj.getRowCount());
        if(rowIndex.length < 1){
            showMsg("C_I041","찾는 값");
            return;
        }
        rowIndex.sort(sortSet);
        
        var tFocusedRowIndex = gridObj.getFocusedRowIndex();
        var focusRowIndex = rowIndex[0];
        for(var i = 0 ; i < rowIndex.length; i++ ){
            //alert("rowindex : " + rowIndex[i]);
            if (tFocusedRowIndex == rowIndex[i]){
                focusRowIndex =  parseInt(i+1) >= rowIndex.length ? rowIndex[0] : rowIndex[parseInt(i+1)]
                break;
            };
        }
        
        
        gridObj.setFocusedCell(focusRowIndex, colIdx, false);
        
        if(!(searchObj == 'undefined' || searchObj == null)) {
        	
        }
        
        setTimeout( function(){searchObj.focus()}, 500);
        
        
	        
     }
    
     function sortSet(a,b){
    
        return parseInt(a-b);
    
     }

    
     /**
      * textArea에 최대 입력 가능 byte 제한 및 남은 byte수 를 보여준다.
      * @param textAreaObj(textAra Obj) 
      * @param maxByte(최대 입력 가능 byte)
      * @param outObj(0/80byte 로 보여줄 obj)
      * @param outVal(0/80byte 앞에 보여줄 textValue)
      */
     function checkMaxByte(textAreaObj,maxByte,outObj,outVal){
         
         var oneChar;
         var count = 0;
         var textVal = textAreaObj.getValue();
         var tempStr = "";
         var outText = outVal || "";
         
         for(var k = 0; k < textVal.length; k++){
              oneChar = textVal.charAt(k);
              
              if(escape(oneChar).length >4){//한글일경우 3byte
                  count += 3;
              }else if(oneChar != "\r"){
                  count++;
              }
              
              if(count > maxByte){
                 if(escape(oneChar).length >4){//한글일경우 3byte
                     count -= 3;
                 }else if(oneChar != "\r"){
                     count--;
                 }
                 
                 
                 showMsg("C_I134",maxByte);                 
                 outText += "("+count+"/"+maxByte+")byte";
                 outObj.setValue(outText);
                 textAreaObj.setValue(tempStr);
                 return;
              }else{
                 tempStr = tempStr + new String(oneChar);
              }
         }
         outText += "("+count+"/"+maxByte+")byte";
         outObj.setValue(outText);
     }

    /**
     * 기능  : 코드 결과를 노드에 복사
     * 인수  :
     * 결과  :
     */
    function copyCltTerrCdNode(codeId, descNode) {
    	var nodes = WebSquare.ModelUtil.findInstanceNodes("responseSelectBoxCode/object/selectboxCdSpcList/object/list/object");
        
        for(var i=0; i<=nodes.length; i++) {
            
        	//var nodes = WebSquare.ModelUtil.findInstanceNodes("responseSelectBoxCode/object/selectboxCdSpcList/object/list/object");
            tmpXml = nodes[i];
            var tCmcdValNm = WebSquare.xml.getValue( tmpXml , "cmcdValNm" );
            var tCmcdValAlis = WebSquare.xml.getValue( tmpXml , "cmcdValAlis" );
            
            WebSquare.xml.setValue( tmpXml, "transCmcdValNm", tCmcdValAlis+"("+tCmcdValNm+")");
            WebSquare.ModelUtil.setInstanceNode( tmpXml, descNode+"/list", null, "append" );
            //
        	//setValue(descNode+"/object[" + i + "]/cmcdVal",    );
            //eval(selectId).addItem(getValue("responseOrgSingleSelectBox/object/orgCdBasList/object[" + i + "]/orgCd"), getValue("responseOrgSingleSelectBox/object/orgCdBasList/object[" + i + "]/deptNm"));
        }
        //eval(selectId).setSelectedIndex(0);
        
        
    }
    
    /**
     * 연계콤보설정(상위콤보에따라 콤보박스 설정)
     * @param selectId 
     * @param codeId
     * @param upCmcdVal
     */
    function setDetlCombo(selectId,upSelectId,codeId,upCmcdVal,label,value){
        //xml에서 공통코드 정보를 조회 해서 배열에 넣는다.
        var doc = WebSquare.ModelUtil.findInstanceNode( "responseSelectBoxCode/object/selectboxCdSpcList/object[@id='" + codeId + "']/list" ); 
        var nodes = WebSquare.xml.findNodes( doc, "object" );
        
        //세부콤보 초기화
        selectId.removeAll( true );
        
        //기본값설정
        var upCmcdValId = upCmcdVal || "upCmcdVal";
        var valueId     = value || "cmcdVal";
        var lableId     = label || "cmcdValNm";
        
        //콤보설정
        for(var i = 0; i < nodes.length; i++) {
            var tUpCmcdVal   = WebSquare.xml.getValue( nodes[i] , upCmcdValId);
            var tCmcdVal     = WebSquare.xml.getValue( nodes[i] , valueId);
            var tCmcdValNm   = WebSquare.xml.getValue( nodes[i] , lableId);
            if (upSelectId.getValue() == tUpCmcdVal){
                selectId.addItem( tCmcdVal , tCmcdValNm  );
            }
        }
    }
    
    /**
     *콤보박스설정
     * @returns 
     */
    function setSelectBoxSu() {
        
        var object   = eval(arguments[0]);  //콤보object
        
        //콤보구분
        var comboGb   = arguments[1];          
        
        //학년, 학기 콤보
        if ( comboGb == "grde"){
            object.removeAll( true );
            
            var str = arguments[2];
            var maxGrde = arguments[3];
            for(var i = 1 ; i <= maxGrde ; i++){
                var tCmcdValNm = i+ str;
                var tCmcdVal = i ;
                object.addItem( tCmcdVal , tCmcdValNm  );
            }
            object.setSelectedIndex( 0 );
            
        }
    }
    
    /**
     * 유효성 체크 후 컴포넌트에 테두리 설정
     */
    function setErrorBorder(obj) {
        var compType = obj.getPluginName();
        if(compType == "input"      || compType == "selectbox"  || compType == "inputCalendar"  ||
                compType == "spinner"    || compType == "radio"      || compType == "checkbox"       ||
                compType == "textarea"   || compType == "autoComplete" ) {
                obj.setStyle( "border-color" , "#FF0000" );
        }
        
    }
    
    
    function openTotalInfoPopup(pSno){
        var tSno = WebSquare.text.BASE64URLEncoder(pSno);
        
        openPopup("dummyFuntion", "/views/usw/sa/hj/SA_HJ_1030.xml"
                                , { width      : 1200
                                , height     : 500
                                , resizable  : false
                                , scrollbars : false }
                              , { vSno              : tSno}) ;
    }
    
    
    function openTotalInfoPopupGa(pSno){
        var tSno = WebSquare.text.BASE64URLEncoder(pSno);
        
        openPopup("dummyFuntion", "/views/usw/ga/hj/GA_HJ_1030.xml"
                                , { width      : 1200
                                , height     : 500
                                , resizable  : false
                                , scrollbars : false }
                              , { vSno              : tSno}) ;
    }
    
    function dummyFuntion(){
    }
    
    /**
     * 수업에서 event와 상관없이 교직원팝업을 통해서 인사정보를 조회하기 위해서 사용
     */
    function cmUserSearchSu(textObj, nameObj) {
        gmSearchTypeFlag = "form";
        gmTextObjID = textObj.getID();
        gmNameObjID = nameObj.getID();
        
        nameObj.setValue("");
        var value = textObj.getValue();
        textObj.setValue("");
        WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
        getCmUserInfo("", value, arguments[2], arguments[3], arguments[4]);
    }
    
    /**
     * 수업에서 event와 상관없이 교직원팝업을 통해서 인사정보를 조회하기 위해서 사용
     */
    function cmUserSearchGridSu(evet ,grid , row , col, initCols) {
     	gmSearchTypeFlag = "grid";
     	gmSearchGridRow = row;
     	gmSearchGridCol = col;
     	gmSearchGridObjID = grid.getID();

     	grid.setCellData( row , col+2 , "" );
     	var value = grid.getCellData(row, col);
     	grid.setCellData( row , col , "" );
     	
     	WebSquare.ModelUtil.removeChildNodes( "responseGmSearchUserInfo" );
     	
     	if(initCols != undefined) {
     		for(var index in initCols) {
     			if(initCols[index] != "") {
     				grid.setCellData( row , initCols[index] , "" );	
     			}
     		}
     	}

     	if(evet != "click"){
     		if(value.length < 1) {
     			return;
     		} else if(value.length < 2) {
     			showMsg("C_I054", "사번/성명을 2자 이상");
     			return;
     		}
     	}
     	
     	getCmUserInfo(evet, value, arguments[5], arguments[6], arguments[7]);
     }
    
    
    /**
     * 그리드색 컬러 설정.
     * 특정데이터 있을경우 색상표시
     * null일경우 데이터 없는경우 체크
     * notNull일 경우 데이터가 있는경우 체크
     */
    function gridRowColorSu(object,arr){
        var arrLength = arr.length;
        if (arrLength < 1){
            return;
        }
        
        for (var i = 0 ; i < object.getRowCount() ; i++ ){
            for (var j = 0 ; j < arrLength-1 ; j+=2 ){
                var colNm       = arr[j];                   //대상컬럼ID
                var colData     = arr[j+1];                 //비교대상정보
                var cellData  = object.getCellData(i,colNm);//해당셀데이터
                
                //특정데이터 있을경우 색상표시
                if (colData == cellData){
                    object.setRowBackgroundColor( i , "lightcoral" );
                }
                //null일경우 데이터 없는경우 체크
                if (colData == "notNull" && cellData != ""){
                    object.setRowBackgroundColor( i , "lightcoral" );
                }
                //notNull일 경우 데이터가 있는경우 체크
                if (colData == "null" && cellData == ""){
                    object.setRowBackgroundColor( i , "lightcoral" );
                }
            }
            
        }
    }
    
    /*===============================================================
     ** 기능 : 신청_년도학기콤보
     ** 인수 : 
     ** 결과 :  
     **===============================================================*/
    function getFlanExamApplYearSmr(){
     WebSquare.ModelUtil.removeInstanceNode( "reqApplYearSmrParam" );
     
     WebSquare.ModelUtil.setInstanceValue( "reqApplYearSmrParam/orgClsCd"     , "" );
     
     execSubmission("getCommonDataSubm", "reqApplYearSmrParam", "resApplYearSmr","/saCm/listGaApplYearSmr.do");
    }
    
    
    /*===============================================================
     ** 기능 : 졸업_년도학기콤보
     ** 인수 : 
     ** 결과 :  
     **===============================================================*/
    function getGrduYearSmr(){
	     WebSquare.ModelUtil.removeInstanceNode( "reqGrduYearSmrParam" );
	     
	     WebSquare.ModelUtil.setInstanceValue( "reqGrduYearSmrParam/orgClsCd"     , "" );
	     
	     execSubmission("getCommonDataSubm", "reqGrduYearSmrParam", "resGrduYearSmr","/saCm/listGrduYearSmr.do");
    }
    
    /**
     * 장학코드 팝업 함수
     * @param obj : 장학코드 검색 조건
     */       
    function openSchoCdPopup(submissionId, obj){
 	   
        setValue("reqSchoCd/orgGroupCd", obj.orgGroupCd);
        setValue("reqSchoCd/schoCd", obj.schoCd);
        
        execSubmission(submissionId, "reqSchoCd", "resSchoCdPopup", "/eflnBas/listEflnBas.do");
        
        var rowCount = getReqRowCount(submissionId);
        var rObj = new Object();
        
        if(rowCount == 1){
           rObj.orgGroupCd = getValue("resSchoCdPopup/object/eflnBasList/object/orgGroupCd");
           rObj.schoCd     = getValue("resSchoCdPopup/object/eflnBasList/object/schoCd");
           rObj.schoNm     = getValue("resSchoCdPopup/object/eflnBasList/object/schoNm");
           console.log("comsa");
     	   schoCdCallBack(rObj);
        }else{
     	   searchSchoCd(obj);
        }
        
    }   
    
    function searchSchoCd(obj){
 	   
 	    var eOrgGroupCd = WebSquare.text.BASE64URLEncoder(setEmptyValue(obj.orgGroupCd) );    
        var eSchoCd     = WebSquare.text.BASE64URLEncoder(setEmptyValue(obj.schoCd) );
 	    
        openPopup("schoCdCallBack", "/views/usw/sa/jh/SA_JH_1000.xml"
                , { width      : 530
                ,   height     : 430
                ,   resizable  : false
                ,   scrollbars : false }
                , {  pOrgGroupCd  :  eOrgGroupCd
             	  , pSchoCd      :  eSchoCd}) ;       
    }
    
    /**
     * 교과에서 사용되는 직급코드 설정
     * gb는 추후 필요에 따라 추가
     * 콤보박스에 전체가 사용될 경우 stIdx는 1부터 , 전체가 없는경우 0부터
     */
    function setSaClsfCombo(obj,stIdx,gb){
 	   
 	   obj.addItem( "1111" , "교수" , stIdx++ );
 	   obj.addItem( "1112" , "부교수" , stIdx++ );
 	   obj.addItem( "1113" , "조교수" , stIdx++ );
 	   obj.addItem( "1114" , "전임강사" , stIdx++ );
 	   
 	   obj.addItem( "1211" , "겸임교수" , stIdx++ );
 	   obj.addItem( "1221" , "초빙교수" , stIdx++ );
 	   obj.addItem( "1231" , "학술연구교수" , stIdx++ );
 	   obj.addItem( "1241" , "명예교수" , stIdx++ );
 	   obj.addItem( "1251" , "석좌교수" , stIdx++ );
 	   obj.addItem( "1261" , "객원교수" , stIdx++ );
 	   obj.addItem( "1271" , "대우교수" , stIdx++ );
 	   
 	   obj.addItem( "3111" , "시간강사" , stIdx++ );
 	   
 	   obj.addItem( "4111" , "사무조교" , stIdx++ );
 	   obj.addItem( "4112" , "사무조교B" , stIdx++ );
 	   obj.addItem( "7221" , "계약직" , stIdx++ );
 	   
 	   obj.setSelectedIndex( 0 );
    
    }
    
    /* 통계용 교과목 콤보 박스 */
    function getStcsSubjtCombo(eno, obj){
 	   setValue("reqStcsSubjtCombo/reprPrfsEno", eno);
 	   execSubmission("getCommonDataSubm", "reqStcsSubjtCombo", "resStcsSubjtCombo","/estbLectDtai/listStcsSubjtCombo.do");
 	   
 	   setStcsSubjtCombo(obj);
    }
    
    function setStcsSubjtCombo(obj){
        obj.removeAll( true );
        var nodes = WebSquare.ModelUtil.findInstanceNodes("resStcsSubjtCombo/object/stcsSubjtList/object");
        for(var i=1; i<=nodes.length; i++) {
            obj.addItem(getValue("resStcsSubjtCombo/object/stcsSubjtList/object[" + i + "]/cmcdVal"), getValue("resStcsSubjtCombo/object/stcsSubjtList/object[" + i + "]/cmcdValNm"));
        }
        //obj.setSelectedIndex(0);
        
    }
    
    /*===============================================================
     ** 기능 : 비정규과정 학생 검색
     ** 인수 : pSno(비정규학번-text, oSno(비정규학번 set-object), oStudNm(학생성명 set-object) 
     ** 결과 :  
     **===============================================================*/
    function searchStudentIr(e, pSno, oSno, oStudNm, vPhotoYn){
        if(e.type == "click"){
        	onClickStudentPopUpIr(pSno, oSno, oStudNm, vPhotoYn);
        }else{
        	if(pSno.length<2){
                showMsg("C_I046");
                return;
            }
        	
        	setValue("reqSchIrScrgSno/schIrCorsSno", pSno);
            execSubmission("getCommonDataSubm", "reqSchIrScrgSno", "resSchIrScrgSno","/irScrgBas/searchStudentIr.do");
            
            var vIrCorsSno  = getValue("resSchIrScrgSno/object/irSearchStudent/irCorsSno");
            var vStudNm     = getValue("resSchIrScrgSno/object/irSearchStudent/studNm");
            var vStudentCnt = getValue("resSchIrScrgSno/object/irSearchStudent/studentCnt");
            var isSearch;
            
            if(vStudentCnt == 1){
            	if(oSno != null && oSno != ""){
            		oSno.setValue(vIrCorsSno);
            	}
            	
            	if(oStudNm != null && oStudNm != ""){
            		oStudNm.setValue(vStudNm);  
            	}
            	getIrScrgBasInfo(vIrCorsSno);
            	
            	if(vPhotoYn == "Y"){
            		setStudImg(getValue("resIrStudentInfo/object/irScrgBas/photoFileId"));
            	}
            	
            	setIrStudPopupValueGrid();
            	
            }else{
            	onClickStudentPopUpIr(pSno, oSno, oStudNm, vPhotoYn);
            }
        }
    }
    
    function onClickStudentPopUpIr(pSno, oSno, oStudNm, vPhotoYn){
    	var snoId;
    	var studNmId;
    	
    	if(oSno == "null" || oSno == null){
    		snoId = "";
    	}else{
    		snoId = oSno.getID();
    	}
    	
    	if(oStudNm == "null" || oStudNm == null){
    		studNmId = "";
    	}else{
    		studNmId = oStudNm.getID();
    	}
    	
        var eSno = WebSquare.text.BASE64URLEncoder(pSno);
        var eSnoId = WebSquare.text.BASE64URLEncoder(snoId);
        var eStudNmId = WebSquare.text.BASE64URLEncoder(studNmId);
        var ePhotoYn = WebSquare.text.BASE64URLEncoder(vPhotoYn);
        
        openPopup("setIrStudPopupValue", "/views/usw/ga/ir/GA_IR_2010.xml"
                , { width      : 1020
                  , height     : 450
                  , resizable  : false
                  , scrollbars : false }
                , { pSno              : eSno
                  , pSnoId            : eSnoId
                  , pStudNmId         : eStudNmId
                  , pPhotoYn          : ePhotoYn}) ;
    }
    
    function setIrStudPopupValue(rObj){
    	if(rObj.snoId != "") eval(rObj.snoId).setValue(rObj.irCorsSno);
    	if(rObj.studNmId != "") eval(rObj.studNmId).setValue(rObj.studNm);
    	
    	getIrScrgBasInfo(rObj.irCorsSno);
    	
    	if(rObj.photoYn == "Y"){
    		setStudImg(getValue("resIrStudentInfo/object/irScrgBas/photoFileId"));
    	}
    	
    	if(rObj.snoId == "") setIrStudPopupValueGrid();
    }
    
    function getIrScrgBasInfo(irCorsSno){
    	setValue("wfIrReq/irCorsSno", irCorsSno);
    	execSubmission("getCommonDataSubm", "wfIrReq", "resIrStudentInfo","/irScrgBas/selectIrScrgBas.do");
    }

    function openReport(filename, title, reportId, footer, params, eventFunctions, eventCodes, attributes, enableToolbar, rprnn, htmlPrint,stateLessMode) {
        var parameters = "filename=" + filename + ".mrd"
                       + "&title=" + title
                       + "&reportId=" + reportId
                       + "&footer=" + footer
                       + arrayToQueryString(params, "params")
                       + arrayToQueryString(eventFunctions, "eventFunctions")
                       + arrayToQueryString(eventCodes, "eventCodes")
                       + escapeJavascript(arrayToQueryString(attributes, "attributes"))
                       + "&enableToolbar=" + enableToolbar
                       + "&rprnn=" + rprnn
                       + "&stateLessMode=" + stateLessMode
                       ;

        var encodedMessage = null;
        
        jQuery.ajax({url: "/hex/encode.do",
            type: "post",
            data: parameters,
            async: false,
            success: function(data, status) {
                         if (status == "success") {
                             encodedMessage = data;
                         } else {
                             alert("레포트 생성에 실패했습니다. 관리자에게 문의 바랍니다.");
                         }
                     }
        });
        if (htmlPrint == "1" || htmlPrint == null) {
        	window.open("/views/reportHtml.jsp?p=" + encodedMessage, "_blank", "width=1024, height=768, resizable=yes, location=no, scrollbars=yes");
        } else {
        	window.open("/views/report.jsp?p=" + encodedMessage, "_blank", "width=1024, height=768, resizable=yes, location=no, scrollbars=yes");
        }
    }

    function openManual(filename, menualFilename, title, reportId, footer, params, eventFunctions, eventCodes, attributes, enableToolbar, htmlPrint) {
        var parameters = "filename=" + filename + ".mrd"
                       + "&menualFilename=" + menualFilename + ".mrd"
                       + "&title=" + title
                       + "&reportId=" + reportId
                       + "&footer=" + footer
                       + arrayToQueryString(params, "params")
                       + arrayToQueryString(eventFunctions, "eventFunctions")
                       + arrayToQueryString(eventCodes, "eventCodes")
                       + escapeJavascript(arrayToQueryString(attributes, "attributes"))
                       + "&enableToolbar=" + enableToolbar;

        var encodedMessage = null;
        
        jQuery.ajax({url: "/hex/encode.do",
            type: "post",
            data: parameters,
            async: false,
            success: function(data, status) {
                         if (status == "success") {
                             encodedMessage = data;
                         } else {
                             alert("레포트 생성에 실패했습니다. 관리자에게 문의 바랍니다.");
                         }
                     }
        });
        
        if (htmlPrint == "1" || htmlPrint == null) {
        	window.open("/views/reportHtml.jsp?p=" + encodedMessage, "_blank", "width=1024, height=768, resizable=yes, location=no");
        } else {
        	window.open("/views/report.jsp?p=" + encodedMessage, "_blank", "width=1024, height=768, resizable=yes, location=no");
        } 
    }
    
    function displayReport(iframeObject, filename, title, reportId, footer, params, eventFunctions, eventCodes, attributes, enableToolbar, htmlPrint) {
        var parameters = "filename=" + filename + ".mrd"
                       + "&title=" + title
                       + "&reportId=" + reportId
                       + "&footer=" + footer
                       + arrayToQueryString(params, "params")
                       + arrayToQueryString(eventFunctions, "eventFunctions")
                       + arrayToQueryString(eventCodes, "eventCodes")
                       + escapeJavascript(arrayToQueryString(attributes, "attributes"))
                       + "&enableToolbar=" + enableToolbar;

        var encodedMessage = null;
        
        jQuery.ajax({url: "/hex/encode.do",
            type: "post",
            data: parameters,
            async: false,
            success: function(data, status) {
                         if (status == "success") {
                             encodedMessage = data;
                         } else {
                             alert("레포트 생성에 실패했습니다. 관리자에게 문의 바랍니다.");
                         }
                     }
        });
        
        if (htmlPrint == "1" || htmlPrint == null) {
        	iframeObject.setSrc("/views/reportHtml.jsp?p=" + encodedMessage);
        } else {
        	iframeObject.setSrc("/views/report.jsp?p=" + encodedMessage);
        } 
    }
    
    function convertReportToPDF(iframeObject,filename, pdfFilename, title, reportId, footer, params, eventFunctions, eventCodes, attributes, enableToolbar, htmlPrint) {
        var parameters = "filename=" + filename + ".mrd"
                       + "&pdfFilename=" + pdfFilename
                       + "&title=" + title
                       + "&reportId=" + reportId
                       + "&footer=" + footer
                       + arrayToQueryString(params, "params")
                       + arrayToQueryString(eventFunctions, "eventFunctions")
                       + arrayToQueryString(eventCodes, "eventCodes")
                       + escapeJavascript(arrayToQueryString(attributes, "attributes"))
                       + "&enableToolbar=" + enableToolbar;

        var encodedMessage = null;
        
        jQuery.ajax({url: "/hex/encode.do",
            type: "post",
            data: parameters,
            async: false,
            success: function(data, status) {
                         if (status == "success") {
                             encodedMessage = data;
                         } else {
                             alert("레포트 생성에 실패했습니다. 관리자에게 문의 바랍니다.");
                         }
                     }
        });
        
        if (htmlPrint == "1" || htmlPrint == null) {
        	iframeObject.setSrc("/views/reportHtml.jsp?p=" + encodedMessage);
        } else {
        	iframeObject.setSrc("/views/report.jsp?p=" + encodedMessage);
        }
    }
    
    